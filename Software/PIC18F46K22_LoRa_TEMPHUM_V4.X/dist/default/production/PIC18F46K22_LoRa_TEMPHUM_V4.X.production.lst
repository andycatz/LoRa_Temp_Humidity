

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Sep 18 16:04:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.20
    85                           ; Generated 05/05/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataBANK0
   120  002E78                     __pidataBANK0:
   121                           	callstack 0
   122                           
   123                           ;initializer for _address
   124  002E78  6C                 	db	108
   125  002E79  27                 	db	39
   126  002E7A  DA                 	db	218
   127  002E7B  88                 	db	136
   128  002E7C  2F                 	db	47
   129  002E7D  E4                 	db	228
   130  002E7E  1A                 	db	26
   131  002E7F  F0                 	db	240
   132                           
   133                           	psect	mediumconst
   134  00FC44                     __pmediumconst:
   135                           	callstack 0
   136  00FC44  00                 	db	0
   137  00FC45                     CRC16@wCRCTable:
   138                           	callstack 0
   139  00FC45  0000               	dw	0
   140  00FC47  C0C1               	dw	49345
   141  00FC49  C181               	dw	49537
   142  00FC4B  0140               	dw	320
   143  00FC4D  C301               	dw	49921
   144  00FC4F  03C0               	dw	960
   145  00FC51  0280               	dw	640
   146  00FC53  C241               	dw	49729
   147  00FC55  C601               	dw	50689
   148  00FC57  06C0               	dw	1728
   149  00FC59  0780               	dw	1920
   150  00FC5B  C741               	dw	51009
   151  00FC5D  0500               	dw	1280
   152  00FC5F  C5C1               	dw	50625
   153  00FC61  C481               	dw	50305
   154  00FC63  0440               	dw	1088
   155  00FC65  CC01               	dw	52225
   156  00FC67  0CC0               	dw	3264
   157  00FC69  0D80               	dw	3456
   158  00FC6B  CD41               	dw	52545
   159  00FC6D  0F00               	dw	3840
   160  00FC6F  CFC1               	dw	53185
   161  00FC71  CE81               	dw	52865
   162  00FC73  0E40               	dw	3648
   163  00FC75  0A00               	dw	2560
   164  00FC77  CAC1               	dw	51905
   165  00FC79  CB81               	dw	52097
   166  00FC7B  0B40               	dw	2880
   167  00FC7D  C901               	dw	51457
   168  00FC7F  09C0               	dw	2496
   169  00FC81  0880               	dw	2176
   170  00FC83  C841               	dw	51265
   171  00FC85  D801               	dw	55297
   172  00FC87  18C0               	dw	6336
   173  00FC89  1980               	dw	6528
   174  00FC8B  D941               	dw	55617
   175  00FC8D  1B00               	dw	6912
   176  00FC8F  DBC1               	dw	56257
   177  00FC91  DA81               	dw	55937
   178  00FC93  1A40               	dw	6720
   179  00FC95  1E00               	dw	7680
   180  00FC97  DEC1               	dw	57025
   181  00FC99  DF81               	dw	57217
   182  00FC9B  1F40               	dw	8000
   183  00FC9D  DD01               	dw	56577
   184  00FC9F  1DC0               	dw	7616
   185  00FCA1  1C80               	dw	7296
   186  00FCA3  DC41               	dw	56385
   187  00FCA5  1400               	dw	5120
   188  00FCA7  D4C1               	dw	54465
   189  00FCA9  D581               	dw	54657
   190  00FCAB  1540               	dw	5440
   191  00FCAD  D701               	dw	55041
   192  00FCAF  17C0               	dw	6080
   193  00FCB1  1680               	dw	5760
   194  00FCB3  D641               	dw	54849
   195  00FCB5  D201               	dw	53761
   196  00FCB7  12C0               	dw	4800
   197  00FCB9  1380               	dw	4992
   198  00FCBB  D341               	dw	54081
   199  00FCBD  1100               	dw	4352
   200  00FCBF  D1C1               	dw	53697
   201  00FCC1  D081               	dw	53377
   202  00FCC3  1040               	dw	4160
   203  00FCC5  F001               	dw	61441
   204  00FCC7  30C0               	dw	12480
   205  00FCC9  3180               	dw	12672
   206  00FCCB  F141               	dw	61761
   207  00FCCD  3300               	dw	13056
   208  00FCCF  F3C1               	dw	62401
   209  00FCD1  F281               	dw	62081
   210  00FCD3  3240               	dw	12864
   211  00FCD5  3600               	dw	13824
   212  00FCD7  F6C1               	dw	63169
   213  00FCD9  F781               	dw	63361
   214  00FCDB  3740               	dw	14144
   215  00FCDD  F501               	dw	62721
   216  00FCDF  35C0               	dw	13760
   217  00FCE1  3480               	dw	13440
   218  00FCE3  F441               	dw	62529
   219  00FCE5  3C00               	dw	15360
   220  00FCE7  FCC1               	dw	64705
   221  00FCE9  FD81               	dw	64897
   222  00FCEB  3D40               	dw	15680
   223  00FCED  FF01               	dw	65281
   224  00FCEF  3FC0               	dw	16320
   225  00FCF1  3E80               	dw	16000
   226  00FCF3  FE41               	dw	65089
   227  00FCF5  FA01               	dw	64001
   228  00FCF7  3AC0               	dw	15040
   229  00FCF9  3B80               	dw	15232
   230  00FCFB  FB41               	dw	64321
   231  00FCFD  3900               	dw	14592
   232  00FCFF  F9C1               	dw	63937
   233  00FD01  F881               	dw	63617
   234  00FD03  3840               	dw	14400
   235  00FD05  2800               	dw	10240
   236  00FD07  E8C1               	dw	59585
   237  00FD09  E981               	dw	59777
   238  00FD0B  2940               	dw	10560
   239  00FD0D  EB01               	dw	60161
   240  00FD0F  2BC0               	dw	11200
   241  00FD11  2A80               	dw	10880
   242  00FD13  EA41               	dw	59969
   243  00FD15  EE01               	dw	60929
   244  00FD17  2EC0               	dw	11968
   245  00FD19  2F80               	dw	12160
   246  00FD1B  EF41               	dw	61249
   247  00FD1D  2D00               	dw	11520
   248  00FD1F  EDC1               	dw	60865
   249  00FD21  EC81               	dw	60545
   250  00FD23  2C40               	dw	11328
   251  00FD25  E401               	dw	58369
   252  00FD27  24C0               	dw	9408
   253  00FD29  2580               	dw	9600
   254  00FD2B  E541               	dw	58689
   255  00FD2D  2700               	dw	9984
   256  00FD2F  E7C1               	dw	59329
   257  00FD31  E681               	dw	59009
   258  00FD33  2640               	dw	9792
   259  00FD35  2200               	dw	8704
   260  00FD37  E2C1               	dw	58049
   261  00FD39  E381               	dw	58241
   262  00FD3B  2340               	dw	9024
   263  00FD3D  E101               	dw	57601
   264  00FD3F  21C0               	dw	8640
   265  00FD41  2080               	dw	8320
   266  00FD43  E041               	dw	57409
   267  00FD45  A001               	dw	40961
   268  00FD47  60C0               	dw	24768
   269  00FD49  6180               	dw	24960
   270  00FD4B  A141               	dw	41281
   271  00FD4D  6300               	dw	25344
   272  00FD4F  A3C1               	dw	41921
   273  00FD51  A281               	dw	41601
   274  00FD53  6240               	dw	25152
   275  00FD55  6600               	dw	26112
   276  00FD57  A6C1               	dw	42689
   277  00FD59  A781               	dw	42881
   278  00FD5B  6740               	dw	26432
   279  00FD5D  A501               	dw	42241
   280  00FD5F  65C0               	dw	26048
   281  00FD61  6480               	dw	25728
   282  00FD63  A441               	dw	42049
   283  00FD65  6C00               	dw	27648
   284  00FD67  ACC1               	dw	44225
   285  00FD69  AD81               	dw	44417
   286  00FD6B  6D40               	dw	27968
   287  00FD6D  AF01               	dw	44801
   288  00FD6F  6FC0               	dw	28608
   289  00FD71  6E80               	dw	28288
   290  00FD73  AE41               	dw	44609
   291  00FD75  AA01               	dw	43521
   292  00FD77  6AC0               	dw	27328
   293  00FD79  6B80               	dw	27520
   294  00FD7B  AB41               	dw	43841
   295  00FD7D  6900               	dw	26880
   296  00FD7F  A9C1               	dw	43457
   297  00FD81  A881               	dw	43137
   298  00FD83  6840               	dw	26688
   299  00FD85  7800               	dw	30720
   300  00FD87  B8C1               	dw	47297
   301  00FD89  B981               	dw	47489
   302  00FD8B  7940               	dw	31040
   303  00FD8D  BB01               	dw	47873
   304  00FD8F  7BC0               	dw	31680
   305  00FD91  7A80               	dw	31360
   306  00FD93  BA41               	dw	47681
   307  00FD95  BE01               	dw	48641
   308  00FD97  7EC0               	dw	32448
   309  00FD99  7F80               	dw	32640
   310  00FD9B  BF41               	dw	48961
   311  00FD9D  7D00               	dw	32000
   312  00FD9F  BDC1               	dw	48577
   313  00FDA1  BC81               	dw	48257
   314  00FDA3  7C40               	dw	31808
   315  00FDA5  B401               	dw	46081
   316  00FDA7  74C0               	dw	29888
   317  00FDA9  7580               	dw	30080
   318  00FDAB  B541               	dw	46401
   319  00FDAD  7700               	dw	30464
   320  00FDAF  B7C1               	dw	47041
   321  00FDB1  B681               	dw	46721
   322  00FDB3  7640               	dw	30272
   323  00FDB5  7200               	dw	29184
   324  00FDB7  B2C1               	dw	45761
   325  00FDB9  B381               	dw	45953
   326  00FDBB  7340               	dw	29504
   327  00FDBD  B101               	dw	45313
   328  00FDBF  71C0               	dw	29120
   329  00FDC1  7080               	dw	28800
   330  00FDC3  B041               	dw	45121
   331  00FDC5  5000               	dw	20480
   332  00FDC7  90C1               	dw	37057
   333  00FDC9  9181               	dw	37249
   334  00FDCB  5140               	dw	20800
   335  00FDCD  9301               	dw	37633
   336  00FDCF  53C0               	dw	21440
   337  00FDD1  5280               	dw	21120
   338  00FDD3  9241               	dw	37441
   339  00FDD5  9601               	dw	38401
   340  00FDD7  56C0               	dw	22208
   341  00FDD9  5780               	dw	22400
   342  00FDDB  9741               	dw	38721
   343  00FDDD  5500               	dw	21760
   344  00FDDF  95C1               	dw	38337
   345  00FDE1  9481               	dw	38017
   346  00FDE3  5440               	dw	21568
   347  00FDE5  9C01               	dw	39937
   348  00FDE7  5CC0               	dw	23744
   349  00FDE9  5D80               	dw	23936
   350  00FDEB  9D41               	dw	40257
   351  00FDED  5F00               	dw	24320
   352  00FDEF  9FC1               	dw	40897
   353  00FDF1  9E81               	dw	40577
   354  00FDF3  5E40               	dw	24128
   355  00FDF5  5A00               	dw	23040
   356  00FDF7  9AC1               	dw	39617
   357  00FDF9  9B81               	dw	39809
   358  00FDFB  5B40               	dw	23360
   359  00FDFD  9901               	dw	39169
   360  00FDFF  59C0               	dw	22976
   361  00FE01  5880               	dw	22656
   362  00FE03  9841               	dw	38977
   363  00FE05  8801               	dw	34817
   364  00FE07  48C0               	dw	18624
   365  00FE09  4980               	dw	18816
   366  00FE0B  8941               	dw	35137
   367  00FE0D  4B00               	dw	19200
   368  00FE0F  8BC1               	dw	35777
   369  00FE11  8A81               	dw	35457
   370  00FE13  4A40               	dw	19008
   371  00FE15  4E00               	dw	19968
   372  00FE17  8EC1               	dw	36545
   373  00FE19  8F81               	dw	36737
   374  00FE1B  4F40               	dw	20288
   375  00FE1D  8D01               	dw	36097
   376  00FE1F  4DC0               	dw	19904
   377  00FE21  4C80               	dw	19584
   378  00FE23  8C41               	dw	35905
   379  00FE25  4400               	dw	17408
   380  00FE27  84C1               	dw	33985
   381  00FE29  8581               	dw	34177
   382  00FE2B  4540               	dw	17728
   383  00FE2D  8701               	dw	34561
   384  00FE2F  47C0               	dw	18368
   385  00FE31  4680               	dw	18048
   386  00FE33  8641               	dw	34369
   387  00FE35  8201               	dw	33281
   388  00FE37  42C0               	dw	17088
   389  00FE39  4380               	dw	17280
   390  00FE3B  8341               	dw	33601
   391  00FE3D  4100               	dw	16640
   392  00FE3F  81C1               	dw	33217
   393  00FE41  8081               	dw	32897
   394  00FE43  4040               	dw	16448
   395  00FE45                     __end_ofCRC16@wCRCTable:
   396                           	callstack 0
   397  00FE45                     __powers_:
   398                           	callstack 0
   399  00FE45  0000               	dw	0
   400  00FE47  3F80               	dw	16256
   401  00FE49  0000               	dw	0
   402  00FE4B  4120               	dw	16672
   403  00FE4D  0000               	dw	0
   404  00FE4F  42C8               	dw	17096
   405  00FE51  0000               	dw	0
   406  00FE53  447A               	dw	17530
   407  00FE55  4000               	dw	16384
   408  00FE57  461C               	dw	17948
   409  00FE59  5000               	dw	20480
   410  00FE5B  47C3               	dw	18371
   411  00FE5D  2400               	dw	9216
   412  00FE5F  4974               	dw	18804
   413  00FE61  9680               	dw	38528
   414  00FE63  4B18               	dw	19224
   415  00FE65  BC20               	dw	48160
   416  00FE67  4CBE               	dw	19646
   417  00FE69  6B28               	dw	27432
   418  00FE6B  4E6E               	dw	20078
   419  00FE6D  02F9               	dw	761
   420  00FE6F  5015               	dw	20501
   421  00FE71  78EC               	dw	30956
   422  00FE73  60AD               	dw	24749
   423  00FE75  F2CA               	dw	62154
   424  00FE77  7149               	dw	29001
   425  00FE79                     __end_of__powers_:
   426                           	callstack 0
   427  00FE79                     __npowers_:
   428                           	callstack 0
   429  00FE79  0000               	dw	0
   430  00FE7B  3F80               	dw	16256
   431  00FE7D  CCCD               	dw	52429
   432  00FE7F  3DCC               	dw	15820
   433  00FE81  D70A               	dw	55050
   434  00FE83  3C23               	dw	15395
   435  00FE85  126F               	dw	4719
   436  00FE87  3A83               	dw	14979
   437  00FE89  B717               	dw	46871
   438  00FE8B  38D1               	dw	14545
   439  00FE8D  C5AC               	dw	50604
   440  00FE8F  3727               	dw	14119
   441  00FE91  37BD               	dw	14269
   442  00FE93  3586               	dw	13702
   443  00FE95  BF95               	dw	49045
   444  00FE97  33D6               	dw	13270
   445  00FE99  CC77               	dw	52343
   446  00FE9B  322B               	dw	12843
   447  00FE9D  705F               	dw	28767
   448  00FE9F  3089               	dw	12425
   449  00FEA1  E6FF               	dw	59135
   450  00FEA3  2EDB               	dw	11995
   451  00FEA5  E508               	dw	58632
   452  00FEA7  1E3C               	dw	7740
   453  00FEA9  4260               	dw	16992
   454  00FEAB  0DA2               	dw	3490
   455  00FEAD                     __end_of__npowers_:
   456                           	callstack 0
   457  00FEAD                     _hexpowers:
   458                           	callstack 0
   459  00FEAD  0001               	dw	1
   460  00FEAF  0000               	dw	0
   461  00FEB1  0010               	dw	16
   462  00FEB3  0000               	dw	0
   463  00FEB5  0100               	dw	256
   464  00FEB7  0000               	dw	0
   465  00FEB9  1000               	dw	4096
   466  00FEBB  0000               	dw	0
   467  00FEBD  0000               	dw	0
   468  00FEBF  0001               	dw	1
   469  00FEC1  0000               	dw	0
   470  00FEC3  0010               	dw	16
   471  00FEC5  0000               	dw	0
   472  00FEC7  0100               	dw	256
   473  00FEC9  0000               	dw	0
   474  00FECB  1000               	dw	4096
   475  00FECD                     __end_of_hexpowers:
   476                           	callstack 0
   477  00FECD                     _dpowers:
   478                           	callstack 0
   479  00FECD  0001               	dw	1
   480  00FECF  0000               	dw	0
   481  00FED1  000A               	dw	10
   482  00FED3  0000               	dw	0
   483  00FED5  0064               	dw	100
   484  00FED7  0000               	dw	0
   485  00FED9  03E8               	dw	1000
   486  00FEDB  0000               	dw	0
   487  00FEDD  2710               	dw	10000
   488  00FEDF  0000               	dw	0
   489  00FEE1  86A0               	dw	34464
   490  00FEE3  0001               	dw	1
   491  00FEE5  4240               	dw	16960
   492  00FEE7  000F               	dw	15
   493  00FEE9  9680               	dw	38528
   494  00FEEB  0098               	dw	152
   495  00FEED  E100               	dw	57600
   496  00FEEF  05F5               	dw	1525
   497  00FEF1  CA00               	dw	51712
   498  00FEF3  3B9A               	dw	15258
   499  00FEF5                     __end_of_dpowers:
   500                           	callstack 0
   501  0000                     _ANSELCbits	set	3898
   502  0000                     _VREFCON0bits	set	3906
   503  0000                     _ANSELBbits	set	3897
   504  0000                     _ANSELEbits	set	3900
   505  0000                     _ANSELAbits	set	3896
   506  0000                     _PMD1bits	set	3902
   507  0000                     _PMD0bits	set	3903
   508  0000                     _PMD2bits	set	3901
   509  0000                     _ANSELDbits	set	3899
   510  0000                     _PIR3bits	set	4004
   511  0000                     _SSPBUF	set	4041
   512  0000                     _SSP1BUF	set	4041
   513  0000                     _PIR1bits	set	3998
   514  0000                     _SSP1CON2bits	set	4037
   515  0000                     _SSP1CON2	set	4037
   516  0000                     _SSP1STAT	set	4039
   517  0000                     _PORTCbits	set	3970
   518  0000                     _SSP1ADD	set	4040
   519  0000                     _SSP1CON1	set	4038
   520  0000                     _SSP2BUF	set	3951
   521  0000                     _LATCbits	set	3979
   522  0000                     _SSP2STATbits	set	3949
   523  0000                     _SSP2CON1bits	set	3948
   524  0000                     _TXREG2	set	3955
   525  0000                     _SPBRG2	set	3957
   526  0000                     _SPBRGH2	set	3958
   527  0000                     _BAUDCON2bits	set	3952
   528  0000                     _RCSTA2bits	set	3953
   529  0000                     _TXSTA2bits	set	3954
   530  0000                     _PORTBbits	set	3969
   531  0000                     _IOCBbits	set	3938
   532  0000                     _LATDbits	set	3980
   533  0000                     _ADRESL	set	4035
   534  0000                     _ADRESH	set	4036
   535  0000                     _ADCON2bits	set	4032
   536  0000                     _ADCON0bits	set	4034
   537  0000                     _ADCON1bits	set	4033
   538  0000                     _TRISBbits	set	3987
   539  0000                     _TRISEbits	set	3990
   540  0000                     _LATAbits	set	3977
   541  0000                     _TRISAbits	set	3986
   542  0000                     _TRISCbits	set	3988
   543  0000                     _TRISDbits	set	3989
   544  0000                     _OSCTUNEbits	set	3995
   545  0000                     _OSCCON2bits	set	4050
   546  0000                     _OSCCONbits	set	4051
   547  0000                     _INTCONbits	set	4082
   548  0000                     _LATEbits	set	3981
   549  0000                     _ACKEN1	set	32300
   550  0000                     _ACKDT1	set	32301
   551  0000                     _RCEN1	set	32299
   552  0000                     _SSP2IF	set	32039
   553  0000                     _TRMT2	set	31633
   554  00FEF5                     STR_10:
   555  00FEF5  57                 	db	87	;'W'
   556  00FEF6  61                 	db	97	;'a'
   557  00FEF7  69                 	db	105	;'i'
   558  00FEF8  74                 	db	116	;'t'
   559  00FEF9  20                 	db	32
   560  00FEFA  66                 	db	102	;'f'
   561  00FEFB  6F                 	db	111	;'o'
   562  00FEFC  72                 	db	114	;'r'
   563  00FEFD  20                 	db	32
   564  00FEFE  65                 	db	101	;'e'
   565  00FEFF  6E                 	db	110	;'n'
   566  00FF00  64                 	db	100	;'d'
   567  00FF01  20                 	db	32
   568  00FF02  6F                 	db	111	;'o'
   569  00FF03  66                 	db	102	;'f'
   570  00FF04  20                 	db	32
   571  00FF05  74                 	db	116	;'t'
   572  00FF06  72                 	db	114	;'r'
   573  00FF07  61                 	db	97	;'a'
   574  00FF08  6E                 	db	110	;'n'
   575  00FF09  73                 	db	115	;'s'
   576  00FF0A  6D                 	db	109	;'m'
   577  00FF0B  69                 	db	105	;'i'
   578  00FF0C  73                 	db	115	;'s'
   579  00FF0D  73                 	db	115	;'s'
   580  00FF0E  69                 	db	105	;'i'
   581  00FF0F  6F                 	db	111	;'o'
   582  00FF10  6E                 	db	110	;'n'
   583  00FF11  2E                 	db	46
   584  00FF12  2E                 	db	46
   585  00FF13  2E                 	db	46
   586  00FF14  0D                 	db	13
   587  00FF15  0A                 	db	10
   588  00FF16  00                 	db	0
   589  00FF17  54                 	db	84	;'T'
   590  00FF18  72                 	db	114	;'r'
   591  00FF19  61                 	db	97	;'a'
   592  00FF1A  6E                 	db	110	;'n'
   593  00FF1B  73                 	db	115	;'s'
   594  00FF1C  6D                 	db	109	;'m'
   595  00FF1D  69                 	db	105	;'i'
   596  00FF1E  74                 	db	116	;'t'
   597  00FF1F  74                 	db	116	;'t'
   598  00FF20  69                 	db	105	;'i'
   599  00FF21  6E                 	db	110	;'n'
   600  00FF22  67                 	db	103	;'g'
   601  00FF23  2E                 	db	46
   602  00FF24  2E                 	db	46
   603  00FF25  2E                 	db	46
   604  00FF26  2E                 	db	46
   605  00FF27  20                 	db	32
   606  00FF28  00                 	db	0
   607  00FF29                     STR_8:
   608  00FF29  54                 	db	84	;'T'
   609  00FF2A  72                 	db	114	;'r'
   610  00FF2B  61                 	db	97	;'a'
   611  00FF2C  6E                 	db	110	;'n'
   612  00FF2D  73                 	db	115	;'s'
   613  00FF2E  6D                 	db	109	;'m'
   614  00FF2F  69                 	db	105	;'i'
   615  00FF30  74                 	db	116	;'t'
   616  00FF31  74                 	db	116	;'t'
   617  00FF32  69                 	db	105	;'i'
   618  00FF33  6E                 	db	110	;'n'
   619  00FF34  67                 	db	103	;'g'
   620  00FF35  2E                 	db	46
   621  00FF36  2E                 	db	46
   622  00FF37  2E                 	db	46
   623  00FF38  0D                 	db	13
   624  00FF39  0A                 	db	10
   625  00FF3A  00                 	db	0
   626  00FF3B                     STR_25:
   627  00FF3B  30                 	db	48	;'0'
   628  00FF3C  31                 	db	49	;'1'
   629  00FF3D  32                 	db	50	;'2'
   630  00FF3E  33                 	db	51	;'3'
   631  00FF3F  34                 	db	52	;'4'
   632  00FF40  35                 	db	53	;'5'
   633  00FF41  36                 	db	54	;'6'
   634  00FF42  37                 	db	55	;'7'
   635  00FF43  38                 	db	56	;'8'
   636  00FF44  39                 	db	57	;'9'
   637  00FF45  41                 	db	65	;'A'
   638  00FF46  42                 	db	66	;'B'
   639  00FF47  43                 	db	67	;'C'
   640  00FF48  44                 	db	68	;'D'
   641  00FF49  45                 	db	69	;'E'
   642  00FF4A  46                 	db	70	;'F'
   643  00FF4B  00                 	db	0
   644  00FF4C                     STR_3:
   645  00FF4C  45                 	db	69	;'E'
   646  00FF4D  58                 	db	88	;'X'
   647  00FF4E  54                 	db	84	;'T'
   648  00FF4F  20                 	db	32
   649  00FF50  54                 	db	84	;'T'
   650  00FF51  45                 	db	69	;'E'
   651  00FF52  4D                 	db	77	;'M'
   652  00FF53  50                 	db	80	;'P'
   653  00FF54  20                 	db	32
   654  00FF55  25                 	db	37
   655  00FF56  64                 	db	100	;'d'
   656  00FF57  0D                 	db	13
   657  00FF58  0A                 	db	10
   658  00FF59  00                 	db	0
   659  00FF5A                     STR_17:
   660  00FF5A  4E                 	db	78	;'N'
   661  00FF5B  6F                 	db	111	;'o'
   662  00FF5C  20                 	db	32
   663  00FF5D  4D                 	db	77	;'M'
   664  00FF5E  41                 	db	65	;'A'
   665  00FF5F  58                 	db	88	;'X'
   666  00FF60  33                 	db	51	;'3'
   667  00FF61  31                 	db	49	;'1'
   668  00FF62  38                 	db	56	;'8'
   669  00FF63  36                 	db	54	;'6'
   670  00FF64  35                 	db	53	;'5'
   671  00FF65  21                 	db	33
   672  00FF66  00                 	db	0
   673  00FF67                     STR_23:
   674  00FF67  4C                 	db	76	;'L'
   675  00FF68  46                 	db	70	;'F'
   676  00FF69  54                 	db	84	;'T'
   677  00FF6A  4C                 	db	76	;'L'
   678  00FF6B  53                 	db	83	;'S'
   679  00FF6C  42                 	db	66	;'B'
   680  00FF6D  20                 	db	32
   681  00FF6E  25                 	db	37
   682  00FF6F  64                 	db	100	;'d'
   683  00FF70  0D                 	db	13
   684  00FF71  0A                 	db	10
   685  00FF72  00                 	db	0
   686  00FF73                     STR_20:
   687  00FF73  48                 	db	72	;'H'
   688  00FF74  46                 	db	70	;'F'
   689  00FF75  54                 	db	84	;'T'
   690  00FF76  4D                 	db	77	;'M'
   691  00FF77  53                 	db	83	;'S'
   692  00FF78  42                 	db	66	;'B'
   693  00FF79  20                 	db	32
   694  00FF7A  25                 	db	37
   695  00FF7B  64                 	db	100	;'d'
   696  00FF7C  0D                 	db	13
   697  00FF7D  0A                 	db	10
   698  00FF7E  00                 	db	0
   699  00FF7F                     STR_22:
   700  00FF7F  4C                 	db	76	;'L'
   701  00FF80  46                 	db	70	;'F'
   702  00FF81  54                 	db	84	;'T'
   703  00FF82  4D                 	db	77	;'M'
   704  00FF83  53                 	db	83	;'S'
   705  00FF84  42                 	db	66	;'B'
   706  00FF85  20                 	db	32
   707  00FF86  25                 	db	37
   708  00FF87  64                 	db	100	;'d'
   709  00FF88  0D                 	db	13
   710  00FF89  0A                 	db	10
   711  00FF8A  00                 	db	0
   712  00FF8B                     STR_24:
   713  00FF8B  53                 	db	83	;'S'
   714  00FF8C  54                 	db	84	;'T'
   715  00FF8D  41                 	db	65	;'A'
   716  00FF8E  54                 	db	84	;'T'
   717  00FF8F  55                 	db	85	;'U'
   718  00FF90  53                 	db	83	;'S'
   719  00FF91  20                 	db	32
   720  00FF92  25                 	db	37
   721  00FF93  64                 	db	100	;'d'
   722  00FF94  0D                 	db	13
   723  00FF95  0A                 	db	10
   724  00FF96  00                 	db	0
   725  00FF97  52                 	db	82	;'R'
   726  00FF98  65                 	db	101	;'e'
   727  00FF99  67                 	db	103	;'g'
   728  00FF9A  20                 	db	32
   729  00FF9B  25                 	db	37
   730  00FF9C  58                 	db	88	;'X'
   731  00FF9D  3A                 	db	58	;':'
   732  00FF9E  25                 	db	37
   733  00FF9F  58                 	db	88	;'X'
   734  00FFA0  0D                 	db	13
   735  00FFA1  0A                 	db	10
   736  00FFA2  00                 	db	0
   737  00FFA3                     STR_4:
   738  00FFA3  45                 	db	69	;'E'
   739  00FFA4  58                 	db	88	;'X'
   740  00FFA5  54                 	db	84	;'T'
   741  00FFA6  20                 	db	32
   742  00FFA7  52                 	db	82	;'R'
   743  00FFA8  48                 	db	72	;'H'
   744  00FFA9  20                 	db	32
   745  00FFAA  25                 	db	37
   746  00FFAB  64                 	db	100	;'d'
   747  00FFAC  0D                 	db	13
   748  00FFAD  0A                 	db	10
   749  00FFAE  00                 	db	0
   750  00FFAF                     STR_7:
   751  00FFAF  54                 	db	84	;'T'
   752  00FFB0  41                 	db	65	;'A'
   753  00FFB1  43                 	db	67	;'C'
   754  00FFB2  48                 	db	72	;'H'
   755  00FFB3  4F                 	db	79	;'O'
   756  00FFB4  20                 	db	32
   757  00FFB5  25                 	db	37
   758  00FFB6  64                 	db	100	;'d'
   759  00FFB7  0D                 	db	13
   760  00FFB8  0A                 	db	10
   761  00FFB9  00                 	db	0
   762  00FFBA                     STR_5:
   763  00FFBA  56                 	db	86	;'V'
   764  00FFBB  53                 	db	83	;'S'
   765  00FFBC  55                 	db	85	;'U'
   766  00FFBD  50                 	db	80	;'P'
   767  00FFBE  50                 	db	80	;'P'
   768  00FFBF  20                 	db	32
   769  00FFC0  25                 	db	37
   770  00FFC1  64                 	db	100	;'d'
   771  00FFC2  0D                 	db	13
   772  00FFC3  0A                 	db	10
   773  00FFC4  00                 	db	0
   774  00FFC5  54                 	db	84	;'T'
   775  00FFC6  58                 	db	88	;'X'
   776  00FFC7  20                 	db	32
   777  00FFC8  4D                 	db	77	;'M'
   778  00FFC9  6F                 	db	111	;'o'
   779  00FFCA  64                 	db	100	;'d'
   780  00FFCB  65                 	db	101	;'e'
   781  00FFCC  0D                 	db	13
   782  00FFCD  0A                 	db	10
   783  00FFCE  00                 	db	0
   784  00FFCF                     STR_6:
   785  00FFCF  56                 	db	86	;'V'
   786  00FFD0  46                 	db	70	;'F'
   787  00FFD1  41                 	db	65	;'A'
   788  00FFD2  4E                 	db	78	;'N'
   789  00FFD3  20                 	db	32
   790  00FFD4  25                 	db	37
   791  00FFD5  64                 	db	100	;'d'
   792  00FFD6  0D                 	db	13
   793  00FFD7  0A                 	db	10
   794  00FFD8  00                 	db	0
   795  00FFD9                     STR_1:
   796  00FFD9  42                 	db	66	;'B'
   797  00FFDA  41                 	db	65	;'A'
   798  00FFDB  54                 	db	84	;'T'
   799  00FFDC  54                 	db	84	;'T'
   800  00FFDD  20                 	db	32
   801  00FFDE  25                 	db	37
   802  00FFDF  64                 	db	100	;'d'
   803  00FFE0  0D                 	db	13
   804  00FFE1  0A                 	db	10
   805  00FFE2  00                 	db	0
   806  00FFE3                     STR_9:
   807  00FFE3  54                 	db	84	;'T'
   808  00FFE4  58                 	db	88	;'X'
   809  00FFE5  46                 	db	70	;'F'
   810  00FFE6  3A                 	db	58	;':'
   811  00FFE7  20                 	db	32
   812  00FFE8  25                 	db	37
   813  00FFE9  66                 	db	102	;'f'
   814  00FFEA  0D                 	db	13
   815  00FFEB  0A                 	db	10
   816  00FFEC  00                 	db	0
   817  00FFED                     STR_11:
   818  00FFED  54                 	db	84	;'T'
   819  00FFEE  58                 	db	88	;'X'
   820  00FFEF  20                 	db	32
   821  00FFF0  46                 	db	70	;'F'
   822  00FFF1  61                 	db	97	;'a'
   823  00FFF2  69                 	db	105	;'i'
   824  00FFF3  6C                 	db	108	;'l'
   825  00FFF4  0D                 	db	13
   826  00FFF5  0A                 	db	10
   827  00FFF6  00                 	db	0
   828  00FFF7                     STR_12:
   829  00FFF7  44                 	db	68	;'D'
   830  00FFF8  6F                 	db	111	;'o'
   831  00FFF9  6E                 	db	110	;'n'
   832  00FFFA  65                 	db	101	;'e'
   833  00FFFB  2E                 	db	46
   834  00FFFC  0D                 	db	13
   835  00FFFD  0A                 	db	10
   836  00FFFE  00                 	db	0
   837  00FFFF  00                 	db	0	; dummy byte at the end
   838  0000                     
   839                           ; #config settings
   840                           
   841                           	psect	cinit
   842  002A14                     __pcinit:
   843                           	callstack 0
   844  002A14                     start_initialization:
   845                           	callstack 0
   846  002A14                     __initialization:
   847                           	callstack 0
   848                           
   849                           ; Initialize objects allocated to BANK0 (8 bytes)
   850                           ; load TBLPTR registers with __pidataBANK0
   851  002A14  0E78               	movlw	low __pidataBANK0
   852  002A16  6EF6               	movwf	tblptrl,c
   853  002A18  0E2E               	movlw	high __pidataBANK0
   854  002A1A  6EF7               	movwf	tblptrh,c
   855  002A1C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   856  002A1E  6EF8               	movwf	tblptru,c
   857  002A20  EE00  F0CF         	lfsr	0,__pdataBANK0
   858  002A24  EE10 F008          	lfsr	1,8
   859  002A28                     copy_data0:
   860  002A28  0009               	tblrd		*+
   861  002A2A  CFF5 FFEE          	movff	tablat,postinc0
   862  002A2E  50E5               	movf	postdec1,w,c
   863  002A30  50E1               	movf	fsr1l,w,c
   864  002A32  E1FA               	bnz	copy_data0
   865                           
   866                           ; Clear objects allocated to BANK0 (74 bytes)
   867  002A34  EE00  F060         	lfsr	0,__pbssBANK0
   868  002A38  0E4A               	movlw	74
   869  002A3A                     clear_0:
   870  002A3A  6AEE               	clrf	postinc0,c
   871  002A3C  06E8               	decf	wreg,f,c
   872  002A3E  E1FD               	bnz	clear_0
   873                           
   874                           ; Clear objects allocated to COMRAM (2 bytes)
   875  002A40  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   876  002A42  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   877  002A44                     end_of_initialization:
   878                           	callstack 0
   879  002A44                     __end_of__initialization:
   880                           	callstack 0
   881  002A44  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   882  002A46  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   883  002A48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   884  002A4A  6EF8               	movwf	tblptru,c
   885  002A4C  0100               	movlb	0
   886  002A4E  EFDD  F00C         	goto	_main	;jump to C main() function
   887                           
   888                           	psect	bssCOMRAM
   889  00005C                     __pbssCOMRAM:
   890                           	callstack 0
   891  00005C                     _tempStatus:
   892                           	callstack 0
   893  00005C                     	ds	1
   894  00005D                     _temp_config_byte:
   895                           	callstack 0
   896  00005D                     	ds	1
   897                           
   898                           	psect	bssBANK0
   899  000060                     __pbssBANK0:
   900                           	callstack 0
   901  000060                     _fanTachoCount:
   902                           	callstack 0
   903  000060                     	ds	4
   904  000064                     _messageCount:
   905                           	callstack 0
   906  000064                     	ds	4
   907  000068                     _rh:
   908                           	callstack 0
   909  000068                     	ds	2
   910  00006A                     _extTemp:
   911                           	callstack 0
   912  00006A                     	ds	2
   913  00006C                     _vfan:
   914                           	callstack 0
   915  00006C                     	ds	2
   916  00006E                     _vsupply:
   917                           	callstack 0
   918  00006E                     	ds	2
   919  000070                     _temp:
   920                           	callstack 0
   921  000070                     	ds	2
   922  000072                     _batt:
   923                           	callstack 0
   924  000072                     	ds	2
   925  000074                     _i2cFault:
   926                           	callstack 0
   927  000074                     	ds	1
   928  000075                     _tempLowFault:
   929                           	callstack 0
   930  000075                     	ds	1
   931  000076                     _tempHighFault:
   932                           	callstack 0
   933  000076                     	ds	1
   934  000077                     _tempStatusBit:
   935                           	callstack 0
   936  000077                     	ds	1
   937  000078                     _txData:
   938                           	callstack 0
   939  000078                     	ds	50
   940                           
   941                           	psect	dataBANK0
   942  0000CF                     __pdataBANK0:
   943                           	callstack 0
   944  0000CF                     _address:
   945                           	callstack 0
   946  0000CF                     	ds	8
   947                           
   948                           	psect	cstackBANK0
   949  0000AA                     __pcstackBANK0:
   950                           	callstack 0
   951  0000AA                     _printf$3331:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x0
   955  0000AA                     	ds	4
   956  0000AE                     printf@idx:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x4
   960  0000AE                     	ds	1
   961  0000AF                     printf@ap:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x5
   965  0000AF                     	ds	1
   966  0000B0                     printf@flag:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x6
   970  0000B0                     	ds	2
   971  0000B2                     printf@prec:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x8
   975  0000B2                     	ds	2
   976  0000B4                     printf@eexp:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0xA
   980  0000B4                     	ds	2
   981  0000B6                     printf@tmpval:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0xC
   985  0000B6                     	ds	4
   986  0000BA                     printf@val:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x10
   990  0000BA                     	ds	4
   991  0000BE                     printf@fval:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x14
   995  0000BE                     	ds	4
   996  0000C2                     printf@c:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x18
  1000  0000C2                     	ds	1
  1001  0000C3                     ??_transmitData:
  1002  0000C3                     MAX31865readData@HFTMSB:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x19
  1006  0000C3                     	ds	1
  1007  0000C4                     transmitData@flags:
  1008                           	callstack 0
  1009  0000C4                     MAX31865readData@LFTMSB:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x1A
  1013  0000C4                     	ds	1
  1014  0000C5                     MAX31865readData@MSB:
  1015                           	callstack 0
  1016  0000C5                     transmitData@calcCRC:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1B
  1020  0000C5                     	ds	1
  1021  0000C6                     MAX31865readData@HFTLSB:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x1C
  1025  0000C6                     	ds	1
  1026  0000C7                     transmitData@i_1025:
  1027                           	callstack 0
  1028  0000C7                     MAX31865readData@LFTLSB:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x1D
  1032  0000C7                     	ds	1
  1033  0000C8                     transmitData@j:
  1034                           	callstack 0
  1035  0000C8                     MAX31865readData@LSB:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x1E
  1039  0000C8                     	ds	1
  1040  0000C9                     transmitData@i:
  1041                           	callstack 0
  1042  0000C9                     MAX31865readData@tries:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x1F
  1046  0000C9                     	ds	2
  1047  0000CB                     ??_main:
  1048                           
  1049                           ; 1 bytes @ 0x21
  1050  0000CB                     	ds	2
  1051  0000CD                     main@i:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x23
  1055  0000CD                     	ds	2
  1056                           
  1057                           	psect	cstackCOMRAM
  1058  000001                     __pcstackCOMRAM:
  1059                           	callstack 0
  1060  000001                     Isr@bValue:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x0
  1064  000001                     	ds	1
  1065  000002                     ??_I2C1_Check_Data_Stuck:
  1066  000002                     ??_LoRaReset:
  1067  000002                     ??_I2C1_Wait:
  1068  000002                     ?_readBattery:
  1069                           	callstack 0
  1070  000002                     ?_readTemperature:
  1071                           	callstack 0
  1072  000002                     ?_readVSupply:
  1073                           	callstack 0
  1074  000002                     ?_readVFan:
  1075                           	callstack 0
  1076  000002                     ?_CRC16:
  1077                           	callstack 0
  1078  000002                     ?___wmul:
  1079                           	callstack 0
  1080  000002                     ?___awmod:
  1081                           	callstack 0
  1082  000002                     ?__tdiv_to_l_:
  1083                           	callstack 0
  1084  000002                     ?__div_to_l_:
  1085                           	callstack 0
  1086  000002                     ?___lldiv:
  1087                           	callstack 0
  1088  000002                     ?___flneg:
  1089                           	callstack 0
  1090  000002                     ?___xxtofl:
  1091                           	callstack 0
  1092  000002                     USART2_Start@baudrate:
  1093                           	callstack 0
  1094  000002                     putch@data:
  1095                           	callstack 0
  1096  000002                     SPI2WriteByte@data:
  1097                           	callstack 0
  1098  000002                     SPI2ReadByte@address:
  1099                           	callstack 0
  1100  000002                     MAX31865writeByte@data:
  1101                           	callstack 0
  1102  000002                     CRC16@nData:
  1103                           	callstack 0
  1104  000002                     ___lbmod@divisor:
  1105                           	callstack 0
  1106  000002                     ___wmul@multiplier:
  1107                           	callstack 0
  1108  000002                     ___awmod@dividend:
  1109                           	callstack 0
  1110  000002                     ___lldiv@dividend:
  1111                           	callstack 0
  1112  000002                     __div_to_l_@f1:
  1113                           	callstack 0
  1114  000002                     ___fleq@ff1:
  1115                           	callstack 0
  1116  000002                     ___flge@ff1:
  1117                           	callstack 0
  1118  000002                     ___flneg@f1:
  1119                           	callstack 0
  1120  000002                     __tdiv_to_l_@f1:
  1121                           	callstack 0
  1122  000002                     ___xxtofl@val:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x1
  1126  000002                     	ds	1
  1127  000003                     SPI2ReadByte@dataByte:
  1128                           	callstack 0
  1129  000003                     I2C1_Check_Data_Stuck@i:
  1130                           	callstack 0
  1131  000003                     I2C1_Wait@tries:
  1132                           	callstack 0
  1133  000003                     MAX31865writeByte@regAddress:
  1134                           	callstack 0
  1135  000003                     ___lbmod@dividend:
  1136                           	callstack 0
  1137  000003                     CRC16@wLength:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x2
  1141  000003                     	ds	1
  1142  000004                     ??_readBattery:
  1143  000004                     ??_readTemperature:
  1144  000004                     ??_readVSupply:
  1145  000004                     ??_readVFan:
  1146  000004                     SPI2WriteByte@address:
  1147                           	callstack 0
  1148  000004                     LoRaGetIRQFlags@regValue:
  1149                           	callstack 0
  1150  000004                     I2C1_Write_Byte_Read_Ack@d:
  1151                           	callstack 0
  1152  000004                     I2C1_Read_Byte@a:
  1153                           	callstack 0
  1154  000004                     ___lbmod@counter:
  1155                           	callstack 0
  1156  000004                     MAX31865writeByte@tries:
  1157                           	callstack 0
  1158  000004                     ___wmul@multiplicand:
  1159                           	callstack 0
  1160  000004                     ___awmod@divisor:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x3
  1164  000004                     	ds	1
  1165  000005                     ??_CRC16:
  1166  000005                     writeOpModeRegister@regValue:
  1167                           	callstack 0
  1168  000005                     I2C1_Write_Byte_Read_Ack@tries:
  1169                           	callstack 0
  1170  000005                     I2C1_Read_Byte@temp:
  1171                           	callstack 0
  1172  000005                     ___lbmod@rem:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x4
  1176  000005                     	ds	1
  1177  000006                     ??___xxtofl:
  1178  000006                     ?_readADS1110:
  1179                           	callstack 0
  1180  000006                     setLoRaMode@regValue:
  1181                           	callstack 0
  1182  000006                     LoRaStandbyMode@regValue:
  1183                           	callstack 0
  1184  000006                     LoRaSleepMode@regValue:
  1185                           	callstack 0
  1186  000006                     MAX31865writeConfigByte@config:
  1187                           	callstack 0
  1188  000006                     writeADS1110@config:
  1189                           	callstack 0
  1190  000006                     ___awmod@counter:
  1191                           	callstack 0
  1192  000006                     ___lbdiv@divisor:
  1193                           	callstack 0
  1194  000006                     readBattery@result:
  1195                           	callstack 0
  1196  000006                     readTemperature@result:
  1197                           	callstack 0
  1198  000006                     readVSupply@result:
  1199                           	callstack 0
  1200  000006                     readVFan@result:
  1201                           	callstack 0
  1202  000006                     ___wmul@product:
  1203                           	callstack 0
  1204  000006                     ___lldiv@divisor:
  1205                           	callstack 0
  1206  000006                     __div_to_l_@f2:
  1207                           	callstack 0
  1208  000006                     ___fleq@ff2:
  1209                           	callstack 0
  1210  000006                     ___flge@ff2:
  1211                           	callstack 0
  1212  000006                     __tdiv_to_l_@f2:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x5
  1216  000006                     	ds	1
  1217  000007                     ??_LoRaOptimalLoad:
  1218  000007                     writeADS1110@address:
  1219                           	callstack 0
  1220  000007                     CRC16@nTemp:
  1221                           	callstack 0
  1222  000007                     ___awmod@sign:
  1223                           	callstack 0
  1224  000007                     ___lbdiv@dividend:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x6
  1228  000007                     	ds	1
  1229  000008                     ??_readADS1110:
  1230  000008                     ?___awdiv:
  1231                           	callstack 0
  1232  000008                     LoRaOptimalLoad@syncWord:
  1233                           	callstack 0
  1234  000008                     ___lbdiv@counter:
  1235                           	callstack 0
  1236  000008                     CRC16@wCRCWord:
  1237                           	callstack 0
  1238  000008                     ___awdiv@dividend:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x7
  1242  000008                     	ds	1
  1243  000009                     ___lbdiv@quotient:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x8
  1247  000009                     	ds	1
  1248  00000A                     ??__tdiv_to_l_:
  1249  00000A                     ??___fleq:
  1250  00000A                     ??___flge:
  1251  00000A                     ___xxtofl@sign:
  1252                           	callstack 0
  1253  00000A                     ___awdiv@divisor:
  1254                           	callstack 0
  1255  00000A                     ___lldiv@quotient:
  1256                           	callstack 0
  1257  00000A                     __div_to_l_@quot:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x9
  1261  00000A                     	ds	1
  1262  00000B                     readADS1110@address:
  1263                           	callstack 0
  1264  00000B                     ___xxtofl@exp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0xA
  1268  00000B                     	ds	1
  1269  00000C                     readADS1110@msb:
  1270                           	callstack 0
  1271  00000C                     ___awdiv@counter:
  1272                           	callstack 0
  1273  00000C                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0xB
  1277  00000C                     	ds	1
  1278  00000D                     readADS1110@lsb:
  1279                           	callstack 0
  1280  00000D                     ___awdiv@sign:
  1281                           	callstack 0
  1282  00000D                     __tdiv_to_l_@quot:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0xC
  1286  00000D                     	ds	1
  1287  00000E                     ?_readRH:
  1288                           	callstack 0
  1289  00000E                     ___lldiv@counter:
  1290                           	callstack 0
  1291  00000E                     __div_to_l_@cntr:
  1292                           	callstack 0
  1293  00000E                     ___awdiv@quotient:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0xD
  1297  00000E                     	ds	1
  1298  00000F                     ?___llmod:
  1299                           	callstack 0
  1300  00000F                     __div_to_l_@exp1:
  1301                           	callstack 0
  1302  00000F                     I2C1_Initialize@c:
  1303                           	callstack 0
  1304  00000F                     ___llmod@dividend:
  1305                           	callstack 0
  1306                           
  1307                           ; 4 bytes @ 0xE
  1308  00000F                     	ds	1
  1309  000010                     ?___fldiv:
  1310                           	callstack 0
  1311  000010                     ?___flmul:
  1312                           	callstack 0
  1313  000010                     readRH@rhTemp:
  1314                           	callstack 0
  1315  000010                     ___fldiv@b:
  1316                           	callstack 0
  1317  000010                     ___flmul@b:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0xF
  1321  000010                     	ds	1
  1322  000011                     __tdiv_to_l_@cntr:
  1323                           	callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x10
  1326  000011                     	ds	1
  1327  000012                     __tdiv_to_l_@exp1:
  1328                           	callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x11
  1331  000012                     	ds	1
  1332  000013                     ??_I2C1_Initialize:
  1333  000013                     ___llmod@divisor:
  1334                           	callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x12
  1337  000013                     	ds	1
  1338  000014                     ___fldiv@a:
  1339                           	callstack 0
  1340  000014                     ___flmul@a:
  1341                           	callstack 0
  1342                           
  1343                           ; 4 bytes @ 0x13
  1344  000014                     	ds	3
  1345  000017                     ___llmod@counter:
  1346                           	callstack 0
  1347                           
  1348                           ; 1 bytes @ 0x16
  1349  000017                     	ds	1
  1350  000018                     ??___fldiv:
  1351  000018                     ??___flmul:
  1352                           
  1353                           ; 1 bytes @ 0x17
  1354  000018                     	ds	4
  1355  00001C                     ___flmul@sign:
  1356                           	callstack 0
  1357  00001C                     ___fldiv@rem:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x1B
  1361  00001C                     	ds	1
  1362  00001D                     ___flmul@aexp:
  1363                           	callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x1C
  1366  00001D                     	ds	1
  1367  00001E                     ___flmul@grs:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x1D
  1371  00001E                     	ds	2
  1372  000020                     ___fldiv@sign:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x1F
  1376  000020                     	ds	1
  1377  000021                     ___fldiv@new_exp:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x20
  1381  000021                     	ds	1
  1382  000022                     ___flmul@bexp:
  1383                           	callstack 0
  1384                           
  1385                           ; 1 bytes @ 0x21
  1386  000022                     	ds	1
  1387  000023                     ___fldiv@grs:
  1388                           	callstack 0
  1389  000023                     ___flmul@prod:
  1390                           	callstack 0
  1391                           
  1392                           ; 4 bytes @ 0x22
  1393  000023                     	ds	4
  1394  000027                     ___fldiv@bexp:
  1395                           	callstack 0
  1396  000027                     ___flmul@temp:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x26
  1400  000027                     	ds	1
  1401  000028                     ___fldiv@aexp:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x27
  1405  000028                     	ds	1
  1406  000029                     ?_LoRaGetFrequency:
  1407                           	callstack 0
  1408  000029                     ?_fround:
  1409                           	callstack 0
  1410  000029                     ?_scale:
  1411                           	callstack 0
  1412  000029                     ?___fltol:
  1413                           	callstack 0
  1414  000029                     ___fltol@f1:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x28
  1418  000029                     	ds	4
  1419  00002D                     ??_LoRaGetFrequency:
  1420  00002D                     ??_fround:
  1421  00002D                     ??___fltol:
  1422  00002D                     _scale$3330:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x2C
  1426  00002D                     	ds	2
  1427  00002F                     _fround$3329:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x2E
  1431  00002F                     	ds	2
  1432  000031                     scale@scl:
  1433                           	callstack 0
  1434  000031                     ___fltol@sign1:
  1435                           	callstack 0
  1436                           
  1437                           ; 1 bytes @ 0x30
  1438  000031                     	ds	1
  1439  000032                     ___fltol@exp1:
  1440                           	callstack 0
  1441                           
  1442                           ; 1 bytes @ 0x31
  1443  000032                     	ds	1
  1444  000033                     LoRaSetFrequency@freqMHz:
  1445                           	callstack 0
  1446  000033                     _fround$3328:
  1447                           	callstack 0
  1448                           
  1449                           ; 4 bytes @ 0x32
  1450  000033                     	ds	4
  1451  000037                     LoRaSetFrequency@msb:
  1452                           	callstack 0
  1453  000037                     fround@prec:
  1454                           	callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x36
  1457  000037                     	ds	1
  1458  000038                     ?___fladd:
  1459                           	callstack 0
  1460  000038                     LoRaSetFrequency@mid:
  1461                           	callstack 0
  1462  000038                     ___fladd@b:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x37
  1466  000038                     	ds	1
  1467  000039                     LoRaSetFrequency@lsb:
  1468                           	callstack 0
  1469  000039                     LoRaGetFrequency@intermediate:
  1470                           	callstack 0
  1471                           
  1472                           ; 4 bytes @ 0x38
  1473  000039                     	ds	1
  1474  00003A                     LoRaSetFrequency@intermediate:
  1475                           	callstack 0
  1476                           
  1477                           ; 4 bytes @ 0x39
  1478  00003A                     	ds	2
  1479  00003C                     ___fladd@a:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0x3B
  1483  00003C                     	ds	1
  1484  00003D                     LoRaGetFrequency@freqMHz:
  1485                           	callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x3C
  1488  00003D                     	ds	1
  1489  00003E                     LoRaStart@freq:
  1490                           	callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x3D
  1493  00003E                     	ds	2
  1494  000040                     ??___fladd:
  1495                           
  1496                           ; 1 bytes @ 0x3F
  1497  000040                     	ds	1
  1498  000041                     LoRaGetFrequency@msb:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x40
  1502  000041                     	ds	1
  1503  000042                     LoRaStart@syncWord:
  1504                           	callstack 0
  1505  000042                     LoRaGetFrequency@mid:
  1506                           	callstack 0
  1507                           
  1508                           ; 1 bytes @ 0x41
  1509  000042                     	ds	1
  1510  000043                     ??_LoRaStart:
  1511  000043                     LoRaGetFrequency@lsb:
  1512                           	callstack 0
  1513                           
  1514                           ; 1 bytes @ 0x42
  1515  000043                     	ds	1
  1516  000044                     ___fladd@signs:
  1517                           	callstack 0
  1518                           
  1519                           ; 1 bytes @ 0x43
  1520  000044                     	ds	1
  1521  000045                     ___fladd@aexp:
  1522                           	callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x44
  1525  000045                     	ds	1
  1526  000046                     ___fladd@bexp:
  1527                           	callstack 0
  1528                           
  1529                           ; 1 bytes @ 0x45
  1530  000046                     	ds	1
  1531  000047                     ___fladd@grs:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x46
  1535  000047                     	ds	1
  1536  000048                     ?___flsub:
  1537                           	callstack 0
  1538  000048                     ___flsub@b:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x47
  1542  000048                     	ds	4
  1543  00004C                     ___flsub@a:
  1544                           	callstack 0
  1545                           
  1546                           ; 4 bytes @ 0x4B
  1547  00004C                     	ds	4
  1548  000050                     ?_printf:
  1549                           	callstack 0
  1550  000050                     printf@f:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x4F
  1554  000050                     	ds	6
  1555  000056                     ??_printf:
  1556                           
  1557                           ; 1 bytes @ 0x55
  1558  000056                     	ds	2
  1559  000058                     ?_MAX31865readData:
  1560                           	callstack 0
  1561  000058                     LoRaTXMode@regValue:
  1562                           	callstack 0
  1563                           
  1564                           ; 1 bytes @ 0x57
  1565  000058                     	ds	1
  1566  000059                     LoRaTXData@data:
  1567                           	callstack 0
  1568                           
  1569                           ; 1 bytes @ 0x58
  1570  000059                     	ds	1
  1571  00005A                     ??_MAX31865readData:
  1572  00005A                     LoRaTXData@dataLength:
  1573                           	callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x59
  1576  00005A                     	ds	1
  1577  00005B                     LoRaTXData@i:
  1578                           	callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x5A
  1581  00005B                     	ds	1
  1582                           
  1583 ;;
  1584 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1585 ;;
  1586 ;; *************** function _main *****************
  1587 ;; Defined at:
  1588 ;;		line 90 in file "main.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  i               2   35[BANK0 ] unsigned int 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 3F/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;Total ram usage:        4 bytes
  1607 ;; Hardware stack levels required when called:    7
  1608 ;; This function calls:
  1609 ;;		_MAX31865readData
  1610 ;;		_MAX31865writeConfigByte
  1611 ;;		_configureIO
  1612 ;;		_configureSPI
  1613 ;;		_printf
  1614 ;;		_readBattery
  1615 ;;		_readRH
  1616 ;;		_readTemperature
  1617 ;;		_readVFan
  1618 ;;		_readVSupply
  1619 ;;		_setupInterruptPin
  1620 ;;		_transmitData
  1621 ;; This function is called by:
  1622 ;;		Startup code after reset
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text0
  1627  0019BA                     __ptext0:
  1628                           	callstack 0
  1629  0019BA                     _main:
  1630                           	callstack 24
  1631                           
  1632                           ;main.c: 91: setupInterruptPin();
  1633                           
  1634                           ;incstack = 0
  1635  0019BA  EC30  F017         	call	_setupInterruptPin	;wreg free
  1636  0019BE                     l5626:
  1637                           
  1638                           ;main.c: 93: configureIO();
  1639  0019BE  ECE1  F013         	call	_configureIO	;wreg free
  1640  0019C2  0004               	clrwdt		;# 
  1641                           
  1642                           ;main.c: 95: LATEbits.LATE1=1;
  1643  0019C4  828D               	bsf	141,1,c	;volatile
  1644                           
  1645                           ;main.c: 96: configureSPI();
  1646  0019C6  EC04  F017         	call	_configureSPI	;wreg free
  1647                           
  1648                           ;main.c: 97: _delay((unsigned long)((10)*(64000000/4000.0)));
  1649  0019CA  0ED0               	movlw	208
  1650  0019CC  0100               	movlb	0	; () banked
  1651  0019CE  6FCB               	movwf	??_main& (0+255),b
  1652  0019D0  0EC9               	movlw	201
  1653  0019D2                     u4847:
  1654  0019D2  2EE8               	decfsz	wreg,f,c
  1655  0019D4  D7FE               	bra	u4847
  1656  0019D6  2FCB               	decfsz	??_main& (0+255),f,b
  1657  0019D8  D7FC               	bra	u4847
  1658  0019DA  D000               	nop2	
  1659                           
  1660                           ;main.c: 98: MAX31865writeConfigByte(0xC1);
  1661  0019DC  0EC1               	movlw	193
  1662  0019DE  EC1D  F017         	call	_MAX31865writeConfigByte
  1663                           
  1664                           ;main.c: 99: _delay((unsigned long)((100)*(64000000/4000.0)));
  1665  0019E2  0E09               	movlw	9
  1666  0019E4  0100               	movlb	0	; () banked
  1667  0019E6  6FCC               	movwf	(??_main+1)& (0+255),b
  1668  0019E8  0E1E               	movlw	30
  1669  0019EA  6FCB               	movwf	??_main& (0+255),b
  1670  0019EC  0EE4               	movlw	228
  1671  0019EE                     u4857:
  1672  0019EE  2EE8               	decfsz	wreg,f,c
  1673  0019F0  D7FE               	bra	u4857
  1674  0019F2  2FCB               	decfsz	??_main& (0+255),f,b
  1675  0019F4  D7FC               	bra	u4857
  1676  0019F6  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1677  0019F8  D7FA               	bra	u4857
  1678  0019FA  F000               	nop	
  1679                           
  1680                           ;main.c: 100: batt = readBattery();
  1681  0019FC  EC06  F016         	call	_readBattery	;wreg free
  1682  001A00  C002  F072         	movff	?_readBattery,_batt
  1683  001A04  C003  F073         	movff	?_readBattery+1,_batt+1
  1684                           
  1685                           ;main.c: 101: temp = readTemperature();
  1686  001A08  ECEF  F015         	call	_readTemperature	;wreg free
  1687  001A0C  C002  F070         	movff	?_readTemperature,_temp
  1688  001A10  C003  F071         	movff	?_readTemperature+1,_temp+1
  1689                           
  1690                           ;main.c: 102: vsupply = readVSupply();
  1691  001A14  ECBD  F015         	call	_readVSupply	;wreg free
  1692  001A18  C002  F06E         	movff	?_readVSupply,_vsupply
  1693  001A1C  C003  F06F         	movff	?_readVSupply+1,_vsupply+1
  1694                           
  1695                           ;main.c: 103: vfan = readVFan();
  1696  001A20  ECD6  F015         	call	_readVFan	;wreg free
  1697  001A24  C002  F06C         	movff	?_readVFan,_vfan
  1698  001A28  C003  F06D         	movff	?_readVFan+1,_vfan+1
  1699                           
  1700                           ;main.c: 104: extTemp = MAX31865readData();
  1701  001A2C  ECC1  F00B         	call	_MAX31865readData	;wreg free
  1702  001A30  C058  F06A         	movff	?_MAX31865readData,_extTemp
  1703  001A34  C059  F06B         	movff	?_MAX31865readData+1,_extTemp+1
  1704                           
  1705                           ;main.c: 105: rh = readRH();
  1706  001A38  ECE4  F016         	call	_readRH	;wreg free
  1707  001A3C  C00E  F068         	movff	?_readRH,_rh
  1708  001A40  C00F  F069         	movff	?_readRH+1,_rh+1
  1709                           
  1710                           ;main.c: 108: if(batt>2100/4){
  1711  001A44  0E0E               	movlw	14
  1712  001A46  0100               	movlb	0	; () banked
  1713  001A48  5D72               	subwf	_batt& (0+255),w,b
  1714  001A4A  0E02               	movlw	2
  1715  001A4C  5973               	subwfb	(_batt+1)& (0+255),w,b
  1716  001A4E  A0D8               	btfss	status,0,c
  1717  001A50  D005               	goto	l156
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 109: INTCONbits.GIE=0;
  1721  001A52  9EF2               	bcf	242,7,c	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 110: transmitData();
  1725  001A54  ECF2  F00D         	call	_transmitData	;wreg free
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 111: INTCONbits.GIE=1;
  1729  001A58  8EF2               	bsf	242,7,c	;volatile
  1730                           
  1731                           ;main.c: 112: }
  1732  001A5A  D054               	goto	l5670
  1733  001A5C                     l156:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main.c: 113: else{;main.c: 115: LATEbits.LATE2=1;
  1737  001A5C  848D               	bsf	141,2,c	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 116: _delay((unsigned long)((300)*(64000000/4000.0)));
  1741  001A5E  0E19               	movlw	25
  1742  001A60  0100               	movlb	0	; () banked
  1743  001A62  6FCC               	movwf	(??_main+1)& (0+255),b
  1744  001A64  0E5A               	movlw	90
  1745  001A66  6FCB               	movwf	??_main& (0+255),b
  1746  001A68  0EB1               	movlw	177
  1747  001A6A                     u4867:
  1748  001A6A  2EE8               	decfsz	wreg,f,c
  1749  001A6C  D7FE               	bra	u4867
  1750  001A6E  2FCB               	decfsz	??_main& (0+255),f,b
  1751  001A70  D7FC               	bra	u4867
  1752  001A72  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1753  001A74  D7FA               	bra	u4867
  1754  001A76  D000               	nop2	
  1755                           
  1756                           ;main.c: 117: LATEbits.LATE2=0;
  1757  001A78  948D               	bcf	141,2,c	;volatile
  1758                           
  1759                           ;main.c: 118: _delay((unsigned long)((300)*(64000000/4000.0)));
  1760  001A7A  0E19               	movlw	25
  1761  001A7C  0100               	movlb	0	; () banked
  1762  001A7E  6FCC               	movwf	(??_main+1)& (0+255),b
  1763  001A80  0E5A               	movlw	90
  1764  001A82  6FCB               	movwf	??_main& (0+255),b
  1765  001A84  0EB1               	movlw	177
  1766  001A86                     u4877:
  1767  001A86  2EE8               	decfsz	wreg,f,c
  1768  001A88  D7FE               	bra	u4877
  1769  001A8A  2FCB               	decfsz	??_main& (0+255),f,b
  1770  001A8C  D7FC               	bra	u4877
  1771  001A8E  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1772  001A90  D7FA               	bra	u4877
  1773  001A92  D000               	nop2	
  1774                           
  1775                           ;main.c: 119: LATEbits.LATE2=1;
  1776  001A94  848D               	bsf	141,2,c	;volatile
  1777                           
  1778                           ;main.c: 120: _delay((unsigned long)((300)*(64000000/4000.0)));
  1779  001A96  0E19               	movlw	25
  1780  001A98  0100               	movlb	0	; () banked
  1781  001A9A  6FCC               	movwf	(??_main+1)& (0+255),b
  1782  001A9C  0E5A               	movlw	90
  1783  001A9E  6FCB               	movwf	??_main& (0+255),b
  1784  001AA0  0EB1               	movlw	177
  1785  001AA2                     u4887:
  1786  001AA2  2EE8               	decfsz	wreg,f,c
  1787  001AA4  D7FE               	bra	u4887
  1788  001AA6  2FCB               	decfsz	??_main& (0+255),f,b
  1789  001AA8  D7FC               	bra	u4887
  1790  001AAA  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1791  001AAC  D7FA               	bra	u4887
  1792  001AAE  D000               	nop2	
  1793                           
  1794                           ;main.c: 121: LATEbits.LATE2=0;
  1795  001AB0  948D               	bcf	141,2,c	;volatile
  1796                           
  1797                           ;main.c: 122: _delay((unsigned long)((300)*(64000000/4000.0)));
  1798  001AB2  0E19               	movlw	25
  1799  001AB4  0100               	movlb	0	; () banked
  1800  001AB6  6FCC               	movwf	(??_main+1)& (0+255),b
  1801  001AB8  0E5A               	movlw	90
  1802  001ABA  6FCB               	movwf	??_main& (0+255),b
  1803  001ABC  0EB1               	movlw	177
  1804  001ABE                     u4897:
  1805  001ABE  2EE8               	decfsz	wreg,f,c
  1806  001AC0  D7FE               	bra	u4897
  1807  001AC2  2FCB               	decfsz	??_main& (0+255),f,b
  1808  001AC4  D7FC               	bra	u4897
  1809  001AC6  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1810  001AC8  D7FA               	bra	u4897
  1811  001ACA  D000               	nop2	
  1812                           
  1813                           ;main.c: 123: LATEbits.LATE2=1;
  1814  001ACC  848D               	bsf	141,2,c	;volatile
  1815                           
  1816                           ;main.c: 124: _delay((unsigned long)((300)*(64000000/4000.0)));
  1817  001ACE  0E19               	movlw	25
  1818  001AD0  0100               	movlb	0	; () banked
  1819  001AD2  6FCC               	movwf	(??_main+1)& (0+255),b
  1820  001AD4  0E5A               	movlw	90
  1821  001AD6  6FCB               	movwf	??_main& (0+255),b
  1822  001AD8  0EB1               	movlw	177
  1823  001ADA                     u4907:
  1824  001ADA  2EE8               	decfsz	wreg,f,c
  1825  001ADC  D7FE               	bra	u4907
  1826  001ADE  2FCB               	decfsz	??_main& (0+255),f,b
  1827  001AE0  D7FC               	bra	u4907
  1828  001AE2  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1829  001AE4  D7FA               	bra	u4907
  1830  001AE6  D000               	nop2	
  1831                           
  1832                           ;main.c: 125: LATEbits.LATE2=0;
  1833  001AE8  948D               	bcf	141,2,c	;volatile
  1834                           
  1835                           ;main.c: 126: _delay((unsigned long)((300)*(64000000/4000.0)));
  1836  001AEA  0E19               	movlw	25
  1837  001AEC  0100               	movlb	0	; () banked
  1838  001AEE  6FCC               	movwf	(??_main+1)& (0+255),b
  1839  001AF0  0E5A               	movlw	90
  1840  001AF2  6FCB               	movwf	??_main& (0+255),b
  1841  001AF4  0EB1               	movlw	177
  1842  001AF6                     u4917:
  1843  001AF6  2EE8               	decfsz	wreg,f,c
  1844  001AF8  D7FE               	bra	u4917
  1845  001AFA  2FCB               	decfsz	??_main& (0+255),f,b
  1846  001AFC  D7FC               	bra	u4917
  1847  001AFE  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1848  001B00  D7FA               	bra	u4917
  1849  001B02  D000               	nop2	
  1850  001B04                     l5670:
  1851                           
  1852                           ;main.c: 133: printf("BATT %d\r\n", batt);
  1853  001B04  0ED9               	movlw	low STR_1
  1854  001B06  6E50               	movwf	printf@f^0,c
  1855  001B08  0EFF               	movlw	high STR_1
  1856  001B0A  6E51               	movwf	(printf@f+1)^0,c
  1857  001B0C  C072  F052         	movff	_batt,?_printf+2
  1858  001B10  C073  F053         	movff	_batt+1,?_printf+3
  1859  001B14  EC18  F000         	call	_printf	;wreg free
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 134: printf("TEMP %d\r\n", temp);
  1863  001B18  0E50               	movlw	low (STR_3+4)
  1864  001B1A  6E50               	movwf	printf@f^0,c
  1865  001B1C  0EFF               	movlw	high (STR_3+4)
  1866  001B1E  6E51               	movwf	(printf@f+1)^0,c
  1867  001B20  C070  F052         	movff	_temp,?_printf+2
  1868  001B24  C071  F053         	movff	_temp+1,?_printf+3
  1869  001B28  EC18  F000         	call	_printf	;wreg free
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 135: printf("EXT TEMP %d\r\n", extTemp);
  1873  001B2C  0E4C               	movlw	low STR_3
  1874  001B2E  6E50               	movwf	printf@f^0,c
  1875  001B30  0EFF               	movlw	high STR_3
  1876  001B32  6E51               	movwf	(printf@f+1)^0,c
  1877  001B34  C06A  F052         	movff	_extTemp,?_printf+2
  1878  001B38  C06B  F053         	movff	_extTemp+1,?_printf+3
  1879  001B3C  EC18  F000         	call	_printf	;wreg free
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 136: printf("EXT RH %d\r\n", rh);
  1883  001B40  0EA3               	movlw	low STR_4
  1884  001B42  6E50               	movwf	printf@f^0,c
  1885  001B44  0EFF               	movlw	high STR_4
  1886  001B46  6E51               	movwf	(printf@f+1)^0,c
  1887  001B48  C068  F052         	movff	_rh,?_printf+2
  1888  001B4C  C069  F053         	movff	_rh+1,?_printf+3
  1889  001B50  EC18  F000         	call	_printf	;wreg free
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 137: printf("VSUPP %d\r\n", vsupply);
  1893  001B54  0EBA               	movlw	low STR_5
  1894  001B56  6E50               	movwf	printf@f^0,c
  1895  001B58  0EFF               	movlw	high STR_5
  1896  001B5A  6E51               	movwf	(printf@f+1)^0,c
  1897  001B5C  C06E  F052         	movff	_vsupply,?_printf+2
  1898  001B60  C06F  F053         	movff	_vsupply+1,?_printf+3
  1899  001B64  EC18  F000         	call	_printf	;wreg free
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main.c: 138: printf("VFAN %d\r\n", vfan);
  1903  001B68  0ECF               	movlw	low STR_6
  1904  001B6A  6E50               	movwf	printf@f^0,c
  1905  001B6C  0EFF               	movlw	high STR_6
  1906  001B6E  6E51               	movwf	(printf@f+1)^0,c
  1907  001B70  C06C  F052         	movff	_vfan,?_printf+2
  1908  001B74  C06D  F053         	movff	_vfan+1,?_printf+3
  1909  001B78  EC18  F000         	call	_printf	;wreg free
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main.c: 139: printf("TACHO %d\r\n", fanTachoCount);
  1913  001B7C  0EAF               	movlw	low STR_7
  1914  001B7E  6E50               	movwf	printf@f^0,c
  1915  001B80  0EFF               	movlw	high STR_7
  1916  001B82  6E51               	movwf	(printf@f+1)^0,c
  1917  001B84  C060  F052         	movff	_fanTachoCount,?_printf+2
  1918  001B88  C061  F053         	movff	_fanTachoCount+1,?_printf+3
  1919  001B8C  C062  F054         	movff	_fanTachoCount+2,?_printf+4
  1920  001B90  C063  F055         	movff	_fanTachoCount+3,?_printf+5
  1921  001B94  EC18  F000         	call	_printf	;wreg free
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 140: };main.c: 143: LATEbits.LATE1=0;
  1925  001B98  928D               	bcf	141,1,c	;volatile
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;main.c: 144: fanTachoCount=0;
  1929  001B9A  0E00               	movlw	0
  1930  001B9C  6F60               	movwf	_fanTachoCount& (0+255),b
  1931  001B9E  0E00               	movlw	0
  1932  001BA0  6F61               	movwf	(_fanTachoCount+1)& (0+255),b
  1933  001BA2  0E00               	movlw	0
  1934  001BA4  6F62               	movwf	(_fanTachoCount+2)& (0+255),b
  1935  001BA6  0E00               	movlw	0
  1936  001BA8  6F63               	movwf	(_fanTachoCount+3)& (0+255),b
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;main.c: 145: for(uint16_t i=0;i<60;i++){
  1940  001BAA  0E00               	movlw	0
  1941  001BAC  6FCE               	movwf	(main@i+1)& (0+255),b
  1942  001BAE  0E00               	movlw	0
  1943  001BB0  6FCD               	movwf	main@i& (0+255),b
  1944  001BB2                     l5694:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;main.c: 146: _delay((unsigned long)((1000)*(64000000/4000.0)));
  1948  001BB2  0E52               	movlw	82
  1949  001BB4  0100               	movlb	0	; () banked
  1950  001BB6  6FCC               	movwf	(??_main+1)& (0+255),b
  1951  001BB8  0E2B               	movlw	43
  1952  001BBA  6FCB               	movwf	??_main& (0+255),b
  1953  001BBC  0E00               	movlw	0
  1954  001BBE                     u4927:
  1955  001BBE  2EE8               	decfsz	wreg,f,c
  1956  001BC0  D7FE               	bra	u4927
  1957  001BC2  2FCB               	decfsz	??_main& (0+255),f,b
  1958  001BC4  D7FC               	bra	u4927
  1959  001BC6  2FCC               	decfsz	(??_main+1)& (0+255),f,b
  1960  001BC8  D7FA               	bra	u4927
  1961  001BCA  F000               	nop	
  1962  001BCC  0004               	clrwdt		;# 
  1963  001BCE  0100               	movlb	0	; () banked
  1964  001BD0  4BCD               	infsnz	main@i& (0+255),f,b
  1965  001BD2  2BCE               	incf	(main@i+1)& (0+255),f,b
  1966  001BD4  51CE               	movf	(main@i+1)& (0+255),w,b
  1967  001BD6  E105               	bnz	u4830
  1968  001BD8  0E3C               	movlw	60
  1969  001BDA  5DCD               	subwf	main@i& (0+255),w,b
  1970  001BDC  B0D8               	btfsc	status,0,c
  1971  001BDE  D6EF               	goto	l5626
  1972  001BE0  D7E8               	goto	l5694
  1973  001BE2                     u4830:
  1974  001BE2  D6ED               	goto	l5626
  1975  001BE4                     __end_of_main:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _transmitData *****************
  1979 ;; Defined at:
  1980 ;;		line 153 in file "main.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  flags           1   26[BANK0 ] unsigned char 
  1985 ;;  i               1   29[BANK0 ] unsigned char 
  1986 ;;  i               1   31[BANK0 ] unsigned char 
  1987 ;;  calcCRC         2   27[BANK0 ] unsigned short 
  1988 ;;  j               1   30[BANK0 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 3F/0
  1995 ;;		On exit  : 3F/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;Total ram usage:        7 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    6
  2005 ;; This function calls:
  2006 ;;		_CRC16
  2007 ;;		_LoRaClearIRQFlags
  2008 ;;		_LoRaGetFrequency
  2009 ;;		_LoRaGetIRQFlags
  2010 ;;		_LoRaSleepMode
  2011 ;;		_LoRaStart
  2012 ;;		_LoRaTXData
  2013 ;;		_printf
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text1
  2020  001BE4                     __ptext1:
  2021                           	callstack 0
  2022  001BE4                     _transmitData:
  2023                           	callstack 24
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;main.c: 155: printf("Transmitting...\r\n");
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;incstack = 0
  2030  001BE4  0E29               	movlw	low STR_8
  2031  001BE6  6E50               	movwf	printf@f^0,c
  2032  001BE8  0EFF               	movlw	high STR_8
  2033  001BEA  6E51               	movwf	(printf@f+1)^0,c
  2034  001BEC  EC18  F000         	call	_printf	;wreg free
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;main.c: 156: };main.c: 160: txData[0] = 50;
  2038  001BF0  0E32               	movlw	50
  2039  001BF2  6F78               	movwf	_txData& (0+255),b
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 161: txData[1] = 0x00;
  2043  001BF4  0E00               	movlw	0
  2044  001BF6  6F79               	movwf	(_txData+1)& (0+255),b
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;main.c: 162: txData[2] = 0x03;
  2048  001BF8  0E03               	movlw	3
  2049  001BFA  6F7A               	movwf	(_txData+2)& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 163: for(uint8_t i=0;i<8;i++){
  2053  001BFC  0E00               	movlw	0
  2054  001BFE  6FC9               	movwf	transmitData@i& (0+255),b
  2055  001C00                     l5516:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main.c: 164: txData[i+3] = address[i];
  2059  001C00  51C9               	movf	transmitData@i& (0+255),w,b
  2060  001C02  0FCF               	addlw	low _address
  2061  001C04  6ED9               	movwf	fsr2l,c
  2062  001C06  6ADA               	clrf	fsr2h,c
  2063  001C08  51C9               	movf	transmitData@i& (0+255),w,b
  2064  001C0A  0F7B               	addlw	low (_txData+3)
  2065  001C0C  6EE1               	movwf	fsr1l,c
  2066  001C0E  6AE2               	clrf	fsr1h,c
  2067  001C10  CFDF FFE7          	movff	indf2,indf1
  2068                           
  2069                           ; BSR set to: 0
  2070  001C14  2BC9               	incf	transmitData@i& (0+255),f,b
  2071                           
  2072                           ; BSR set to: 0
  2073  001C16  0E07               	movlw	7
  2074  001C18  65C9               	cpfsgt	transmitData@i& (0+255),b
  2075  001C1A  D7F2               	goto	l5516
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 165: };main.c: 166: txData[11] = 0x04;
  2079  001C1C  0E04               	movlw	4
  2080  001C1E  6F83               	movwf	(_txData+11)& (0+255),b
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;main.c: 169: txData[12]=(uint8_t)((messageCount>>24)&0xFF);
  2084  001C20  C067  F084         	movff	_messageCount+3,_txData+12
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;main.c: 170: txData[13]=(uint8_t)((messageCount>>16)&0xFF);
  2088  001C24  C066  F085         	movff	_messageCount+2,_txData+13
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;main.c: 171: txData[14]=(uint8_t)((messageCount>>8)&0xFF);
  2092  001C28  C065  F086         	movff	_messageCount+1,_txData+14
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;main.c: 172: txData[15]=(uint8_t)((messageCount & 0xFF));
  2096  001C2C  C064  F087         	movff	_messageCount,_txData+15
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;main.c: 175: txData[16]=(uint8_t)((batt>>8)&0xFF);
  2100  001C30  C073  F088         	movff	_batt+1,_txData+16
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;main.c: 176: txData[17]=(uint8_t)(batt & 0xFF);
  2104  001C34  C072  F089         	movff	_batt,_txData+17
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;main.c: 179: txData[18]=(uint8_t)((temp>>8)&0xFF);
  2108  001C38  C071  F08A         	movff	_temp+1,_txData+18
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 180: txData[19]=(uint8_t)(temp & 0xFF);
  2112  001C3C  C070  F08B         	movff	_temp,_txData+19
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;main.c: 182: txData[20] = (uint8_t)((vsupply>>8)&0xFF);
  2116  001C40  C06F  F08C         	movff	_vsupply+1,_txData+20
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;main.c: 183: txData[21] = (uint8_t)((vsupply & 0xFF));
  2120  001C44  C06E  F08D         	movff	_vsupply,_txData+21
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 185: txData[22] = (uint8_t)((vfan>>8)&0xFF);
  2124  001C48  C06D  F08E         	movff	_vfan+1,_txData+22
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;main.c: 186: txData[23] = (uint8_t)((vfan & 0xFF));
  2128  001C4C  C06C  F08F         	movff	_vfan,_txData+23
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 189: txData[24]=(uint8_t)((extTemp>>8)&0xFF);
  2132  001C50  C06B  F090         	movff	_extTemp+1,_txData+24
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 190: txData[25]=(uint8_t)((extTemp)&0xFF);
  2136  001C54  C06A  F091         	movff	_extTemp,_txData+25
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 193: txData[26]=(uint8_t)((rh>>8)&0xFF);
  2140  001C58  C069  F092         	movff	_rh+1,_txData+26
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;main.c: 194: txData[27]=(uint8_t)((rh & 0xFF));
  2144  001C5C  C068  F093         	movff	_rh,_txData+27
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;main.c: 197: txData[28] = (uint8_t)((fanTachoCount>>24)&0xFF);
  2148  001C60  C063  F094         	movff	_fanTachoCount+3,_txData+28
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 198: txData[29] = (uint8_t)((fanTachoCount>>16)&0xFF);
  2152  001C64  C062  F095         	movff	_fanTachoCount+2,_txData+29
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 199: txData[30] = (uint8_t)((fanTachoCount>>8)&0xFF);
  2156  001C68  C061  F096         	movff	_fanTachoCount+1,_txData+30
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;main.c: 200: txData[31] = (uint8_t)((fanTachoCount & 0xFF));
  2160  001C6C  C060  F097         	movff	_fanTachoCount,_txData+31
  2161                           
  2162                           ;main.c: 203: for(uint8_t i=32;i<48;i++){
  2163  001C70  0E20               	movlw	32
  2164  001C72  6FC7               	movwf	transmitData@i_1025& (0+255),b
  2165  001C74                     l5568:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 204: txData[i] = 0;
  2169  001C74  51C7               	movf	transmitData@i_1025& (0+255),w,b
  2170  001C76  0F78               	addlw	low _txData
  2171  001C78  6ED9               	movwf	fsr2l,c
  2172  001C7A  6ADA               	clrf	fsr2h,c
  2173  001C7C  0E00               	movlw	0
  2174  001C7E  6EDF               	movwf	indf2,c
  2175                           
  2176                           ; BSR set to: 0
  2177  001C80  2BC7               	incf	transmitData@i_1025& (0+255),f,b
  2178                           
  2179                           ; BSR set to: 0
  2180  001C82  0E2F               	movlw	47
  2181  001C84  65C7               	cpfsgt	transmitData@i_1025& (0+255),b
  2182  001C86  D7F6               	goto	l5568
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;main.c: 205: };main.c: 208: unsigned short int calcCRC = CRC16(txData, 50-2);
  2186  001C88  0E78               	movlw	low _txData
  2187  001C8A  6E02               	movwf	CRC16@nData^0,c
  2188  001C8C  0E00               	movlw	0
  2189  001C8E  6E04               	movwf	(CRC16@wLength+1)^0,c
  2190  001C90  0E30               	movlw	48
  2191  001C92  6E03               	movwf	CRC16@wLength^0,c
  2192  001C94  EC42  F014         	call	_CRC16	;wreg free
  2193  001C98  C002  F0C5         	movff	?_CRC16,transmitData@calcCRC
  2194  001C9C  C003  F0C6         	movff	?_CRC16+1,transmitData@calcCRC+1
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 209: txData[49] = (calcCRC&0xFF00u)>>8u;
  2198  001CA0  C0C6  F0A9         	movff	transmitData@calcCRC+1,_txData+49
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;main.c: 210: txData[48] = (calcCRC&0xFF);
  2202  001CA4  C0C5  F0A8         	movff	transmitData@calcCRC,_txData+48
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 214: if(1){
  2206  001CA8  0E00               	movlw	0
  2207  001CAA  6E3E               	movwf	LoRaStart@freq^0,c
  2208  001CAC  0EA0               	movlw	160
  2209  001CAE  6E3F               	movwf	(LoRaStart@freq+1)^0,c
  2210  001CB0  0E58               	movlw	88
  2211  001CB2  6E40               	movwf	(LoRaStart@freq+2)^0,c
  2212  001CB4  0E44               	movlw	68
  2213  001CB6  6E41               	movwf	(LoRaStart@freq+3)^0,c
  2214  001CB8  0E55               	movlw	85
  2215  001CBA  6E42               	movwf	LoRaStart@syncWord^0,c
  2216  001CBC  EC7B  F013         	call	_LoRaStart	;wreg free
  2217                           
  2218                           ;main.c: 215: printf("TXF: %f\r\n", LoRaGetFrequency());
  2219  001CC0  0EE3               	movlw	low STR_9
  2220  001CC2  6E50               	movwf	printf@f^0,c
  2221  001CC4  0EFF               	movlw	high STR_9
  2222  001CC6  6E51               	movwf	(printf@f+1)^0,c
  2223  001CC8  EC7E  F011         	call	_LoRaGetFrequency	;wreg free
  2224  001CCC  C029  F052         	movff	?_LoRaGetFrequency,?_printf+2
  2225  001CD0  C02A  F053         	movff	?_LoRaGetFrequency+1,?_printf+3
  2226  001CD4  C02B  F054         	movff	?_LoRaGetFrequency+2,?_printf+4
  2227  001CD8  C02C  F055         	movff	?_LoRaGetFrequency+3,?_printf+5
  2228  001CDC  EC18  F000         	call	_printf	;wreg free
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;main.c: 216: };main.c: 217: LoRaClearIRQFlags();
  2232  001CE0  EC2A  F017         	call	_LoRaClearIRQFlags	;wreg free
  2233                           
  2234                           ;main.c: 218: LATEbits.LATE2=1;
  2235  001CE4  848D               	bsf	141,2,c	;volatile
  2236                           
  2237                           ;main.c: 220: if(1){
  2238  001CE6  0E78               	movlw	low _txData
  2239  001CE8  6E59               	movwf	LoRaTXData@data^0,c
  2240  001CEA  0E32               	movlw	50
  2241  001CEC  6E5A               	movwf	LoRaTXData@dataLength^0,c
  2242  001CEE  ECC2  F014         	call	_LoRaTXData	;wreg free
  2243                           
  2244                           ;main.c: 221: printf("Wait for end of transmission...\r\n");
  2245  001CF2  0EF5               	movlw	low STR_10
  2246  001CF4  6E50               	movwf	printf@f^0,c
  2247  001CF6  0EFE               	movlw	high STR_10
  2248  001CF8  6E51               	movwf	(printf@f+1)^0,c
  2249  001CFA  EC18  F000         	call	_printf	;wreg free
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 224: for(j=0;j<50;j++){
  2253                           
  2254                           ; BSR set to: 0
  2255  001CFE  0E00               	movlw	0
  2256  001D00  6FC8               	movwf	transmitData@j& (0+255),b
  2257  001D02                     l5600:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 225: uint8_t flags = LoRaGetIRQFlags();
  2261  001D02  EC24  F017         	call	_LoRaGetIRQFlags	;wreg free
  2262  001D06  0100               	movlb	0	; () banked
  2263  001D08  6FC4               	movwf	transmitData@flags& (0+255),b
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;main.c: 227: if(flags>0){
  2267  001D0A  51C4               	movf	transmitData@flags& (0+255),w,b
  2268  001D0C  A4D8               	btfss	status,2,c
  2269  001D0E  D00E               	goto	u4800
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 229: };main.c: 230: _delay((unsigned long)((10)*(64000000/4000.0)));
  2273  001D10  0ED0               	movlw	208
  2274  001D12  0100               	movlb	0	; () banked
  2275  001D14  6FC3               	movwf	??_transmitData& (0+255),b
  2276  001D16  0EC9               	movlw	201
  2277  001D18                     u4937:
  2278  001D18  2EE8               	decfsz	wreg,f,c
  2279  001D1A  D7FE               	bra	u4937
  2280  001D1C  2FC3               	decfsz	??_transmitData& (0+255),f,b
  2281  001D1E  D7FC               	bra	u4937
  2282  001D20  D000               	nop2	
  2283  001D22  0100               	movlb	0	; () banked
  2284  001D24  2BC8               	incf	transmitData@j& (0+255),f,b
  2285  001D26  0E31               	movlw	49
  2286  001D28  65C8               	cpfsgt	transmitData@j& (0+255),b
  2287  001D2A  D7EB               	goto	l5600
  2288  001D2C                     u4800:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;main.c: 233: if(j>48){
  2292  001D2C  0E30               	movlw	48
  2293  001D2E  65C8               	cpfsgt	transmitData@j& (0+255),b
  2294  001D30  D007               	goto	l5614
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 234: printf("TX Fail\r\n");
  2298  001D32  0EED               	movlw	low STR_11
  2299  001D34  6E50               	movwf	printf@f^0,c
  2300  001D36  0EFF               	movlw	high STR_11
  2301  001D38  6E51               	movwf	(printf@f+1)^0,c
  2302  001D3A  EC18  F000         	call	_printf	;wreg free
  2303                           
  2304                           ;main.c: 235: }
  2305  001D3E  D006               	goto	l5616
  2306  001D40                     l5614:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 236: else{;main.c: 237: printf("Done.\r\n");
  2310  001D40  0EF7               	movlw	low STR_12
  2311  001D42  6E50               	movwf	printf@f^0,c
  2312  001D44  0EFF               	movlw	high STR_12
  2313  001D46  6E51               	movwf	(printf@f+1)^0,c
  2314  001D48  EC18  F000         	call	_printf	;wreg free
  2315  001D4C                     l5616:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;main.c: 238: };main.c: 239: };main.c: 240: LoRaSleepMode();
  2319  001D4C  ECFA  F016         	call	_LoRaSleepMode	;wreg free
  2320                           
  2321                           ;main.c: 241: _delay((unsigned long)((10)*(64000000/4000.0)));
  2322  001D50  0ED0               	movlw	208
  2323  001D52  0100               	movlb	0	; () banked
  2324  001D54  6FC3               	movwf	??_transmitData& (0+255),b
  2325  001D56  0EC9               	movlw	201
  2326  001D58                     u4947:
  2327  001D58  2EE8               	decfsz	wreg,f,c
  2328  001D5A  D7FE               	bra	u4947
  2329  001D5C  2FC3               	decfsz	??_transmitData& (0+255),f,b
  2330  001D5E  D7FC               	bra	u4947
  2331  001D60  D000               	nop2	
  2332                           
  2333                           ;main.c: 242: messageCount++;
  2334  001D62  0E01               	movlw	1
  2335  001D64  0100               	movlb	0	; () banked
  2336  001D66  2764               	addwf	_messageCount& (0+255),f,b
  2337  001D68  0E00               	movlw	0
  2338  001D6A  2365               	addwfc	(_messageCount+1)& (0+255),f,b
  2339  001D6C  2366               	addwfc	(_messageCount+2)& (0+255),f,b
  2340  001D6E  2367               	addwfc	(_messageCount+3)& (0+255),f,b
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;main.c: 243: LATEbits.LATE2=0;
  2344  001D70  948D               	bcf	141,2,c	;volatile
  2345                           
  2346                           ; BSR set to: 0
  2347  001D72  0012               	return		;funcret
  2348  001D74                     __end_of_transmitData:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _LoRaTXData *****************
  2352 ;; Defined at:
  2353 ;;		line 141 in file "LoRa.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  data            1   88[COMRAM] PTR unsigned char 
  2356 ;;		 -> txData(50), 
  2357 ;;  dataLength      1   89[COMRAM] unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  i               1   90[COMRAM] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        3 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    5
  2376 ;; This function calls:
  2377 ;;		_LoRaStandbyMode
  2378 ;;		_LoRaTXMode
  2379 ;;		_SPI2WriteByte
  2380 ;;		_printf
  2381 ;; This function is called by:
  2382 ;;		_transmitData
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text2
  2387  002984                     __ptext2:
  2388                           	callstack 0
  2389  002984                     _LoRaTXData:
  2390                           	callstack 24
  2391                           
  2392                           ;LoRa.c: 143: LoRaStandbyMode();
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;incstack = 0
  2396  002984  ECD7  F016         	call	_LoRaStandbyMode	;wreg free
  2397                           
  2398                           ;LoRa.c: 146: };LoRa.c: 147: SPI2WriteByte(0x0D, 0);
  2399                           
  2400                           ;LoRa.c: 144: if(0){
  2401  002988  0E00               	movlw	0
  2402  00298A  6E02               	movwf	SPI2WriteByte@data^0,c
  2403  00298C  0E0D               	movlw	13
  2404  00298E  EC29  F015         	call	_SPI2WriteByte
  2405                           
  2406                           ;LoRa.c: 148: SPI2WriteByte(0x22, 0);
  2407  002992  0E00               	movlw	0
  2408  002994  6E02               	movwf	SPI2WriteByte@data^0,c
  2409  002996  0E22               	movlw	34
  2410  002998  EC29  F015         	call	_SPI2WriteByte
  2411                           
  2412                           ;LoRa.c: 151: for(uint8_t i=0;i<dataLength;i++){
  2413  00299C  0E00               	movlw	0
  2414  00299E  6E5B               	movwf	LoRaTXData@i^0,c
  2415  0029A0  D00A               	goto	l4958
  2416  0029A2                     l4954:
  2417                           
  2418                           ;LoRa.c: 152: SPI2WriteByte(0x00, data[i]);
  2419  0029A2  5059               	movf	LoRaTXData@data^0,w,c
  2420  0029A4  245B               	addwf	LoRaTXData@i^0,w,c
  2421  0029A6  6ED9               	movwf	fsr2l,c
  2422  0029A8  6ADA               	clrf	fsr2h,c
  2423  0029AA  50DF               	movf	indf2,w,c
  2424  0029AC  6E02               	movwf	SPI2WriteByte@data^0,c
  2425  0029AE  0E00               	movlw	0
  2426  0029B0  EC29  F015         	call	_SPI2WriteByte
  2427  0029B4  2A5B               	incf	LoRaTXData@i^0,f,c
  2428  0029B6                     l4958:
  2429  0029B6  505A               	movf	LoRaTXData@dataLength^0,w,c
  2430  0029B8  5C5B               	subwf	LoRaTXData@i^0,w,c
  2431  0029BA  A0D8               	btfss	status,0,c
  2432  0029BC  D7F2               	goto	l4954
  2433                           
  2434                           ;LoRa.c: 153: };LoRa.c: 154: SPI2WriteByte(0x22, dataLength);
  2435  0029BE  C05A  F002         	movff	LoRaTXData@dataLength,SPI2WriteByte@data
  2436  0029C2  0E22               	movlw	34
  2437  0029C4  EC29  F015         	call	_SPI2WriteByte
  2438                           
  2439                           ;LoRa.c: 155: LoRaTXMode();
  2440  0029C8  ECCA  F016         	call	_LoRaTXMode	;wreg free
  2441                           
  2442                           ;LoRa.c: 156: if(0){
  2443  0029CC  0012               	return		;funcret
  2444  0029CE                     __end_of_LoRaTXData:
  2445                           	callstack 0
  2446                           
  2447 ;; *************** function _LoRaTXMode *****************
  2448 ;; Defined at:
  2449 ;;		line 194 in file "LoRa.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  regValue        1   87[COMRAM] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;Total ram usage:        1 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    4
  2470 ;; This function calls:
  2471 ;;		_printf
  2472 ;;		_readOpModeRegister
  2473 ;;		_writeOpModeRegister
  2474 ;; This function is called by:
  2475 ;;		_LoRaTXData
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text3
  2480  002D94                     __ptext3:
  2481                           	callstack 0
  2482  002D94                     _LoRaTXMode:
  2483                           	callstack 24
  2484                           
  2485                           ;LoRa.c: 197: };LoRa.c: 198: uint8_t regValue = readOpModeRegister();
  2486                           
  2487                           ;LoRa.c: 195: if(0){
  2488                           
  2489                           ;incstack = 0
  2490  002D94  EC40  F017         	call	_readOpModeRegister	;wreg free
  2491  002D98  6E58               	movwf	LoRaTXMode@regValue^0,c
  2492                           
  2493                           ;LoRa.c: 199: regValue = regValue & 0b11111000;
  2494  002D9A  5058               	movf	LoRaTXMode@regValue^0,w,c
  2495  002D9C  0BF8               	andlw	248
  2496  002D9E  6E58               	movwf	LoRaTXMode@regValue^0,c
  2497                           
  2498                           ;LoRa.c: 200: regValue = regValue | 0b00000011;
  2499  002DA0  5058               	movf	LoRaTXMode@regValue^0,w,c
  2500  002DA2  0903               	iorlw	3
  2501  002DA4  6E58               	movwf	LoRaTXMode@regValue^0,c
  2502                           
  2503                           ;LoRa.c: 201: writeOpModeRegister(regValue);
  2504  002DA6  5058               	movf	LoRaTXMode@regValue^0,w,c
  2505  002DA8  EC16  F017         	call	_writeOpModeRegister
  2506  002DAC  0012               	return		;funcret
  2507  002DAE                     __end_of_LoRaTXMode:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _LoRaStart *****************
  2511 ;; Defined at:
  2512 ;;		line 12 in file "LoRa.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  freq            4   61[COMRAM] float 
  2515 ;;  syncWord        1   65[COMRAM] unsigned char 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 3F/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2527 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;Total ram usage:        6 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    5
  2534 ;; This function calls:
  2535 ;;		_LoRaOptimalLoad
  2536 ;;		_LoRaReset
  2537 ;;		_LoRaSetFrequency
  2538 ;;		_setLoRaMode
  2539 ;; This function is called by:
  2540 ;;		_transmitData
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text4
  2545  0026F6                     __ptext4:
  2546                           	callstack 0
  2547  0026F6                     _LoRaStart:
  2548                           	callstack 24
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;LoRa.c: 14: ANSELAbits.ANSA2=0;
  2552                           
  2553                           ;incstack = 0
  2554  0026F6  010F               	movlb	15	; () banked
  2555  0026F8  9538               	bcf	56,2,b	;volatile
  2556                           
  2557                           ;LoRa.c: 19: TRISDbits.RD1=1;
  2558  0026FA  8295               	bsf	149,1,c	;volatile
  2559                           
  2560                           ;LoRa.c: 20: TRISDbits.RD4=0;
  2561  0026FC  9895               	bcf	149,4,c	;volatile
  2562                           
  2563                           ;LoRa.c: 21: TRISDbits.RD0=0;
  2564  0026FE  9095               	bcf	149,0,c	;volatile
  2565                           
  2566                           ;LoRa.c: 22: TRISDbits.RD3=0;
  2567  002700  9695               	bcf	149,3,c	;volatile
  2568                           
  2569                           ;LoRa.c: 23: ANSELDbits.ANSD1=0;
  2570  002702  933B               	bcf	59,1,b	;volatile
  2571                           
  2572                           ;LoRa.c: 24: ANSELDbits.ANSD4=0;
  2573  002704  993B               	bcf	59,4,b	;volatile
  2574                           
  2575                           ;LoRa.c: 25: ANSELDbits.ANSD3=0;
  2576  002706  973B               	bcf	59,3,b	;volatile
  2577                           
  2578                           ;LoRa.c: 26: ANSELDbits.ANSD0=0;
  2579  002708  913B               	bcf	59,0,b	;volatile
  2580                           
  2581                           ;LoRa.c: 27: LATDbits.LATD3=1;
  2582  00270A  868C               	bsf	140,3,c	;volatile
  2583                           
  2584                           ;LoRa.c: 30: SSP2CON1bits.CKP=0;
  2585  00270C  986C               	bcf	108,4,c	;volatile
  2586                           
  2587                           ;LoRa.c: 31: SSP2STATbits.CKE=1;
  2588  00270E  8C6D               	bsf	109,6,c	;volatile
  2589                           
  2590                           ;LoRa.c: 34: SSP2STATbits.SMP=1;
  2591  002710  8E6D               	bsf	109,7,c	;volatile
  2592                           
  2593                           ; BSR set to: 15
  2594                           ;LoRa.c: 37: SSP2CON1bits.SSPM=0b0010;
  2595  002712  506C               	movf	108,w,c	;volatile
  2596  002714  0BF0               	andlw	-16
  2597  002716  0902               	iorlw	2
  2598  002718  6E6C               	movwf	108,c	;volatile
  2599                           
  2600                           ; BSR set to: 15
  2601                           ;LoRa.c: 40: SSP2CON1bits.SSPEN=1;
  2602  00271A  8A6C               	bsf	108,5,c	;volatile
  2603                           
  2604                           ; BSR set to: 15
  2605                           ;LoRa.c: 42: LoRaReset();
  2606  00271C  EC5E  F016         	call	_LoRaReset	;wreg free
  2607                           
  2608                           ;LoRa.c: 43: _delay((unsigned long)((10)*(64000000/4000.0)));
  2609  002720  0ED0               	movlw	208
  2610  002722  6E43               	movwf	??_LoRaStart^0,c
  2611  002724  0ECA               	movlw	202
  2612  002726                     u4957:
  2613  002726  2EE8               	decfsz	wreg,f,c
  2614  002728  D7FE               	bra	u4957
  2615  00272A  2E43               	decfsz	??_LoRaStart^0,f,c
  2616  00272C  D7FC               	bra	u4957
  2617                           
  2618                           ;LoRa.c: 44: setLoRaMode();
  2619  00272E  ECF0  F016         	call	_setLoRaMode	;wreg free
  2620                           
  2621                           ;LoRa.c: 45: _delay((unsigned long)((10)*(64000000/4000.0)));
  2622  002732  0ED0               	movlw	208
  2623  002734  6E43               	movwf	??_LoRaStart^0,c
  2624  002736  0ECA               	movlw	202
  2625  002738                     u4967:
  2626  002738  2EE8               	decfsz	wreg,f,c
  2627  00273A  D7FE               	bra	u4967
  2628  00273C  2E43               	decfsz	??_LoRaStart^0,f,c
  2629  00273E  D7FC               	bra	u4967
  2630                           
  2631                           ;LoRa.c: 46: LoRaOptimalLoad(syncWord);
  2632  002740  5042               	movf	LoRaStart@syncWord^0,w,c
  2633  002742  ECBA  F00E         	call	_LoRaOptimalLoad
  2634                           
  2635                           ;LoRa.c: 47: LoRaSetFrequency(freq);
  2636  002746  C03E  F033         	movff	LoRaStart@freq,LoRaSetFrequency@freqMHz
  2637  00274A  C03F  F034         	movff	LoRaStart@freq+1,LoRaSetFrequency@freqMHz+1
  2638  00274E  C040  F035         	movff	LoRaStart@freq+2,LoRaSetFrequency@freqMHz+2
  2639  002752  C041  F036         	movff	LoRaStart@freq+3,LoRaSetFrequency@freqMHz+3
  2640  002756  EC09  F013         	call	_LoRaSetFrequency	;wreg free
  2641  00275A  0012               	return		;funcret
  2642  00275C                     __end_of_LoRaStart:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _LoRaSetFrequency *****************
  2646 ;; Defined at:
  2647 ;;		line 218 in file "LoRa.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  freqMHz         4   50[COMRAM] float 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  intermediate    4   57[COMRAM] unsigned long 
  2652 ;;  lsb             1   56[COMRAM] unsigned char 
  2653 ;;  mid             1   55[COMRAM] unsigned char 
  2654 ;;  msb             1   54[COMRAM] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/F
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:       11 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    2
  2671 ;; This function calls:
  2672 ;;		_SPI2WriteByte
  2673 ;;		___flmul
  2674 ;;		___fltol
  2675 ;; This function is called by:
  2676 ;;		_LoRaStart
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text5
  2681  002612                     __ptext5:
  2682                           	callstack 0
  2683  002612                     _LoRaSetFrequency:
  2684                           	callstack 26
  2685                           
  2686                           ;LoRa.c: 219: uint32_t intermediate = (freqMHz*16384);
  2687                           
  2688                           ;incstack = 0
  2689  002612  0E00               	movlw	0
  2690  002614  6E14               	movwf	___flmul@a^0,c
  2691  002616  0E00               	movlw	0
  2692  002618  6E15               	movwf	(___flmul@a+1)^0,c
  2693  00261A  0E80               	movlw	128
  2694  00261C  6E16               	movwf	(___flmul@a+2)^0,c
  2695  00261E  0E46               	movlw	70
  2696  002620  6E17               	movwf	(___flmul@a+3)^0,c
  2697  002622  C033  F010         	movff	LoRaSetFrequency@freqMHz,___flmul@b
  2698  002626  C034  F011         	movff	LoRaSetFrequency@freqMHz+1,___flmul@b+1
  2699  00262A  C035  F012         	movff	LoRaSetFrequency@freqMHz+2,___flmul@b+2
  2700  00262E  C036  F013         	movff	LoRaSetFrequency@freqMHz+3,___flmul@b+3
  2701  002632  EC2C  F006         	call	___flmul	;wreg free
  2702  002636  C010  F029         	movff	?___flmul,___fltol@f1
  2703  00263A  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  2704  00263E  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  2705  002642  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  2706  002646  ECE4  F011         	call	___fltol	;wreg free
  2707  00264A  C029  F03A         	movff	?___fltol,LoRaSetFrequency@intermediate
  2708  00264E  C02A  F03B         	movff	?___fltol+1,LoRaSetFrequency@intermediate+1
  2709  002652  C02B  F03C         	movff	?___fltol+2,LoRaSetFrequency@intermediate+2
  2710  002656  C02C  F03D         	movff	?___fltol+3,LoRaSetFrequency@intermediate+3
  2711                           
  2712                           ;LoRa.c: 221: uint8_t msb = (intermediate>>16) & 0xFF;
  2713  00265A  C03C  F037         	movff	LoRaSetFrequency@intermediate+2,LoRaSetFrequency@msb
  2714                           
  2715                           ;LoRa.c: 222: uint8_t mid = (intermediate>>8)& 0xFF;
  2716  00265E  C03B  F038         	movff	LoRaSetFrequency@intermediate+1,LoRaSetFrequency@mid
  2717                           
  2718                           ;LoRa.c: 223: uint8_t lsb = intermediate & 0xFF;
  2719  002662  C03A  F039         	movff	LoRaSetFrequency@intermediate,LoRaSetFrequency@lsb
  2720                           
  2721                           ;LoRa.c: 225: SPI2WriteByte(0x06,msb);
  2722  002666  C037  F002         	movff	LoRaSetFrequency@msb,SPI2WriteByte@data
  2723  00266A  0E06               	movlw	6
  2724  00266C  EC29  F015         	call	_SPI2WriteByte
  2725                           
  2726                           ;LoRa.c: 226: SPI2WriteByte(0x07,mid);
  2727  002670  C038  F002         	movff	LoRaSetFrequency@mid,SPI2WriteByte@data
  2728  002674  0E07               	movlw	7
  2729  002676  EC29  F015         	call	_SPI2WriteByte
  2730                           
  2731                           ;LoRa.c: 227: SPI2WriteByte(0x08,lsb);
  2732  00267A  C039  F002         	movff	LoRaSetFrequency@lsb,SPI2WriteByte@data
  2733  00267E  0E08               	movlw	8
  2734  002680  EC29  F015         	call	_SPI2WriteByte
  2735  002684  0012               	return		;funcret
  2736  002686                     __end_of_LoRaSetFrequency:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _LoRaReset *****************
  2740 ;; Defined at:
  2741 ;;		line 55 in file "LoRa.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg
  2750 ;; Tracked objects:
  2751 ;;		On entry : 3F/F
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;Total ram usage:        1 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_LoRaStart
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text6
  2770  002CBC                     __ptext6:
  2771                           	callstack 0
  2772  002CBC                     _LoRaReset:
  2773                           	callstack 27
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;LoRa.c: 57: TRISCbits.RC6=0;
  2777                           
  2778                           ;incstack = 0
  2779  002CBC  9C94               	bcf	148,6,c	;volatile
  2780                           
  2781                           ;LoRa.c: 58: LATCbits.LATC6=0;
  2782  002CBE  9C8B               	bcf	139,6,c	;volatile
  2783                           
  2784                           ; BSR set to: 15
  2785                           ;LoRa.c: 59: _delay((unsigned long)((1)*(64000000/4000.0)));
  2786  002CC0  0E15               	movlw	21
  2787  002CC2  6E02               	movwf	??_LoRaReset^0,c
  2788  002CC4  0EC6               	movlw	198
  2789  002CC6                     u4977:
  2790  002CC6  2EE8               	decfsz	wreg,f,c
  2791  002CC8  D7FE               	bra	u4977
  2792  002CCA  2E02               	decfsz	??_LoRaReset^0,f,c
  2793  002CCC  D7FC               	bra	u4977
  2794  002CCE  D000               	nop2	
  2795                           
  2796                           ;LoRa.c: 60: TRISCbits.RC6=1;
  2797  002CD0  8C94               	bsf	148,6,c	;volatile
  2798                           
  2799                           ;LoRa.c: 61: _delay((unsigned long)((5)*(64000000/4000.0)));
  2800  002CD2  0E68               	movlw	104
  2801  002CD4  6E02               	movwf	??_LoRaReset^0,c
  2802  002CD6  0EE4               	movlw	228
  2803  002CD8                     u4987:
  2804  002CD8  2EE8               	decfsz	wreg,f,c
  2805  002CDA  D7FE               	bra	u4987
  2806  002CDC  2E02               	decfsz	??_LoRaReset^0,f,c
  2807  002CDE  D7FC               	bra	u4987
  2808  002CE0  D000               	nop2	
  2809  002CE2  0012               	return		;funcret
  2810  002CE4                     __end_of_LoRaReset:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _LoRaOptimalLoad *****************
  2814 ;; Defined at:
  2815 ;;		line 266 in file "LoRa.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  syncWord        1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  syncWord        1    7[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/F
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;Total ram usage:        2 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		_LoRaSleepMode
  2838 ;;		_LoRaStandbyMode
  2839 ;;		_SPI2WriteByte
  2840 ;;		_setLoRaMode
  2841 ;; This function is called by:
  2842 ;;		_LoRaStart
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text7
  2847  001D74                     __ptext7:
  2848                           	callstack 0
  2849  001D74                     _LoRaOptimalLoad:
  2850                           	callstack 24
  2851                           
  2852                           ;incstack = 0
  2853                           ;LoRaOptimalLoad@syncWord stored from wreg
  2854  001D74  6E08               	movwf	LoRaOptimalLoad@syncWord^0,c
  2855                           
  2856                           ;LoRa.c: 267: LoRaSleepMode();
  2857  001D76  ECFA  F016         	call	_LoRaSleepMode	;wreg free
  2858                           
  2859                           ;LoRa.c: 268: setLoRaMode();
  2860  001D7A  ECF0  F016         	call	_setLoRaMode	;wreg free
  2861                           
  2862                           ;LoRa.c: 269: LoRaStandbyMode();
  2863  001D7E  ECD7  F016         	call	_LoRaStandbyMode	;wreg free
  2864                           
  2865                           ;LoRa.c: 270: _delay((unsigned long)((10)*(64000000/4000.0)));
  2866  001D82  0ED0               	movlw	208
  2867  001D84  6E07               	movwf	??_LoRaOptimalLoad^0,c
  2868  001D86  0ECA               	movlw	202
  2869  001D88                     u4997:
  2870  001D88  2EE8               	decfsz	wreg,f,c
  2871  001D8A  D7FE               	bra	u4997
  2872  001D8C  2E07               	decfsz	??_LoRaOptimalLoad^0,f,c
  2873  001D8E  D7FC               	bra	u4997
  2874                           
  2875                           ;LoRa.c: 271: SPI2WriteByte(0x06, 0xD9);
  2876  001D90  0ED9               	movlw	217
  2877  001D92  6E02               	movwf	SPI2WriteByte@data^0,c
  2878  001D94  0E06               	movlw	6
  2879  001D96  EC29  F015         	call	_SPI2WriteByte
  2880                           
  2881                           ;LoRa.c: 272: SPI2WriteByte(0x07, 0);
  2882  001D9A  0E00               	movlw	0
  2883  001D9C  6E02               	movwf	SPI2WriteByte@data^0,c
  2884  001D9E  0E07               	movlw	7
  2885  001DA0  EC29  F015         	call	_SPI2WriteByte
  2886                           
  2887                           ;LoRa.c: 273: SPI2WriteByte(0x08, 0);
  2888  001DA4  0E00               	movlw	0
  2889  001DA6  6E02               	movwf	SPI2WriteByte@data^0,c
  2890  001DA8  0E08               	movlw	8
  2891  001DAA  EC29  F015         	call	_SPI2WriteByte
  2892                           
  2893                           ;LoRa.c: 274: SPI2WriteByte(0x09, 0x8F);
  2894  001DAE  0E8F               	movlw	143
  2895  001DB0  6E02               	movwf	SPI2WriteByte@data^0,c
  2896  001DB2  0E09               	movlw	9
  2897  001DB4  EC29  F015         	call	_SPI2WriteByte
  2898                           
  2899                           ;LoRa.c: 275: SPI2WriteByte(0x0A, 0x09);
  2900  001DB8  0E09               	movlw	9
  2901  001DBA  6E02               	movwf	SPI2WriteByte@data^0,c
  2902  001DBC  0E0A               	movlw	10
  2903  001DBE  EC29  F015         	call	_SPI2WriteByte
  2904                           
  2905                           ;LoRa.c: 276: SPI2WriteByte(0x0B, 0x2B);
  2906  001DC2  0E2B               	movlw	43
  2907  001DC4  6E02               	movwf	SPI2WriteByte@data^0,c
  2908  001DC6  0E0B               	movlw	11
  2909  001DC8  EC29  F015         	call	_SPI2WriteByte
  2910                           
  2911                           ;LoRa.c: 277: SPI2WriteByte(0x0C, 0x23);
  2912  001DCC  0E23               	movlw	35
  2913  001DCE  6E02               	movwf	SPI2WriteByte@data^0,c
  2914  001DD0  0E0C               	movlw	12
  2915  001DD2  EC29  F015         	call	_SPI2WriteByte
  2916                           
  2917                           ;LoRa.c: 278: SPI2WriteByte(0x0E, 0);
  2918  001DD6  0E00               	movlw	0
  2919  001DD8  6E02               	movwf	SPI2WriteByte@data^0,c
  2920  001DDA  0E0E               	movlw	14
  2921  001DDC  EC29  F015         	call	_SPI2WriteByte
  2922                           
  2923                           ;LoRa.c: 279: SPI2WriteByte(0x0F, 0);
  2924  001DE0  0E00               	movlw	0
  2925  001DE2  6E02               	movwf	SPI2WriteByte@data^0,c
  2926  001DE4  0E0F               	movlw	15
  2927  001DE6  EC29  F015         	call	_SPI2WriteByte
  2928                           
  2929                           ;LoRa.c: 280: SPI2WriteByte(0x10, 0);
  2930  001DEA  0E00               	movlw	0
  2931  001DEC  6E02               	movwf	SPI2WriteByte@data^0,c
  2932  001DEE  0E10               	movlw	16
  2933  001DF0  EC29  F015         	call	_SPI2WriteByte
  2934                           
  2935                           ;LoRa.c: 281: SPI2WriteByte(0x11, 0);
  2936  001DF4  0E00               	movlw	0
  2937  001DF6  6E02               	movwf	SPI2WriteByte@data^0,c
  2938  001DF8  0E11               	movlw	17
  2939  001DFA  EC29  F015         	call	_SPI2WriteByte
  2940                           
  2941                           ;LoRa.c: 282: SPI2WriteByte(0x13, 0);
  2942  001DFE  0E00               	movlw	0
  2943  001E00  6E02               	movwf	SPI2WriteByte@data^0,c
  2944  001E02  0E13               	movlw	19
  2945  001E04  EC29  F015         	call	_SPI2WriteByte
  2946                           
  2947                           ;LoRa.c: 283: SPI2WriteByte(0x1D, 0x72);
  2948  001E08  0E72               	movlw	114
  2949  001E0A  6E02               	movwf	SPI2WriteByte@data^0,c
  2950  001E0C  0E1D               	movlw	29
  2951  001E0E  EC29  F015         	call	_SPI2WriteByte
  2952                           
  2953                           ;LoRa.c: 284: SPI2WriteByte(0x1E, 0x70);
  2954  001E12  0E70               	movlw	112
  2955  001E14  6E02               	movwf	SPI2WriteByte@data^0,c
  2956  001E16  0E1E               	movlw	30
  2957  001E18  EC29  F015         	call	_SPI2WriteByte
  2958                           
  2959                           ;LoRa.c: 285: SPI2WriteByte(0x1F, 0x64);
  2960  001E1C  0E64               	movlw	100
  2961  001E1E  6E02               	movwf	SPI2WriteByte@data^0,c
  2962  001E20  0E1F               	movlw	31
  2963  001E22  EC29  F015         	call	_SPI2WriteByte
  2964                           
  2965                           ;LoRa.c: 286: SPI2WriteByte(0x20, 0);
  2966  001E26  0E00               	movlw	0
  2967  001E28  6E02               	movwf	SPI2WriteByte@data^0,c
  2968  001E2A  0E20               	movlw	32
  2969  001E2C  EC29  F015         	call	_SPI2WriteByte
  2970                           
  2971                           ;LoRa.c: 287: SPI2WriteByte(0x21, 0x08);
  2972  001E30  0E08               	movlw	8
  2973  001E32  6E02               	movwf	SPI2WriteByte@data^0,c
  2974  001E34  0E21               	movlw	33
  2975  001E36  EC29  F015         	call	_SPI2WriteByte
  2976                           
  2977                           ;LoRa.c: 288: SPI2WriteByte(0x23, 0xFF);
  2978  001E3A  0EFF               	movlw	255
  2979  001E3C  6E02               	movwf	SPI2WriteByte@data^0,c
  2980  001E3E  0E23               	movlw	35
  2981  001E40  EC29  F015         	call	_SPI2WriteByte
  2982                           
  2983                           ;LoRa.c: 289: SPI2WriteByte(0x24, 0);
  2984  001E44  0E00               	movlw	0
  2985  001E46  6E02               	movwf	SPI2WriteByte@data^0,c
  2986  001E48  0E24               	movlw	36
  2987  001E4A  EC29  F015         	call	_SPI2WriteByte
  2988                           
  2989                           ;LoRa.c: 290: SPI2WriteByte(0x25, 0);
  2990  001E4E  0E00               	movlw	0
  2991  001E50  6E02               	movwf	SPI2WriteByte@data^0,c
  2992  001E52  0E25               	movlw	37
  2993  001E54  EC29  F015         	call	_SPI2WriteByte
  2994                           
  2995                           ;LoRa.c: 291: SPI2WriteByte(0x26, 0x04);
  2996  001E58  0E04               	movlw	4
  2997  001E5A  6E02               	movwf	SPI2WriteByte@data^0,c
  2998  001E5C  0E26               	movlw	38
  2999  001E5E  EC29  F015         	call	_SPI2WriteByte
  3000                           
  3001                           ;LoRa.c: 292: SPI2WriteByte(0x2F, 0x45);
  3002  001E62  0E45               	movlw	69
  3003  001E64  6E02               	movwf	SPI2WriteByte@data^0,c
  3004  001E66  0E2F               	movlw	47
  3005  001E68  EC29  F015         	call	_SPI2WriteByte
  3006                           
  3007                           ;LoRa.c: 293: SPI2WriteByte(0x30, 0x55);
  3008  001E6C  0E55               	movlw	85
  3009  001E6E  6E02               	movwf	SPI2WriteByte@data^0,c
  3010  001E70  0E30               	movlw	48
  3011  001E72  EC29  F015         	call	_SPI2WriteByte
  3012                           
  3013                           ;LoRa.c: 294: SPI2WriteByte(0x31, 0xC3);
  3014  001E76  0EC3               	movlw	195
  3015  001E78  6E02               	movwf	SPI2WriteByte@data^0,c
  3016  001E7A  0E31               	movlw	49
  3017  001E7C  EC29  F015         	call	_SPI2WriteByte
  3018                           
  3019                           ;LoRa.c: 295: SPI2WriteByte(0x33, 0x27);
  3020  001E80  0E27               	movlw	39
  3021  001E82  6E02               	movwf	SPI2WriteByte@data^0,c
  3022  001E84  0E33               	movlw	51
  3023  001E86  EC29  F015         	call	_SPI2WriteByte
  3024                           
  3025                           ;LoRa.c: 296: SPI2WriteByte(0x36, 0x03);
  3026  001E8A  0E03               	movlw	3
  3027  001E8C  6E02               	movwf	SPI2WriteByte@data^0,c
  3028  001E8E  0E36               	movlw	54
  3029  001E90  EC29  F015         	call	_SPI2WriteByte
  3030                           
  3031                           ;LoRa.c: 297: SPI2WriteByte(0x37, 0x0A);
  3032  001E94  0E0A               	movlw	10
  3033  001E96  6E02               	movwf	SPI2WriteByte@data^0,c
  3034  001E98  0E37               	movlw	55
  3035  001E9A  EC29  F015         	call	_SPI2WriteByte
  3036                           
  3037                           ;LoRa.c: 298: SPI2WriteByte(0x39, syncWord);
  3038  001E9E  C008  F002         	movff	LoRaOptimalLoad@syncWord,SPI2WriteByte@data
  3039  001EA2  0E39               	movlw	57
  3040  001EA4  EC29  F015         	call	_SPI2WriteByte
  3041                           
  3042                           ;LoRa.c: 299: SPI2WriteByte(0x3A, 0x49);
  3043  001EA8  0E49               	movlw	73
  3044  001EAA  6E02               	movwf	SPI2WriteByte@data^0,c
  3045  001EAC  0E3A               	movlw	58
  3046  001EAE  EC29  F015         	call	_SPI2WriteByte
  3047                           
  3048                           ;LoRa.c: 300: SPI2WriteByte(0x4B, 0x09);
  3049  001EB2  0E09               	movlw	9
  3050  001EB4  6E02               	movwf	SPI2WriteByte@data^0,c
  3051  001EB6  0E4B               	movlw	75
  3052  001EB8  EC29  F015         	call	_SPI2WriteByte
  3053                           
  3054                           ;LoRa.c: 301: SPI2WriteByte(0x4D, 0x84);
  3055  001EBC  0E84               	movlw	132
  3056  001EBE  6E02               	movwf	SPI2WriteByte@data^0,c
  3057  001EC0  0E4D               	movlw	77
  3058  001EC2  EC29  F015         	call	_SPI2WriteByte
  3059                           
  3060                           ;LoRa.c: 302: SPI2WriteByte(0x61, 0x1C);
  3061  001EC6  0E1C               	movlw	28
  3062  001EC8  6E02               	movwf	SPI2WriteByte@data^0,c
  3063  001ECA  0E61               	movlw	97
  3064  001ECC  EC29  F015         	call	_SPI2WriteByte
  3065                           
  3066                           ;LoRa.c: 303: SPI2WriteByte(0x62, 0x0E);
  3067  001ED0  0E0E               	movlw	14
  3068  001ED2  6E02               	movwf	SPI2WriteByte@data^0,c
  3069  001ED4  0E62               	movlw	98
  3070  001ED6  EC29  F015         	call	_SPI2WriteByte
  3071                           
  3072                           ;LoRa.c: 304: SPI2WriteByte(0x63, 0x5B);
  3073  001EDA  0E5B               	movlw	91
  3074  001EDC  6E02               	movwf	SPI2WriteByte@data^0,c
  3075  001EDE  0E63               	movlw	99
  3076  001EE0  EC29  F015         	call	_SPI2WriteByte
  3077                           
  3078                           ;LoRa.c: 305: SPI2WriteByte(0x64, 0xCC);
  3079  001EE4  0ECC               	movlw	204
  3080  001EE6  6E02               	movwf	SPI2WriteByte@data^0,c
  3081  001EE8  0E64               	movlw	100
  3082  001EEA  EC29  F015         	call	_SPI2WriteByte
  3083                           
  3084                           ;LoRa.c: 306: SPI2WriteByte(0x70, 0xD0);
  3085  001EEE  0ED0               	movlw	208
  3086  001EF0  6E02               	movwf	SPI2WriteByte@data^0,c
  3087  001EF2  0E70               	movlw	112
  3088  001EF4  EC29  F015         	call	_SPI2WriteByte
  3089  001EF8  0012               	return		;funcret
  3090  001EFA                     __end_of_LoRaOptimalLoad:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _setLoRaMode *****************
  3094 ;; Defined at:
  3095 ;;		line 64 in file "LoRa.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  regValue        1    5[COMRAM] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/F
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        1 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		_readOpModeRegister
  3118 ;;		_writeOpModeRegister
  3119 ;; This function is called by:
  3120 ;;		_LoRaStart
  3121 ;;		_LoRaOptimalLoad
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text8
  3126  002DE0                     __ptext8:
  3127                           	callstack 0
  3128  002DE0                     _setLoRaMode:
  3129                           	callstack 25
  3130                           
  3131                           ;LoRa.c: 66: uint8_t regValue = readOpModeRegister();
  3132                           
  3133                           ;incstack = 0
  3134  002DE0  EC40  F017         	call	_readOpModeRegister	;wreg free
  3135  002DE4  6E06               	movwf	setLoRaMode@regValue^0,c
  3136                           
  3137                           ;LoRa.c: 67: regValue = regValue | 0b10000000;
  3138  002DE6  5006               	movf	setLoRaMode@regValue^0,w,c
  3139  002DE8  0980               	iorlw	128
  3140  002DEA  6E06               	movwf	setLoRaMode@regValue^0,c
  3141                           
  3142                           ;LoRa.c: 68: writeOpModeRegister(regValue);
  3143  002DEC  5006               	movf	setLoRaMode@regValue^0,w,c
  3144  002DEE  EC16  F017         	call	_writeOpModeRegister
  3145  002DF2  0012               	return		;funcret
  3146  002DF4                     __end_of_setLoRaMode:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function _LoRaStandbyMode *****************
  3150 ;; Defined at:
  3151 ;;		line 166 in file "LoRa.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  regValue        1    5[COMRAM] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;Total ram usage:        1 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    3
  3172 ;; This function calls:
  3173 ;;		_readOpModeRegister
  3174 ;;		_writeOpModeRegister
  3175 ;; This function is called by:
  3176 ;;		_LoRaTXData
  3177 ;;		_LoRaOptimalLoad
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text9
  3182  002DAE                     __ptext9:
  3183                           	callstack 0
  3184  002DAE                     _LoRaStandbyMode:
  3185                           	callstack 25
  3186                           
  3187                           ;LoRa.c: 167: uint8_t regValue = readOpModeRegister();
  3188                           
  3189                           ;incstack = 0
  3190  002DAE  EC40  F017         	call	_readOpModeRegister	;wreg free
  3191  002DB2  6E06               	movwf	LoRaStandbyMode@regValue^0,c
  3192                           
  3193                           ;LoRa.c: 168: regValue = regValue & 0b11111000;
  3194  002DB4  5006               	movf	LoRaStandbyMode@regValue^0,w,c
  3195  002DB6  0BF8               	andlw	248
  3196  002DB8  6E06               	movwf	LoRaStandbyMode@regValue^0,c
  3197                           
  3198                           ;LoRa.c: 169: regValue = regValue | 0b00000001;
  3199  002DBA  5006               	movf	LoRaStandbyMode@regValue^0,w,c
  3200  002DBC  0901               	iorlw	1
  3201  002DBE  6E06               	movwf	LoRaStandbyMode@regValue^0,c
  3202                           
  3203                           ;LoRa.c: 170: writeOpModeRegister(regValue);
  3204  002DC0  5006               	movf	LoRaStandbyMode@regValue^0,w,c
  3205  002DC2  EC16  F017         	call	_writeOpModeRegister
  3206  002DC6  0012               	return		;funcret
  3207  002DC8                     __end_of_LoRaStandbyMode:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _LoRaSleepMode *****************
  3211 ;; Defined at:
  3212 ;;		line 173 in file "LoRa.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  regValue        1    5[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:        1 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    3
  3233 ;; This function calls:
  3234 ;;		_readOpModeRegister
  3235 ;;		_writeOpModeRegister
  3236 ;; This function is called by:
  3237 ;;		_transmitData
  3238 ;;		_LoRaOptimalLoad
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text10
  3243  002DF4                     __ptext10:
  3244                           	callstack 0
  3245  002DF4                     _LoRaSleepMode:
  3246                           	callstack 24
  3247                           
  3248                           ;LoRa.c: 174: uint8_t regValue = readOpModeRegister();
  3249                           
  3250                           ;incstack = 0
  3251  002DF4  EC40  F017         	call	_readOpModeRegister	;wreg free
  3252  002DF8  6E06               	movwf	LoRaSleepMode@regValue^0,c
  3253                           
  3254                           ;LoRa.c: 176: regValue = regValue | 0b00000000;
  3255  002DFA  5006               	movf	LoRaSleepMode@regValue^0,w,c
  3256  002DFC  0BF8               	andlw	248
  3257  002DFE  6E06               	movwf	LoRaSleepMode@regValue^0,c
  3258                           
  3259                           ;LoRa.c: 177: writeOpModeRegister(regValue);
  3260  002E00  5006               	movf	LoRaSleepMode@regValue^0,w,c
  3261  002E02  EC16  F017         	call	_writeOpModeRegister
  3262  002E06  0012               	return		;funcret
  3263  002E08                     __end_of_LoRaSleepMode:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _writeOpModeRegister *****************
  3267 ;; Defined at:
  3268 ;;		line 75 in file "LoRa.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  regValue        1    wreg     unsigned char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  regValue        1    4[COMRAM] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        1 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    2
  3289 ;; This function calls:
  3290 ;;		_SPI2WriteByte
  3291 ;; This function is called by:
  3292 ;;		_setLoRaMode
  3293 ;;		_LoRaStandbyMode
  3294 ;;		_LoRaSleepMode
  3295 ;;		_LoRaTXMode
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text11
  3300  002E2C                     __ptext11:
  3301                           	callstack 0
  3302  002E2C                     _writeOpModeRegister:
  3303                           	callstack 25
  3304                           
  3305                           ;incstack = 0
  3306                           ;writeOpModeRegister@regValue stored from wreg
  3307  002E2C  6E05               	movwf	writeOpModeRegister@regValue^0,c
  3308                           
  3309                           ;LoRa.c: 76: SPI2WriteByte(0x01, regValue);
  3310  002E2E  C005  F002         	movff	writeOpModeRegister@regValue,SPI2WriteByte@data
  3311  002E32  0E01               	movlw	1
  3312  002E34  EC29  F015         	call	_SPI2WriteByte
  3313  002E38  0012               	return		;funcret
  3314  002E3A                     __end_of_writeOpModeRegister:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _readOpModeRegister *****************
  3318 ;; Defined at:
  3319 ;;		line 71 in file "LoRa.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      unsigned char 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    2
  3340 ;; This function calls:
  3341 ;;		_SPI2ReadByte
  3342 ;; This function is called by:
  3343 ;;		_setLoRaMode
  3344 ;;		_LoRaStandbyMode
  3345 ;;		_LoRaSleepMode
  3346 ;;		_LoRaTXMode
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text12
  3351  002E80                     __ptext12:
  3352                           	callstack 0
  3353  002E80                     _readOpModeRegister:
  3354                           	callstack 25
  3355                           
  3356                           ;LoRa.c: 72: return SPI2ReadByte(0x01);
  3357                           
  3358                           ;incstack = 0
  3359  002E80  0E01               	movlw	1
  3360  002E82  EC98  F016         	call	_SPI2ReadByte
  3361  002E86  0012               	return		;funcret
  3362  002E88                     __end_of_readOpModeRegister:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _LoRaGetIRQFlags *****************
  3366 ;; Defined at:
  3367 ;;		line 244 in file "LoRa.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  regValue        1    3[COMRAM] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      unsigned char 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 3F/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;Total ram usage:        1 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    2
  3388 ;; This function calls:
  3389 ;;		_SPI2ReadByte
  3390 ;; This function is called by:
  3391 ;;		_transmitData
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text13
  3396  002E48                     __ptext13:
  3397                           	callstack 0
  3398  002E48                     _LoRaGetIRQFlags:
  3399                           	callstack 27
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;LoRa.c: 245: uint8_t regValue = SPI2ReadByte(0x12);
  3403                           
  3404                           ;incstack = 0
  3405  002E48  0E12               	movlw	18
  3406  002E4A  EC98  F016         	call	_SPI2ReadByte
  3407  002E4E  6E04               	movwf	LoRaGetIRQFlags@regValue^0,c
  3408                           
  3409                           ;LoRa.c: 246: return regValue;
  3410  002E50  5004               	movf	LoRaGetIRQFlags@regValue^0,w,c
  3411  002E52  0012               	return		;funcret
  3412  002E54                     __end_of_LoRaGetIRQFlags:
  3413                           	callstack 0
  3414                           
  3415 ;; *************** function _LoRaGetFrequency *****************
  3416 ;; Defined at:
  3417 ;;		line 234 in file "LoRa.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  freqMHz         4   60[COMRAM] float 
  3422 ;;  intermediate    4   56[COMRAM] unsigned long 
  3423 ;;  lsb             1   66[COMRAM] unsigned char 
  3424 ;;  mid             1   65[COMRAM] unsigned char 
  3425 ;;  msb             1   64[COMRAM] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  4   40[COMRAM] float 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:       27 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    2
  3442 ;; This function calls:
  3443 ;;		_SPI2ReadByte
  3444 ;;		___fldiv
  3445 ;;		___xxtofl
  3446 ;; This function is called by:
  3447 ;;		_transmitData
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text14
  3452  0022FC                     __ptext14:
  3453                           	callstack 0
  3454  0022FC                     _LoRaGetFrequency:
  3455                           	callstack 27
  3456                           
  3457                           ;LoRa.c: 235: uint8_t msb = SPI2ReadByte(0x06);
  3458                           
  3459                           ;incstack = 0
  3460  0022FC  0E06               	movlw	6
  3461  0022FE  EC98  F016         	call	_SPI2ReadByte
  3462  002302  6E41               	movwf	LoRaGetFrequency@msb^0,c
  3463                           
  3464                           ;LoRa.c: 236: uint8_t mid = SPI2ReadByte(0x07);
  3465  002304  0E07               	movlw	7
  3466  002306  EC98  F016         	call	_SPI2ReadByte
  3467  00230A  6E42               	movwf	LoRaGetFrequency@mid^0,c
  3468                           
  3469                           ;LoRa.c: 237: uint8_t lsb = SPI2ReadByte(0x08);
  3470  00230C  0E08               	movlw	8
  3471  00230E  EC98  F016         	call	_SPI2ReadByte
  3472  002312  6E43               	movwf	LoRaGetFrequency@lsb^0,c
  3473                           
  3474                           ;LoRa.c: 238: uint32_t intermediate = (uint32_t)msb<<16 | (uint32_t)mid<<8 | lsb;
  3475  002314  C042  F02D         	movff	LoRaGetFrequency@mid,??_LoRaGetFrequency
  3476  002318  6A2E               	clrf	(??_LoRaGetFrequency+1)^0,c
  3477  00231A  6A2F               	clrf	(??_LoRaGetFrequency+2)^0,c
  3478  00231C  6A30               	clrf	(??_LoRaGetFrequency+3)^0,c
  3479  00231E  C02F  F030         	movff	??_LoRaGetFrequency+2,??_LoRaGetFrequency+3
  3480  002322  C02E  F02F         	movff	??_LoRaGetFrequency+1,??_LoRaGetFrequency+2
  3481  002326  C02D  F02E         	movff	??_LoRaGetFrequency,??_LoRaGetFrequency+1
  3482  00232A  6A2D               	clrf	??_LoRaGetFrequency^0,c
  3483  00232C  C041  F031         	movff	LoRaGetFrequency@msb,??_LoRaGetFrequency+4
  3484  002330  6A32               	clrf	(??_LoRaGetFrequency+5)^0,c
  3485  002332  6A33               	clrf	(??_LoRaGetFrequency+6)^0,c
  3486  002334  6A34               	clrf	(??_LoRaGetFrequency+7)^0,c
  3487  002336  C032  F034         	movff	??_LoRaGetFrequency+5,??_LoRaGetFrequency+7
  3488  00233A  C031  F033         	movff	??_LoRaGetFrequency+4,??_LoRaGetFrequency+6
  3489  00233E  6A32               	clrf	(??_LoRaGetFrequency+5)^0,c
  3490  002340  6A31               	clrf	(??_LoRaGetFrequency+4)^0,c
  3491  002342  502D               	movf	??_LoRaGetFrequency^0,w,c
  3492  002344  1031               	iorwf	(??_LoRaGetFrequency+4)^0,w,c
  3493  002346  6E35               	movwf	(??_LoRaGetFrequency+8)^0,c
  3494  002348  502E               	movf	(??_LoRaGetFrequency+1)^0,w,c
  3495  00234A  1032               	iorwf	(??_LoRaGetFrequency+5)^0,w,c
  3496  00234C  6E36               	movwf	(??_LoRaGetFrequency+9)^0,c
  3497  00234E  502F               	movf	(??_LoRaGetFrequency+2)^0,w,c
  3498  002350  1033               	iorwf	(??_LoRaGetFrequency+6)^0,w,c
  3499  002352  6E37               	movwf	(??_LoRaGetFrequency+10)^0,c
  3500  002354  5030               	movf	(??_LoRaGetFrequency+3)^0,w,c
  3501  002356  1034               	iorwf	(??_LoRaGetFrequency+7)^0,w,c
  3502  002358  6E38               	movwf	(??_LoRaGetFrequency+11)^0,c
  3503  00235A  5043               	movf	LoRaGetFrequency@lsb^0,w,c
  3504  00235C  1035               	iorwf	(??_LoRaGetFrequency+8)^0,w,c
  3505  00235E  6E39               	movwf	LoRaGetFrequency@intermediate^0,c
  3506  002360  5036               	movf	(??_LoRaGetFrequency+9)^0,w,c
  3507  002362  6E3A               	movwf	(LoRaGetFrequency@intermediate+1)^0,c
  3508  002364  5037               	movf	(??_LoRaGetFrequency+10)^0,w,c
  3509  002366  6E3B               	movwf	(LoRaGetFrequency@intermediate+2)^0,c
  3510  002368  5038               	movf	(??_LoRaGetFrequency+11)^0,w,c
  3511  00236A  6E3C               	movwf	(LoRaGetFrequency@intermediate+3)^0,c
  3512                           
  3513                           ;LoRa.c: 239: float freqMHz = (float)intermediate/16384.0;
  3514  00236C  C039  F002         	movff	LoRaGetFrequency@intermediate,___xxtofl@val
  3515  002370  C03A  F003         	movff	LoRaGetFrequency@intermediate+1,___xxtofl@val+1
  3516  002374  C03B  F004         	movff	LoRaGetFrequency@intermediate+2,___xxtofl@val+2
  3517  002378  C03C  F005         	movff	LoRaGetFrequency@intermediate+3,___xxtofl@val+3
  3518  00237C  0E00               	movlw	0
  3519  00237E  EC7D  F00F         	call	___xxtofl
  3520  002382  C002  F010         	movff	?___xxtofl,___fldiv@b
  3521  002386  C003  F011         	movff	?___xxtofl+1,___fldiv@b+1
  3522  00238A  C004  F012         	movff	?___xxtofl+2,___fldiv@b+2
  3523  00238E  C005  F013         	movff	?___xxtofl+3,___fldiv@b+3
  3524  002392  0E00               	movlw	0
  3525  002394  6E14               	movwf	___fldiv@a^0,c
  3526  002396  0E00               	movlw	0
  3527  002398  6E15               	movwf	(___fldiv@a+1)^0,c
  3528  00239A  0E80               	movlw	128
  3529  00239C  6E16               	movwf	(___fldiv@a+2)^0,c
  3530  00239E  0E46               	movlw	70
  3531  0023A0  6E17               	movwf	(___fldiv@a+3)^0,c
  3532  0023A2  EC48  F009         	call	___fldiv	;wreg free
  3533  0023A6  C010  F03D         	movff	?___fldiv,LoRaGetFrequency@freqMHz
  3534  0023AA  C011  F03E         	movff	?___fldiv+1,LoRaGetFrequency@freqMHz+1
  3535  0023AE  C012  F03F         	movff	?___fldiv+2,LoRaGetFrequency@freqMHz+2
  3536  0023B2  C013  F040         	movff	?___fldiv+3,LoRaGetFrequency@freqMHz+3
  3537                           
  3538                           ;LoRa.c: 240: return freqMHz;
  3539  0023B6  C03D  F029         	movff	LoRaGetFrequency@freqMHz,?_LoRaGetFrequency
  3540  0023BA  C03E  F02A         	movff	LoRaGetFrequency@freqMHz+1,?_LoRaGetFrequency+1
  3541  0023BE  C03F  F02B         	movff	LoRaGetFrequency@freqMHz+2,?_LoRaGetFrequency+2
  3542  0023C2  C040  F02C         	movff	LoRaGetFrequency@freqMHz+3,?_LoRaGetFrequency+3
  3543  0023C6  0012               	return		;funcret
  3544  0023C8                     __end_of_LoRaGetFrequency:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function ___fldiv *****************
  3548 ;; Defined at:
  3549 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  b               4   15[COMRAM] float 
  3552 ;;  a               4   19[COMRAM] float 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  grs             4   34[COMRAM] unsigned long 
  3555 ;;  rem             4   27[COMRAM] unsigned long 
  3556 ;;  new_exp         2   32[COMRAM] int 
  3557 ;;  aexp            1   39[COMRAM] unsigned char 
  3558 ;;  bexp            1   38[COMRAM] unsigned char 
  3559 ;;  sign            1   31[COMRAM] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  4   15[COMRAM] unsigned char 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3569 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;Total ram usage:       25 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_LoRaGetFrequency
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text15
  3584  001290                     __ptext15:
  3585                           	callstack 0
  3586  001290                     ___fldiv:
  3587                           	callstack 27
  3588                           
  3589                           ;incstack = 0
  3590  001290  5013               	movf	(___fldiv@b+3)^0,w,c
  3591  001292  0B80               	andlw	128
  3592  001294  6E20               	movwf	___fldiv@sign^0,c
  3593  001296  5013               	movf	(___fldiv@b+3)^0,w,c
  3594  001298  2413               	addwf	(___fldiv@b+3)^0,w,c
  3595  00129A  6E27               	movwf	___fldiv@bexp^0,c
  3596  00129C  BE12               	btfsc	(___fldiv@b+2)^0,7,c
  3597  00129E  8027               	bsf	___fldiv@bexp^0,0,c
  3598  0012A0  5027               	movf	___fldiv@bexp^0,w,c
  3599  0012A2  B4D8               	btfsc	status,2,c
  3600  0012A4  D00D               	goto	l4780
  3601  0012A6  2827               	incf	___fldiv@bexp^0,w,c
  3602  0012A8  A4D8               	btfss	status,2,c
  3603  0012AA  D008               	goto	l4776
  3604  0012AC  0E00               	movlw	0
  3605  0012AE  6E10               	movwf	___fldiv@b^0,c
  3606  0012B0  0E00               	movlw	0
  3607  0012B2  6E11               	movwf	(___fldiv@b+1)^0,c
  3608  0012B4  0E00               	movlw	0
  3609  0012B6  6E12               	movwf	(___fldiv@b+2)^0,c
  3610  0012B8  0E00               	movlw	0
  3611  0012BA  6E13               	movwf	(___fldiv@b+3)^0,c
  3612  0012BC                     l4776:
  3613  0012BC  8E12               	bsf	(___fldiv@b+2)^0,7,c
  3614  0012BE  D006               	goto	L1
  3615  0012C0                     l4780:
  3616  0012C0  0E00               	movlw	0
  3617  0012C2  6E10               	movwf	___fldiv@b^0,c
  3618  0012C4  0E00               	movlw	0
  3619  0012C6  6E11               	movwf	(___fldiv@b+1)^0,c
  3620  0012C8  0E00               	movlw	0
  3621  0012CA  6E12               	movwf	(___fldiv@b+2)^0,c
  3622  0012CC                     L1:
  3623  0012CC  0E00               	movlw	0
  3624  0012CE  6E13               	movwf	(___fldiv@b+3)^0,c
  3625  0012D0  5017               	movf	(___fldiv@a+3)^0,w,c
  3626  0012D2  0B80               	andlw	128
  3627  0012D4  1A20               	xorwf	___fldiv@sign^0,f,c
  3628  0012D6  5017               	movf	(___fldiv@a+3)^0,w,c
  3629  0012D8  2417               	addwf	(___fldiv@a+3)^0,w,c
  3630  0012DA  6E28               	movwf	___fldiv@aexp^0,c
  3631  0012DC  BE16               	btfsc	(___fldiv@a+2)^0,7,c
  3632  0012DE  8028               	bsf	___fldiv@aexp^0,0,c
  3633  0012E0  5028               	movf	___fldiv@aexp^0,w,c
  3634  0012E2  B4D8               	btfsc	status,2,c
  3635  0012E4  D00D               	goto	l4800
  3636  0012E6  2828               	incf	___fldiv@aexp^0,w,c
  3637  0012E8  A4D8               	btfss	status,2,c
  3638  0012EA  D008               	goto	l4796
  3639  0012EC  0E00               	movlw	0
  3640  0012EE  6E14               	movwf	___fldiv@a^0,c
  3641  0012F0  0E00               	movlw	0
  3642  0012F2  6E15               	movwf	(___fldiv@a+1)^0,c
  3643  0012F4  0E00               	movlw	0
  3644  0012F6  6E16               	movwf	(___fldiv@a+2)^0,c
  3645  0012F8  0E00               	movlw	0
  3646  0012FA  6E17               	movwf	(___fldiv@a+3)^0,c
  3647  0012FC                     l4796:
  3648  0012FC  8E16               	bsf	(___fldiv@a+2)^0,7,c
  3649  0012FE  D006               	goto	L2
  3650  001300                     l4800:
  3651  001300  0E00               	movlw	0
  3652  001302  6E14               	movwf	___fldiv@a^0,c
  3653  001304  0E00               	movlw	0
  3654  001306  6E15               	movwf	(___fldiv@a+1)^0,c
  3655  001308  0E00               	movlw	0
  3656  00130A  6E16               	movwf	(___fldiv@a+2)^0,c
  3657  00130C                     L2:
  3658  00130C  0E00               	movlw	0
  3659  00130E  6E17               	movwf	(___fldiv@a+3)^0,c
  3660  001310  5014               	movf	___fldiv@a^0,w,c
  3661  001312  1015               	iorwf	(___fldiv@a+1)^0,w,c
  3662  001314  1016               	iorwf	(___fldiv@a+2)^0,w,c
  3663  001316  1017               	iorwf	(___fldiv@a+3)^0,w,c
  3664  001318  A4D8               	btfss	status,2,c
  3665  00131A  D017               	goto	l4814
  3666  00131C  0E00               	movlw	0
  3667  00131E  6E10               	movwf	___fldiv@b^0,c
  3668  001320  0E00               	movlw	0
  3669  001322  6E11               	movwf	(___fldiv@b+1)^0,c
  3670  001324  0E00               	movlw	0
  3671  001326  6E12               	movwf	(___fldiv@b+2)^0,c
  3672  001328  0E00               	movlw	0
  3673  00132A  6E13               	movwf	(___fldiv@b+3)^0,c
  3674  00132C  0E80               	movlw	128
  3675  00132E  1212               	iorwf	(___fldiv@b+2)^0,f,c
  3676  001330  0E7F               	movlw	127
  3677  001332  1213               	iorwf	(___fldiv@b+3)^0,f,c
  3678  001334                     l4808:
  3679  001334  5020               	movf	___fldiv@sign^0,w,c
  3680  001336  1213               	iorwf	(___fldiv@b+3)^0,f,c
  3681  001338  C010  F010         	movff	___fldiv@b,?___fldiv
  3682  00133C  C011  F011         	movff	___fldiv@b+1,?___fldiv+1
  3683  001340  C012  F012         	movff	___fldiv@b+2,?___fldiv+2
  3684  001344  C013  F013         	movff	___fldiv@b+3,?___fldiv+3
  3685  001348  0012               	return	
  3686  00134A                     l4814:
  3687  00134A  5027               	movf	___fldiv@bexp^0,w,c
  3688  00134C  A4D8               	btfss	status,2,c
  3689  00134E  D009               	goto	l4822
  3690  001350  0E00               	movlw	0
  3691  001352  6E10               	movwf	?___fldiv^0,c
  3692  001354  0E00               	movlw	0
  3693  001356  6E11               	movwf	(?___fldiv+1)^0,c
  3694  001358  0E00               	movlw	0
  3695  00135A  6E12               	movwf	(?___fldiv+2)^0,c
  3696  00135C  0E00               	movlw	0
  3697  00135E  6E13               	movwf	(?___fldiv+3)^0,c
  3698  001360  0012               	return	
  3699  001362                     l4822:
  3700  001362  5028               	movf	___fldiv@aexp^0,w,c
  3701  001364  C027  F018         	movff	___fldiv@bexp,??___fldiv
  3702  001368  6A19               	clrf	(??___fldiv+1)^0,c
  3703  00136A  5E18               	subwf	??___fldiv^0,f,c
  3704  00136C  0E00               	movlw	0
  3705  00136E  5A19               	subwfb	(??___fldiv+1)^0,f,c
  3706  001370  0E7F               	movlw	127
  3707  001372  2418               	addwf	??___fldiv^0,w,c
  3708  001374  6E21               	movwf	___fldiv@new_exp^0,c
  3709  001376  0E00               	movlw	0
  3710  001378  2019               	addwfc	(??___fldiv+1)^0,w,c
  3711  00137A  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  3712  00137C  C010  F01C         	movff	___fldiv@b,___fldiv@rem
  3713  001380  C011  F01D         	movff	___fldiv@b+1,___fldiv@rem+1
  3714  001384  C012  F01E         	movff	___fldiv@b+2,___fldiv@rem+2
  3715  001388  C013  F01F         	movff	___fldiv@b+3,___fldiv@rem+3
  3716  00138C  0E00               	movlw	0
  3717  00138E  6E10               	movwf	___fldiv@b^0,c
  3718  001390  0E00               	movlw	0
  3719  001392  6E11               	movwf	(___fldiv@b+1)^0,c
  3720  001394  0E00               	movlw	0
  3721  001396  6E12               	movwf	(___fldiv@b+2)^0,c
  3722  001398  0E00               	movlw	0
  3723  00139A  6E13               	movwf	(___fldiv@b+3)^0,c
  3724  00139C  0E00               	movlw	0
  3725  00139E  6E23               	movwf	___fldiv@grs^0,c
  3726  0013A0  0E00               	movlw	0
  3727  0013A2  6E24               	movwf	(___fldiv@grs+1)^0,c
  3728  0013A4  0E00               	movlw	0
  3729  0013A6  6E25               	movwf	(___fldiv@grs+2)^0,c
  3730  0013A8  0E00               	movlw	0
  3731  0013AA  6E26               	movwf	(___fldiv@grs+3)^0,c
  3732  0013AC  0E00               	movlw	0
  3733  0013AE  6E28               	movwf	___fldiv@aexp^0,c
  3734  0013B0  D028               	goto	l1329
  3735  0013B2                     l4832:
  3736  0013B2  5028               	movf	___fldiv@aexp^0,w,c
  3737  0013B4  B4D8               	btfsc	status,2,c
  3738  0013B6  D011               	goto	l4840
  3739  0013B8  90D8               	bcf	status,0,c
  3740  0013BA  361C               	rlcf	___fldiv@rem^0,f,c
  3741  0013BC  361D               	rlcf	(___fldiv@rem+1)^0,f,c
  3742  0013BE  361E               	rlcf	(___fldiv@rem+2)^0,f,c
  3743  0013C0  361F               	rlcf	(___fldiv@rem+3)^0,f,c
  3744  0013C2  90D8               	bcf	status,0,c
  3745  0013C4  3610               	rlcf	___fldiv@b^0,f,c
  3746  0013C6  3611               	rlcf	(___fldiv@b+1)^0,f,c
  3747  0013C8  3612               	rlcf	(___fldiv@b+2)^0,f,c
  3748  0013CA  3613               	rlcf	(___fldiv@b+3)^0,f,c
  3749  0013CC  BE26               	btfsc	(___fldiv@grs+3)^0,7,c
  3750  0013CE  8010               	bsf	___fldiv@b^0,0,c
  3751  0013D0  90D8               	bcf	status,0,c
  3752  0013D2  3623               	rlcf	___fldiv@grs^0,f,c
  3753  0013D4  3624               	rlcf	(___fldiv@grs+1)^0,f,c
  3754  0013D6  3625               	rlcf	(___fldiv@grs+2)^0,f,c
  3755  0013D8  3626               	rlcf	(___fldiv@grs+3)^0,f,c
  3756  0013DA                     l4840:
  3757  0013DA  5014               	movf	___fldiv@a^0,w,c
  3758  0013DC  5C1C               	subwf	___fldiv@rem^0,w,c
  3759  0013DE  5015               	movf	(___fldiv@a+1)^0,w,c
  3760  0013E0  581D               	subwfb	(___fldiv@rem+1)^0,w,c
  3761  0013E2  5016               	movf	(___fldiv@a+2)^0,w,c
  3762  0013E4  581E               	subwfb	(___fldiv@rem+2)^0,w,c
  3763  0013E6  5017               	movf	(___fldiv@a+3)^0,w,c
  3764  0013E8  581F               	subwfb	(___fldiv@rem+3)^0,w,c
  3765  0013EA  A0D8               	btfss	status,0,c
  3766  0013EC  D009               	goto	l4846
  3767  0013EE  8C26               	bsf	(___fldiv@grs+3)^0,6,c
  3768  0013F0  5014               	movf	___fldiv@a^0,w,c
  3769  0013F2  5E1C               	subwf	___fldiv@rem^0,f,c
  3770  0013F4  5015               	movf	(___fldiv@a+1)^0,w,c
  3771  0013F6  5A1D               	subwfb	(___fldiv@rem+1)^0,f,c
  3772  0013F8  5016               	movf	(___fldiv@a+2)^0,w,c
  3773  0013FA  5A1E               	subwfb	(___fldiv@rem+2)^0,f,c
  3774  0013FC  5017               	movf	(___fldiv@a+3)^0,w,c
  3775  0013FE  5A1F               	subwfb	(___fldiv@rem+3)^0,f,c
  3776  001400                     l4846:
  3777  001400  2A28               	incf	___fldiv@aexp^0,f,c
  3778  001402                     l1329:
  3779  001402  0E19               	movlw	25
  3780  001404  6428               	cpfsgt	___fldiv@aexp^0,c
  3781  001406  D7D5               	goto	l4832
  3782  001408  501C               	movf	___fldiv@rem^0,w,c
  3783  00140A  101D               	iorwf	(___fldiv@rem+1)^0,w,c
  3784  00140C  101E               	iorwf	(___fldiv@rem+2)^0,w,c
  3785  00140E  101F               	iorwf	(___fldiv@rem+3)^0,w,c
  3786  001410  B4D8               	btfsc	status,2,c
  3787  001412  D011               	goto	l4858
  3788  001414  8023               	bsf	___fldiv@grs^0,0,c
  3789  001416  D00F               	goto	l4858
  3790  001418                     l4852:
  3791  001418  90D8               	bcf	status,0,c
  3792  00141A  3610               	rlcf	___fldiv@b^0,f,c
  3793  00141C  3611               	rlcf	(___fldiv@b+1)^0,f,c
  3794  00141E  3612               	rlcf	(___fldiv@b+2)^0,f,c
  3795  001420  3613               	rlcf	(___fldiv@b+3)^0,f,c
  3796  001422  BE26               	btfsc	(___fldiv@grs+3)^0,7,c
  3797  001424  8010               	bsf	___fldiv@b^0,0,c
  3798  001426  90D8               	bcf	status,0,c
  3799  001428  3623               	rlcf	___fldiv@grs^0,f,c
  3800  00142A  3624               	rlcf	(___fldiv@grs+1)^0,f,c
  3801  00142C  3625               	rlcf	(___fldiv@grs+2)^0,f,c
  3802  00142E  3626               	rlcf	(___fldiv@grs+3)^0,f,c
  3803  001430  0621               	decf	___fldiv@new_exp^0,f,c
  3804  001432  A0D8               	btfss	status,0,c
  3805  001434  0622               	decf	(___fldiv@new_exp+1)^0,f,c
  3806  001436                     l4858:
  3807  001436  AE12               	btfss	(___fldiv@b+2)^0,7,c
  3808  001438  D7EF               	goto	l4852
  3809  00143A  0E00               	movlw	0
  3810  00143C  6E28               	movwf	___fldiv@aexp^0,c
  3811  00143E  AE26               	btfss	(___fldiv@grs+3)^0,7,c
  3812  001440  D017               	goto	l1340
  3813  001442  0EFF               	movlw	255
  3814  001444  1423               	andwf	___fldiv@grs^0,w,c
  3815  001446  6E18               	movwf	??___fldiv^0,c
  3816  001448  0EFF               	movlw	255
  3817  00144A  1424               	andwf	(___fldiv@grs+1)^0,w,c
  3818  00144C  6E19               	movwf	(??___fldiv+1)^0,c
  3819  00144E  0EFF               	movlw	255
  3820  001450  1425               	andwf	(___fldiv@grs+2)^0,w,c
  3821  001452  6E1A               	movwf	(??___fldiv+2)^0,c
  3822  001454  0E7F               	movlw	127
  3823  001456  1426               	andwf	(___fldiv@grs+3)^0,w,c
  3824  001458  6E1B               	movwf	(??___fldiv+3)^0,c
  3825  00145A  5018               	movf	??___fldiv^0,w,c
  3826  00145C  1019               	iorwf	(??___fldiv+1)^0,w,c
  3827  00145E  101A               	iorwf	(??___fldiv+2)^0,w,c
  3828  001460  101B               	iorwf	(??___fldiv+3)^0,w,c
  3829  001462  B4D8               	btfsc	status,2,c
  3830  001464  D003               	goto	l1341
  3831  001466                     u4270:
  3832  001466  0E01               	movlw	1
  3833  001468  6E28               	movwf	___fldiv@aexp^0,c
  3834  00146A  D002               	goto	l1340
  3835  00146C                     l1341:
  3836  00146C  B010               	btfsc	___fldiv@b^0,0,c
  3837  00146E  D7FB               	goto	u4270
  3838  001470                     l1340:
  3839  001470  5028               	movf	___fldiv@aexp^0,w,c
  3840  001472  B4D8               	btfsc	status,2,c
  3841  001474  D01F               	goto	l4878
  3842  001476  0E01               	movlw	1
  3843  001478  2610               	addwf	___fldiv@b^0,f,c
  3844  00147A  0E00               	movlw	0
  3845  00147C  2211               	addwfc	(___fldiv@b+1)^0,f,c
  3846  00147E  2212               	addwfc	(___fldiv@b+2)^0,f,c
  3847  001480  2213               	addwfc	(___fldiv@b+3)^0,f,c
  3848  001482  A013               	btfss	(___fldiv@b+3)^0,0,c
  3849  001484  D017               	goto	l4878
  3850  001486  C010  F018         	movff	___fldiv@b,??___fldiv
  3851  00148A  C011  F019         	movff	___fldiv@b+1,??___fldiv+1
  3852  00148E  C012  F01A         	movff	___fldiv@b+2,??___fldiv+2
  3853  001492  C013  F01B         	movff	___fldiv@b+3,??___fldiv+3
  3854  001496  341B               	rlcf	(??___fldiv+3)^0,w,c
  3855  001498  321B               	rrcf	(??___fldiv+3)^0,f,c
  3856  00149A  321A               	rrcf	(??___fldiv+2)^0,f,c
  3857  00149C  3219               	rrcf	(??___fldiv+1)^0,f,c
  3858  00149E  3218               	rrcf	??___fldiv^0,f,c
  3859  0014A0  C018  F010         	movff	??___fldiv,___fldiv@b
  3860  0014A4  C019  F011         	movff	??___fldiv+1,___fldiv@b+1
  3861  0014A8  C01A  F012         	movff	??___fldiv+2,___fldiv@b+2
  3862  0014AC  C01B  F013         	movff	??___fldiv+3,___fldiv@b+3
  3863  0014B0  4A21               	infsnz	___fldiv@new_exp^0,f,c
  3864  0014B2  2A22               	incf	(___fldiv@new_exp+1)^0,f,c
  3865  0014B4                     l4878:
  3866  0014B4  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3867  0014B6  D010               	goto	l4882
  3868  0014B8  5022               	movf	(___fldiv@new_exp+1)^0,w,c
  3869  0014BA  E103               	bnz	u4310
  3870  0014BC  2821               	incf	___fldiv@new_exp^0,w,c
  3871  0014BE  A0D8               	btfss	status,0,c
  3872  0014C0  D00B               	goto	l4882
  3873  0014C2                     u4310:
  3874  0014C2  0E00               	movlw	0
  3875  0014C4  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  3876  0014C6  6821               	setf	___fldiv@new_exp^0,c
  3877  0014C8  0E00               	movlw	0
  3878  0014CA  6E10               	movwf	___fldiv@b^0,c
  3879  0014CC  0E00               	movlw	0
  3880  0014CE  6E11               	movwf	(___fldiv@b+1)^0,c
  3881  0014D0  0E00               	movlw	0
  3882  0014D2  6E12               	movwf	(___fldiv@b+2)^0,c
  3883  0014D4  0E00               	movlw	0
  3884  0014D6  6E13               	movwf	(___fldiv@b+3)^0,c
  3885  0014D8                     l4882:
  3886  0014D8  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3887  0014DA  D005               	goto	u4320
  3888  0014DC  5022               	movf	(___fldiv@new_exp+1)^0,w,c
  3889  0014DE  E111               	bnz	l4886
  3890  0014E0  0421               	decf	___fldiv@new_exp^0,w,c
  3891  0014E2  B0D8               	btfsc	status,0,c
  3892  0014E4  D00E               	goto	l4886
  3893  0014E6                     u4320:
  3894  0014E6  0E00               	movlw	0
  3895  0014E8  6E22               	movwf	(___fldiv@new_exp+1)^0,c
  3896  0014EA  0E00               	movlw	0
  3897  0014EC  6E21               	movwf	___fldiv@new_exp^0,c
  3898  0014EE  0E00               	movlw	0
  3899  0014F0  6E10               	movwf	___fldiv@b^0,c
  3900  0014F2  0E00               	movlw	0
  3901  0014F4  6E11               	movwf	(___fldiv@b+1)^0,c
  3902  0014F6  0E00               	movlw	0
  3903  0014F8  6E12               	movwf	(___fldiv@b+2)^0,c
  3904  0014FA  0E00               	movlw	0
  3905  0014FC  6E13               	movwf	(___fldiv@b+3)^0,c
  3906  0014FE  0E00               	movlw	0
  3907  001500  6E20               	movwf	___fldiv@sign^0,c
  3908  001502                     l4886:
  3909  001502  C021  F027         	movff	___fldiv@new_exp,___fldiv@bexp
  3910  001506  A027               	btfss	___fldiv@bexp^0,0,c
  3911  001508  D002               	goto	l4892
  3912  00150A  8E12               	bsf	(___fldiv@b+2)^0,7,c
  3913  00150C  D001               	goto	l4894
  3914  00150E                     l4892:
  3915  00150E  9E12               	bcf	(___fldiv@b+2)^0,7,c
  3916  001510                     l4894:
  3917  001510  90D8               	bcf	status,0,c
  3918  001512  3027               	rrcf	___fldiv@bexp^0,w,c
  3919  001514  6E13               	movwf	(___fldiv@b+3)^0,c
  3920  001516  D70E               	goto	l4808
  3921  001518                     __end_of___fldiv:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _SPI2ReadByte *****************
  3925 ;; Defined at:
  3926 ;;		line 119 in file "LoRa.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  address         1    wreg     unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  address         1    1[COMRAM] unsigned char 
  3931 ;;  dataByte        1    2[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      unsigned char 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_readOpModeRegister
  3952 ;;		_LoRaGetFrequency
  3953 ;;		_LoRaGetIRQFlags
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text16
  3958  002D30                     __ptext16:
  3959                           	callstack 0
  3960  002D30                     _SPI2ReadByte:
  3961                           	callstack 25
  3962                           
  3963                           ;incstack = 0
  3964                           ;SPI2ReadByte@address stored from wreg
  3965  002D30  6E02               	movwf	SPI2ReadByte@address^0,c
  3966                           
  3967                           ;LoRa.c: 120: SSP2IF=0;
  3968  002D32  9EA4               	bcf	4004,7,c	;volatile
  3969                           
  3970                           ;LoRa.c: 121: LATDbits.LATD3=0;
  3971  002D34  968C               	bcf	140,3,c	;volatile
  3972                           
  3973                           ;LoRa.c: 122: SSP2BUF=address;
  3974  002D36  C002  FF6F         	movff	SPI2ReadByte@address,3951	;volatile
  3975  002D3A                     l352:
  3976  002D3A  AEA4               	btfss	4004,7,c	;volatile
  3977  002D3C  D7FE               	goto	l352
  3978                           
  3979                           ;LoRa.c: 125: };LoRa.c: 126: SSP2IF=0;
  3980  002D3E  9EA4               	bcf	4004,7,c	;volatile
  3981                           
  3982                           ;LoRa.c: 127: SSP2BUF=0;
  3983  002D40  0E00               	movlw	0
  3984  002D42  6E6F               	movwf	111,c	;volatile
  3985  002D44                     l355:
  3986  002D44  AEA4               	btfss	4004,7,c	;volatile
  3987  002D46  D7FE               	goto	l355
  3988                           
  3989                           ;LoRa.c: 130: };LoRa.c: 131: SSP2IF=0;
  3990  002D48  9EA4               	bcf	4004,7,c	;volatile
  3991                           
  3992                           ;LoRa.c: 133: LATDbits.LATD3=1;
  3993  002D4A  868C               	bsf	140,3,c	;volatile
  3994                           
  3995                           ;LoRa.c: 134: uint8_t dataByte = SSP2BUF;
  3996  002D4C  CF6F F003          	movff	3951,SPI2ReadByte@dataByte	;volatile
  3997                           
  3998                           ;LoRa.c: 135: return dataByte;
  3999  002D50  5003               	movf	SPI2ReadByte@dataByte^0,w,c
  4000  002D52  0012               	return		;funcret
  4001  002D54                     __end_of_SPI2ReadByte:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _LoRaClearIRQFlags *****************
  4005 ;; Defined at:
  4006 ;;		line 249 in file "LoRa.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 3F/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    2
  4027 ;; This function calls:
  4028 ;;		_SPI2WriteByte
  4029 ;; This function is called by:
  4030 ;;		_transmitData
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text17
  4035  002E54                     __ptext17:
  4036                           	callstack 0
  4037  002E54                     _LoRaClearIRQFlags:
  4038                           	callstack 27
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;LoRa.c: 250: SPI2WriteByte(0x12,0xFF);
  4042                           
  4043                           ;incstack = 0
  4044  002E54  0EFF               	movlw	255
  4045  002E56  6E02               	movwf	SPI2WriteByte@data^0,c
  4046  002E58  0E12               	movlw	18
  4047  002E5A  EC29  F015         	call	_SPI2WriteByte
  4048  002E5E  0012               	return		;funcret
  4049  002E60                     __end_of_LoRaClearIRQFlags:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _SPI2WriteByte *****************
  4053 ;; Defined at:
  4054 ;;		line 91 in file "LoRa.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  address         1    wreg     unsigned char 
  4057 ;;  data            1    1[COMRAM] unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  address         1    3[COMRAM] unsigned char 
  4060 ;;  dataByte        1    0        unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4070 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;Total ram usage:        3 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_writeOpModeRegister
  4081 ;;		_LoRaTXData
  4082 ;;		_LoRaSetFrequency
  4083 ;;		_LoRaClearIRQFlags
  4084 ;;		_LoRaOptimalLoad
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text18
  4089  002A52                     __ptext18:
  4090                           	callstack 0
  4091  002A52                     _SPI2WriteByte:
  4092                           	callstack 27
  4093                           
  4094                           ;incstack = 0
  4095                           ;SPI2WriteByte@address stored from wreg
  4096  002A52  6E04               	movwf	SPI2WriteByte@address^0,c
  4097                           
  4098                           ;LoRa.c: 92: SSP2IF=0;
  4099  002A54  9EA4               	bcf	4004,7,c	;volatile
  4100                           
  4101                           ;LoRa.c: 93: LATDbits.LATD3=0;
  4102  002A56  968C               	bcf	140,3,c	;volatile
  4103                           
  4104                           ;LoRa.c: 94: _delay((unsigned long)((5)*(64000000/4000000.0)));
  4105  002A58  0E1A               	movlw	26
  4106  002A5A                     u5007:
  4107  002A5A  2EE8               	decfsz	wreg,f,c
  4108  002A5C  D7FE               	bra	u5007
  4109  002A5E  D000               	nop2	
  4110                           
  4111                           ;LoRa.c: 95: address = address|0x80;
  4112  002A60  5004               	movf	SPI2WriteByte@address^0,w,c
  4113  002A62  0980               	iorlw	128
  4114  002A64  6E04               	movwf	SPI2WriteByte@address^0,c
  4115                           
  4116                           ;LoRa.c: 96: SSP2BUF=address;
  4117  002A66  C004  FF6F         	movff	SPI2WriteByte@address,3951	;volatile
  4118  002A6A                     l343:
  4119  002A6A  AEA4               	btfss	4004,7,c	;volatile
  4120  002A6C  D7FE               	goto	l343
  4121                           
  4122                           ;LoRa.c: 99: };LoRa.c: 100: SSP2IF=0;
  4123  002A6E  9EA4               	bcf	4004,7,c	;volatile
  4124                           
  4125                           ;LoRa.c: 101: _delay((unsigned long)((5)*(64000000/4000000.0)));
  4126  002A70  0E1A               	movlw	26
  4127  002A72                     u5017:
  4128  002A72  2EE8               	decfsz	wreg,f,c
  4129  002A74  D7FE               	bra	u5017
  4130  002A76  D000               	nop2	
  4131                           
  4132                           ;LoRa.c: 102: SSP2BUF=data;
  4133  002A78  C002  FF6F         	movff	SPI2WriteByte@data,3951	;volatile
  4134  002A7C                     l346:
  4135  002A7C  AEA4               	btfss	4004,7,c	;volatile
  4136  002A7E  D7FE               	goto	l346
  4137                           
  4138                           ;LoRa.c: 105: };LoRa.c: 106: _delay((unsigned long)((5)*(64000000/4000000.0)));
  4139  002A80  0E1A               	movlw	26
  4140  002A82                     u5027:
  4141  002A82  2EE8               	decfsz	wreg,f,c
  4142  002A84  D7FE               	bra	u5027
  4143  002A86  D000               	nop2	
  4144                           
  4145                           ;LoRa.c: 107: LATDbits.LATD3=1;
  4146  002A88  868C               	bsf	140,3,c	;volatile
  4147                           
  4148                           ;LoRa.c: 108: SSP2IF=0;
  4149  002A8A  9EA4               	bcf	4004,7,c	;volatile
  4150  002A8C  506F               	movf	111,w,c	;volatile
  4151  002A8E  0012               	return		;funcret
  4152  002A90                     __end_of_SPI2WriteByte:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _CRC16 *****************
  4156 ;; Defined at:
  4157 ;;		line 10 in file "CRC16.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  nData           1    1[COMRAM] PTR const unsigned char 
  4160 ;;		 -> txData(50), 
  4161 ;;  wLength         2    2[COMRAM] unsigned short 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  wCRCWord        2    7[COMRAM] unsigned short 
  4164 ;;  nTemp           1    6[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2    1[COMRAM] unsigned short 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4169 ;; Tracked objects:
  4170 ;;		On entry : 3F/0
  4171 ;;		On exit  : 3F/0
  4172 ;;		Unchanged: 3F/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4174 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;Total ram usage:        8 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_transmitData
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text19
  4189  002884                     __ptext19:
  4190                           	callstack 0
  4191  002884                     _CRC16:
  4192                           	callstack 28
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;CRC16.c: 11: static const unsigned short int wCRCTable[] = {;CRC16.c: 12: 0X0000, 0XC0C
      +                          1, 0XC181, 0X0140, 0XC301, 0X03C0, 0X0280, 0XC241,;CRC16.c: 13: 0XC601, 0X06C0, 0X0780, 
      +                          0XC741, 0X0500, 0XC5C1, 0XC481, 0X0440,;CRC16.c: 14: 0XCC01, 0X0CC0, 0X0D80, 0XCD41, 0X0
      +                          F00, 0XCFC1, 0XCE81, 0X0E40,;CRC16.c: 15: 0X0A00, 0XCAC1, 0XCB81, 0X0B40, 0XC901, 0X09C0
      +                          , 0X0880, 0XC841,;CRC16.c: 16: 0XD801, 0X18C0, 0X1980, 0XD941, 0X1B00, 0XDBC1, 0XDA81, 0
      +                          X1A40,;CRC16.c: 17: 0X1E00, 0XDEC1, 0XDF81, 0X1F40, 0XDD01, 0X1DC0, 0X1C80, 0XDC41,
  4196                           
  4197                           ;incstack = 0
  4198  002884  6808               	setf	CRC16@wCRCWord^0,c
  4199  002886  6809               	setf	(CRC16@wCRCWord+1)^0,c
  4200                           
  4201                           ;CRC16.c: 48: while (wLength--){
  4202  002888  D01C               	goto	l4912
  4203  00288A                     l4904:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;CRC16.c: 49: nTemp = *nData++ ^ wCRCWord;
  4207  00288A  5002               	movf	CRC16@nData^0,w,c
  4208  00288C  6ED9               	movwf	fsr2l,c
  4209  00288E  6ADA               	clrf	fsr2h,c
  4210  002890  50DF               	movf	indf2,w,c
  4211  002892  1808               	xorwf	CRC16@wCRCWord^0,w,c
  4212  002894  6E07               	movwf	CRC16@nTemp^0,c
  4213                           
  4214                           ; BSR set to: 0
  4215  002896  2A02               	incf	CRC16@nData^0,f,c
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;CRC16.c: 50: wCRCWord >>= 8;
  4219  002898  C009  F008         	movff	CRC16@wCRCWord+1,CRC16@wCRCWord
  4220  00289C  6A09               	clrf	(CRC16@wCRCWord+1)^0,c
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;CRC16.c: 51: wCRCWord ^= wCRCTable[nTemp];
  4224  00289E  5007               	movf	CRC16@nTemp^0,w,c
  4225  0028A0  0D02               	mullw	2
  4226  0028A2  0E45               	movlw	low CRC16@wCRCTable
  4227  0028A4  24F3               	addwf	243,w,c
  4228  0028A6  6EF6               	movwf	tblptrl,c
  4229  0028A8  0EFC               	movlw	high CRC16@wCRCTable
  4230  0028AA  20F4               	addwfc	244,w,c
  4231  0028AC  6EF7               	movwf	tblptrh,c
  4232  0028AE                     	if	0	;There are less than 3 active tblptr bytes
  4233  0028AE                     	endif
  4234  0028AE  0009               	tblrd		*+
  4235  0028B0  CFF5 F005          	movff	tablat,??_CRC16
  4236  0028B4  0009               	tblrd		*+
  4237  0028B6  CFF5 F006          	movff	tablat,??_CRC16+1
  4238  0028BA  5005               	movf	??_CRC16^0,w,c
  4239  0028BC  1A08               	xorwf	CRC16@wCRCWord^0,f,c
  4240  0028BE  5006               	movf	(??_CRC16+1)^0,w,c
  4241  0028C0  1A09               	xorwf	(CRC16@wCRCWord+1)^0,f,c
  4242  0028C2                     l4912:
  4243                           
  4244                           ; BSR set to: 0
  4245  0028C2  0603               	decf	CRC16@wLength^0,f,c
  4246  0028C4  A0D8               	btfss	status,0,c
  4247  0028C6  0604               	decf	(CRC16@wLength+1)^0,f,c
  4248  0028C8  2803               	incf	CRC16@wLength^0,w,c
  4249  0028CA  E1DF               	bnz	l4904
  4250  0028CC  2804               	incf	(CRC16@wLength+1)^0,w,c
  4251  0028CE  A4D8               	btfss	status,2,c
  4252  0028D0  D7DC               	goto	l4904
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;CRC16.c: 52: };CRC16.c: 53: return wCRCWord;
  4256  0028D2  C008  F002         	movff	CRC16@wCRCWord,?_CRC16
  4257  0028D6  C009  F003         	movff	CRC16@wCRCWord+1,?_CRC16+1
  4258                           
  4259                           ; BSR set to: 0
  4260  0028DA  0012               	return		;funcret
  4261  0028DC                     __end_of_CRC16:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _setupInterruptPin *****************
  4265 ;; Defined at:
  4266 ;;		line 422 in file "main.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		None
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text20
  4295  002E60                     __ptext20:
  4296                           	callstack 0
  4297  002E60                     _setupInterruptPin:
  4298                           	callstack 29
  4299                           
  4300                           ;main.c: 423: INTCONbits.RBIE=1;
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;incstack = 0
  4304  002E60  86F2               	bsf	242,3,c	;volatile
  4305                           
  4306                           ;main.c: 424: IOCBbits.IOCB5=1;
  4307  002E62  8A62               	bsf	98,5,c	;volatile
  4308                           
  4309                           ;main.c: 425: INTCONbits.PEIE=1;
  4310  002E64  8CF2               	bsf	242,6,c	;volatile
  4311                           
  4312                           ;main.c: 426: INTCONbits.GIE=1;
  4313  002E66  8EF2               	bsf	242,7,c	;volatile
  4314                           
  4315                           ;main.c: 427: INTCONbits.RBIF=0;
  4316  002E68  90F2               	bcf	242,0,c	;volatile
  4317  002E6A  0012               	return		;funcret
  4318  002E6C                     __end_of_setupInterruptPin:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _readVSupply *****************
  4322 ;; Defined at:
  4323 ;;		line 362 in file "main.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  result          2    5[COMRAM] unsigned int 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  2    1[COMRAM] unsigned int 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:        6 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_main
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text21
  4352  002B7A                     __ptext21:
  4353                           	callstack 0
  4354  002B7A                     _readVSupply:
  4355                           	callstack 29
  4356                           
  4357                           ;main.c: 364: ADCON0bits.CHS=0b10;
  4358                           
  4359                           ;incstack = 0
  4360  002B7A  50C2               	movf	194,w,c	;volatile
  4361  002B7C  0B83               	andlw	-125
  4362  002B7E  0908               	iorlw	8
  4363  002B80  6EC2               	movwf	194,c	;volatile
  4364                           
  4365                           ;main.c: 365: ADCON1bits.PVCFG=0b10;
  4366  002B82  50C1               	movf	193,w,c	;volatile
  4367  002B84  0BF3               	andlw	-13
  4368  002B86  0908               	iorlw	8
  4369  002B88  6EC1               	movwf	193,c	;volatile
  4370                           
  4371                           ;main.c: 366: ADCON0bits.GO_NOT_DONE=1;
  4372  002B8A  82C2               	bsf	194,1,c	;volatile
  4373  002B8C                     l205:
  4374  002B8C  B2C2               	btfsc	194,1,c	;volatile
  4375  002B8E  D7FE               	goto	l205
  4376                           
  4377                           ;main.c: 369: };main.c: 370: uint16_t result = ADRESH * 256 + ADRESL;
  4378  002B90  50C4               	movf	196,w,c	;volatile
  4379  002B92  6E05               	movwf	(??_readVSupply+1)^0,c
  4380  002B94  6A04               	clrf	??_readVSupply^0,c
  4381  002B96  50C3               	movf	195,w,c	;volatile
  4382  002B98  2404               	addwf	??_readVSupply^0,w,c
  4383  002B9A  6E06               	movwf	readVSupply@result^0,c
  4384  002B9C  0E00               	movlw	0
  4385  002B9E  2005               	addwfc	(??_readVSupply+1)^0,w,c
  4386  002BA0  6E07               	movwf	(readVSupply@result+1)^0,c
  4387                           
  4388                           ;main.c: 371: return result;
  4389  002BA2  C006  F002         	movff	readVSupply@result,?_readVSupply
  4390  002BA6  C007  F003         	movff	readVSupply@result+1,?_readVSupply+1
  4391  002BAA  0012               	return		;funcret
  4392  002BAC                     __end_of_readVSupply:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _readVFan *****************
  4396 ;; Defined at:
  4397 ;;		line 377 in file "main.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  result          2    5[COMRAM] unsigned int 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  2    1[COMRAM] unsigned int 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        6 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text22
  4426  002BAC                     __ptext22:
  4427                           	callstack 0
  4428  002BAC                     _readVFan:
  4429                           	callstack 29
  4430                           
  4431                           ;main.c: 379: ADCON0bits.CHS=0b11;
  4432                           
  4433                           ;incstack = 0
  4434  002BAC  50C2               	movf	194,w,c	;volatile
  4435  002BAE  0B83               	andlw	-125
  4436  002BB0  090C               	iorlw	12
  4437  002BB2  6EC2               	movwf	194,c	;volatile
  4438                           
  4439                           ;main.c: 380: ADCON1bits.PVCFG=0b10;
  4440  002BB4  50C1               	movf	193,w,c	;volatile
  4441  002BB6  0BF3               	andlw	-13
  4442  002BB8  0908               	iorlw	8
  4443  002BBA  6EC1               	movwf	193,c	;volatile
  4444                           
  4445                           ;main.c: 381: ADCON0bits.GO_NOT_DONE=1;
  4446  002BBC  82C2               	bsf	194,1,c	;volatile
  4447  002BBE                     l211:
  4448  002BBE  B2C2               	btfsc	194,1,c	;volatile
  4449  002BC0  D7FE               	goto	l211
  4450                           
  4451                           ;main.c: 384: };main.c: 385: uint16_t result = ADRESH * 256 + ADRESL;
  4452  002BC2  50C4               	movf	196,w,c	;volatile
  4453  002BC4  6E05               	movwf	(??_readVFan+1)^0,c
  4454  002BC6  6A04               	clrf	??_readVFan^0,c
  4455  002BC8  50C3               	movf	195,w,c	;volatile
  4456  002BCA  2404               	addwf	??_readVFan^0,w,c
  4457  002BCC  6E06               	movwf	readVFan@result^0,c
  4458  002BCE  0E00               	movlw	0
  4459  002BD0  2005               	addwfc	(??_readVFan+1)^0,w,c
  4460  002BD2  6E07               	movwf	(readVFan@result+1)^0,c
  4461                           
  4462                           ;main.c: 386: return result;
  4463  002BD4  C006  F002         	movff	readVFan@result,?_readVFan
  4464  002BD8  C007  F003         	movff	readVFan@result+1,?_readVFan+1
  4465  002BDC  0012               	return		;funcret
  4466  002BDE                     __end_of_readVFan:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _readTemperature *****************
  4470 ;; Defined at:
  4471 ;;		line 347 in file "main.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  result          2    5[COMRAM] unsigned int 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2    1[COMRAM] unsigned int 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;Total ram usage:        6 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text23
  4500  002BDE                     __ptext23:
  4501                           	callstack 0
  4502  002BDE                     _readTemperature:
  4503                           	callstack 29
  4504                           
  4505                           ;main.c: 348: ADCON1bits.PVCFG=0;
  4506                           
  4507                           ;incstack = 0
  4508  002BDE  0EF3               	movlw	-13
  4509  002BE0  16C1               	andwf	193,f,c	;volatile
  4510                           
  4511                           ;main.c: 350: ADCON0bits.CHS=1;
  4512  002BE2  50C2               	movf	194,w,c	;volatile
  4513  002BE4  0B83               	andlw	-125
  4514  002BE6  0904               	iorlw	4
  4515  002BE8  6EC2               	movwf	194,c	;volatile
  4516                           
  4517                           ;main.c: 351: ADCON0bits.GO_NOT_DONE=1;
  4518  002BEA  82C2               	bsf	194,1,c	;volatile
  4519  002BEC                     l199:
  4520  002BEC  B2C2               	btfsc	194,1,c	;volatile
  4521  002BEE  D7FE               	goto	l199
  4522                           
  4523                           ;main.c: 354: };main.c: 355: uint16_t result = ADRESH * 256 + ADRESL;
  4524  002BF0  50C4               	movf	196,w,c	;volatile
  4525  002BF2  6E05               	movwf	(??_readTemperature+1)^0,c
  4526  002BF4  6A04               	clrf	??_readTemperature^0,c
  4527  002BF6  50C3               	movf	195,w,c	;volatile
  4528  002BF8  2404               	addwf	??_readTemperature^0,w,c
  4529  002BFA  6E06               	movwf	readTemperature@result^0,c
  4530  002BFC  0E00               	movlw	0
  4531  002BFE  2005               	addwfc	(??_readTemperature+1)^0,w,c
  4532  002C00  6E07               	movwf	(readTemperature@result+1)^0,c
  4533                           
  4534                           ;main.c: 356: return result;
  4535  002C02  C006  F002         	movff	readTemperature@result,?_readTemperature
  4536  002C06  C007  F003         	movff	readTemperature@result+1,?_readTemperature+1
  4537  002C0A  0012               	return		;funcret
  4538  002C0C                     __end_of_readTemperature:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _readRH *****************
  4542 ;; Defined at:
  4543 ;;		line 246 in file "main.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  rhTemp          2   15[COMRAM] unsigned int 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  2   13[COMRAM] unsigned int 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;Total ram usage:        4 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    4
  4564 ;; This function calls:
  4565 ;;		_readADS1110
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text24
  4572  002DC8                     __ptext24:
  4573                           	callstack 0
  4574  002DC8                     _readRH:
  4575                           	callstack 26
  4576                           
  4577                           ;main.c: 247: uint16_t rhTemp = readADS1110(0b10010000);
  4578                           
  4579                           ;incstack = 0
  4580  002DC8  0E90               	movlw	144
  4581  002DCA  ECA1  F015         	call	_readADS1110
  4582  002DCE  C006  F010         	movff	?_readADS1110,readRH@rhTemp
  4583  002DD2  C007  F011         	movff	?_readADS1110+1,readRH@rhTemp+1
  4584                           
  4585                           ;main.c: 248: return rhTemp;
  4586  002DD6  C010  F00E         	movff	readRH@rhTemp,?_readRH
  4587  002DDA  C011  F00F         	movff	readRH@rhTemp+1,?_readRH+1
  4588  002DDE  0012               	return		;funcret
  4589  002DE0                     __end_of_readRH:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _readADS1110 *****************
  4593 ;; Defined at:
  4594 ;;		line 30 in file "ADS1110.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  address         1    wreg     unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  address         1   10[COMRAM] unsigned char 
  4599 ;;  lsb             1   12[COMRAM] unsigned char 
  4600 ;;  msb             1   11[COMRAM] unsigned char 
  4601 ;;  cfg             1    0        unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2    5[COMRAM] unsigned int 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;Total ram usage:        8 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    3
  4618 ;; This function calls:
  4619 ;;		_I2C1_Read_Byte
  4620 ;;		_I2C1_Start
  4621 ;;		_I2C1_Stop
  4622 ;;		_I2C1_Write_Byte_Read_Ack
  4623 ;; This function is called by:
  4624 ;;		_readRH
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text25
  4629  002B42                     __ptext25:
  4630                           	callstack 0
  4631  002B42                     _readADS1110:
  4632                           	callstack 26
  4633                           
  4634                           ;incstack = 0
  4635                           ;readADS1110@address stored from wreg
  4636  002B42  6E0B               	movwf	readADS1110@address^0,c
  4637                           
  4638                           ;ADS1110.c: 31: I2C1_Start();
  4639  002B44  EC48  F017         	call	_I2C1_Start	;wreg free
  4640                           
  4641                           ;ADS1110.c: 32: i2cFault = I2C1_Write_Byte_Read_Ack(address+1u);
  4642  002B48  280B               	incf	readADS1110@address^0,w,c
  4643  002B4A  EC34  F016         	call	_I2C1_Write_Byte_Read_Ack
  4644  002B4E  0100               	movlb	0	; () banked
  4645  002B50  6F74               	movwf	_i2cFault& (0+255),b
  4646                           
  4647                           ;ADS1110.c: 33: char msb = I2C1_Read_Byte(1);
  4648  002B52  0E01               	movlw	1
  4649  002B54  EC72  F016         	call	_I2C1_Read_Byte
  4650  002B58  6E0C               	movwf	readADS1110@msb^0,c
  4651                           
  4652                           ;ADS1110.c: 34: char lsb = I2C1_Read_Byte(1);
  4653  002B5A  0E01               	movlw	1
  4654  002B5C  EC72  F016         	call	_I2C1_Read_Byte
  4655  002B60  6E0D               	movwf	readADS1110@lsb^0,c
  4656  002B62  0E00               	movlw	0
  4657  002B64  EC72  F016         	call	_I2C1_Read_Byte
  4658                           
  4659                           ;ADS1110.c: 36: I2C1_Stop();
  4660  002B68  EC44  F017         	call	_I2C1_Stop	;wreg free
  4661                           
  4662                           ;ADS1110.c: 37: return msb*256u+lsb;
  4663  002B6C  500C               	movf	readADS1110@msb^0,w,c
  4664  002B6E  6E08               	movwf	??_readADS1110^0,c
  4665  002B70  500D               	movf	readADS1110@lsb^0,w,c
  4666  002B72  6E06               	movwf	?_readADS1110^0,c
  4667  002B74  C008  F007         	movff	??_readADS1110,?_readADS1110+1
  4668  002B78  0012               	return		;funcret
  4669  002B7A                     __end_of_readADS1110:
  4670                           	callstack 0
  4671                           
  4672 ;; *************** function _I2C1_Read_Byte *****************
  4673 ;; Defined at:
  4674 ;;		line 84 in file "i2c1.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  a               1    wreg     unsigned char 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  a               1    3[COMRAM] unsigned char 
  4679 ;;  temp            1    4[COMRAM] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        2 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    2
  4696 ;; This function calls:
  4697 ;;		_I2C1_Wait
  4698 ;; This function is called by:
  4699 ;;		_readADS1110
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text26
  4704  002CE4                     __ptext26:
  4705                           	callstack 0
  4706  002CE4                     _I2C1_Read_Byte:
  4707                           	callstack 26
  4708                           
  4709                           ;incstack = 0
  4710                           ;I2C1_Read_Byte@a stored from wreg
  4711  002CE4  6E04               	movwf	I2C1_Read_Byte@a^0,c
  4712                           
  4713                           ;i2c1.c: 85: unsigned char temp;;i2c1.c: 86: I2C1_Wait();
  4714  002CE6  ECBA  F016         	call	_I2C1_Wait	;wreg free
  4715                           
  4716                           ;i2c1.c: 87: RCEN1 = 1;
  4717  002CEA  86C5               	bsf	4037,3,c	;volatile
  4718                           
  4719                           ;i2c1.c: 88: I2C1_Wait();
  4720  002CEC  ECBA  F016         	call	_I2C1_Wait	;wreg free
  4721                           
  4722                           ;i2c1.c: 89: temp = SSPBUF;
  4723  002CF0  CFC9 F005          	movff	4041,I2C1_Read_Byte@temp	;volatile
  4724                           
  4725                           ;i2c1.c: 90: I2C1_Wait();
  4726  002CF4  ECBA  F016         	call	_I2C1_Wait	;wreg free
  4727                           
  4728                           ;i2c1.c: 91: ACKDT1 = (a)?0:1;
  4729  002CF8  5004               	movf	I2C1_Read_Byte@a^0,w,c
  4730  002CFA  A4D8               	btfss	status,2,c
  4731  002CFC  D002               	goto	u4090
  4732  002CFE  8AC5               	bsf	4037,5,c	;volatile
  4733  002D00  D001               	goto	u4105
  4734  002D02                     u4090:
  4735  002D02  9AC5               	bcf	4037,5,c	;volatile
  4736  002D04                     u4105:
  4737                           
  4738                           ;i2c1.c: 92: ACKEN1 = 1;
  4739  002D04  88C5               	bsf	4037,4,c	;volatile
  4740                           
  4741                           ;i2c1.c: 93: return temp;
  4742  002D06  5005               	movf	I2C1_Read_Byte@temp^0,w,c
  4743  002D08  0012               	return		;funcret
  4744  002D0A                     __end_of_I2C1_Read_Byte:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _readBattery *****************
  4748 ;; Defined at:
  4749 ;;		line 335 in file "main.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  result          2    5[COMRAM] unsigned int 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  2    1[COMRAM] unsigned int 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;Total ram usage:        6 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_main
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text27
  4778  002C0C                     __ptext27:
  4779                           	callstack 0
  4780  002C0C                     _readBattery:
  4781                           	callstack 29
  4782                           
  4783                           ;main.c: 337: ADCON0bits.CHS=0;
  4784                           
  4785                           ;incstack = 0
  4786  002C0C  0E83               	movlw	-125
  4787  002C0E  16C2               	andwf	194,f,c	;volatile
  4788                           
  4789                           ;main.c: 338: ADCON1bits.PVCFG=0b10;
  4790  002C10  50C1               	movf	193,w,c	;volatile
  4791  002C12  0BF3               	andlw	-13
  4792  002C14  0908               	iorlw	8
  4793  002C16  6EC1               	movwf	193,c	;volatile
  4794                           
  4795                           ;main.c: 339: ADCON0bits.GO_NOT_DONE=1;
  4796  002C18  82C2               	bsf	194,1,c	;volatile
  4797  002C1A                     l193:
  4798  002C1A  B2C2               	btfsc	194,1,c	;volatile
  4799  002C1C  D7FE               	goto	l193
  4800                           
  4801                           ;main.c: 342: };main.c: 343: uint16_t result = ADRESH * 256 + ADRESL;
  4802  002C1E  50C4               	movf	196,w,c	;volatile
  4803  002C20  6E05               	movwf	(??_readBattery+1)^0,c
  4804  002C22  6A04               	clrf	??_readBattery^0,c
  4805  002C24  50C3               	movf	195,w,c	;volatile
  4806  002C26  2404               	addwf	??_readBattery^0,w,c
  4807  002C28  6E06               	movwf	readBattery@result^0,c
  4808  002C2A  0E00               	movlw	0
  4809  002C2C  2005               	addwfc	(??_readBattery+1)^0,w,c
  4810  002C2E  6E07               	movwf	(readBattery@result+1)^0,c
  4811                           
  4812                           ;main.c: 344: return result;
  4813  002C30  C006  F002         	movff	readBattery@result,?_readBattery
  4814  002C34  C007  F003         	movff	readBattery@result+1,?_readBattery+1
  4815  002C38  0012               	return		;funcret
  4816  002C3A                     __end_of_readBattery:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _configureSPI *****************
  4820 ;; Defined at:
  4821 ;;		line 226 in file "MAX31865.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    1
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text28
  4850  002E08                     __ptext28:
  4851                           	callstack 0
  4852  002E08                     _configureSPI:
  4853                           	callstack 29
  4854                           
  4855                           ;MAX31865.c: 227: LATCbits.LATC0=1;
  4856                           
  4857                           ;incstack = 0
  4858  002E08  808B               	bsf	139,0,c	;volatile
  4859                           
  4860                           ;MAX31865.c: 228: SSP2STATbits.SMP=1;
  4861  002E0A  8E6D               	bsf	109,7,c	;volatile
  4862                           
  4863                           ;MAX31865.c: 229: SSP2STATbits.CKE=0;
  4864  002E0C  9C6D               	bcf	109,6,c	;volatile
  4865                           
  4866                           ;MAX31865.c: 230: SSP2CON1bits.CKP=0;
  4867  002E0E  986C               	bcf	108,4,c	;volatile
  4868                           
  4869                           ;MAX31865.c: 231: SSP2CON1bits.SSPM=0b0001;
  4870  002E10  506C               	movf	108,w,c	;volatile
  4871  002E12  0BF0               	andlw	-16
  4872  002E14  0901               	iorlw	1
  4873  002E16  6E6C               	movwf	108,c	;volatile
  4874                           
  4875                           ;MAX31865.c: 232: SSP2CON1bits.SSPEN2=1;
  4876  002E18  8A6C               	bsf	108,5,c	;volatile
  4877  002E1A  0012               	return		;funcret
  4878  002E1C                     __end_of_configureSPI:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _configureIO *****************
  4882 ;; Defined at:
  4883 ;;		line 251 in file "main.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    5
  4904 ;; This function calls:
  4905 ;;		_I2C1_Check_Data_Stuck
  4906 ;;		_I2C1_Initialize
  4907 ;;		_USART2_Start
  4908 ;;		_configADS1110
  4909 ;;		_setupAtoD
  4910 ;; This function is called by:
  4911 ;;		_main
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text29
  4916  0027C2                     __ptext29:
  4917                           	callstack 0
  4918  0027C2                     _configureIO:
  4919                           	callstack 25
  4920                           
  4921                           ;main.c: 253: OSCCONbits.IRCF=0b111;
  4922                           
  4923                           ;incstack = 0
  4924  0027C2  0E70               	movlw	112
  4925  0027C4  12D3               	iorwf	211,f,c	;volatile
  4926                           
  4927                           ;main.c: 254: OSCCONbits.OSTS=0;
  4928  0027C6  96D3               	bcf	211,3,c	;volatile
  4929                           
  4930                           ;main.c: 255: OSCCON2bits.PLLRDY=1;
  4931  0027C8  8ED2               	bsf	210,7,c	;volatile
  4932                           
  4933                           ;main.c: 256: OSCTUNEbits.PLLEN=1;
  4934  0027CA  8C9B               	bsf	155,6,c	;volatile
  4935                           
  4936                           ;main.c: 259: TRISDbits.RD1=1;
  4937  0027CC  8295               	bsf	149,1,c	;volatile
  4938                           
  4939                           ;main.c: 260: TRISDbits.RD4=0;
  4940  0027CE  9895               	bcf	149,4,c	;volatile
  4941                           
  4942                           ;main.c: 261: TRISDbits.RD0=0;
  4943  0027D0  9095               	bcf	149,0,c	;volatile
  4944                           
  4945                           ;main.c: 262: TRISDbits.RD3=0;
  4946  0027D2  9695               	bcf	149,3,c	;volatile
  4947                           
  4948                           ;main.c: 263: TRISCbits.RC0=0;
  4949  0027D4  9094               	bcf	148,0,c	;volatile
  4950                           
  4951                           ;main.c: 264: ANSELDbits.ANSD0=0;
  4952  0027D6  010F               	movlb	15	; () banked
  4953  0027D8  913B               	bcf	59,0,b	;volatile
  4954                           
  4955                           ; BSR set to: 15
  4956                           ;main.c: 265: ANSELDbits.ANSD1=0;
  4957  0027DA  933B               	bcf	59,1,b	;volatile
  4958                           
  4959                           ; BSR set to: 15
  4960                           ;main.c: 266: ANSELDbits.ANSD2=0;
  4961  0027DC  953B               	bcf	59,2,b	;volatile
  4962                           
  4963                           ; BSR set to: 15
  4964                           ;main.c: 267: ANSELDbits.ANSD4=0;
  4965  0027DE  993B               	bcf	59,4,b	;volatile
  4966                           
  4967                           ; BSR set to: 15
  4968                           ;main.c: 270: if(1){
  4969  0027E0  913D               	bcf	61,0,b	;volatile
  4970                           
  4971                           ; BSR set to: 15
  4972                           ;main.c: 271: PMD0bits.UART2MD=0;
  4973  0027E2  9F3F               	bcf	63,7,b	;volatile
  4974                           
  4975                           ; BSR set to: 15
  4976                           ;main.c: 272: };main.c: 273: PMD1bits.MSSP1MD=0;
  4977  0027E4  9D3E               	bcf	62,6,b	;volatile
  4978                           
  4979                           ; BSR set to: 15
  4980                           ;main.c: 274: PMD1bits.MSSP2MD=0;
  4981  0027E6  9F3E               	bcf	62,7,b	;volatile
  4982                           
  4983                           ; BSR set to: 15
  4984                           ;main.c: 275: ANSELAbits.ANSA2=0;
  4985  0027E8  9538               	bcf	56,2,b	;volatile
  4986                           
  4987                           ; BSR set to: 15
  4988                           ;main.c: 276: TRISAbits.RA2=0;
  4989  0027EA  9492               	bcf	146,2,c	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992                           ;main.c: 277: LATAbits.LATA2=0;
  4993  0027EC  9489               	bcf	137,2,c	;volatile
  4994                           
  4995                           ; BSR set to: 15
  4996                           ;main.c: 278: ANSELEbits.ANSE1=0;
  4997  0027EE  933C               	bcf	60,1,b	;volatile
  4998                           
  4999                           ; BSR set to: 15
  5000                           ;main.c: 279: ANSELEbits.ANSE2=0;
  5001  0027F0  953C               	bcf	60,2,b	;volatile
  5002                           
  5003                           ; BSR set to: 15
  5004                           ;main.c: 280: ANSELBbits.ANSB4=0;
  5005  0027F2  9939               	bcf	57,4,b	;volatile
  5006                           
  5007                           ; BSR set to: 15
  5008                           ;main.c: 281: TRISEbits.RE1=0;
  5009  0027F4  9296               	bcf	150,1,c	;volatile
  5010                           
  5011                           ; BSR set to: 15
  5012                           ;main.c: 282: TRISEbits.RE2=0;
  5013  0027F6  9496               	bcf	150,2,c	;volatile
  5014                           
  5015                           ; BSR set to: 15
  5016                           ;main.c: 283: TRISBbits.RB5=1;
  5017  0027F8  8A93               	bsf	147,5,c	;volatile
  5018                           
  5019                           ; BSR set to: 15
  5020                           ;main.c: 284: ANSELBbits.ANSB5=0;
  5021  0027FA  9B39               	bcf	57,5,b	;volatile
  5022                           
  5023                           ; BSR set to: 15
  5024                           ;main.c: 286: if(1){
  5025  0027FC  948D               	bcf	141,2,c	;volatile
  5026                           
  5027                           ; BSR set to: 15
  5028                           ;main.c: 287: USART2_Start(2);
  5029  0027FE  0E02               	movlw	2
  5030  002800  EC13  F014         	call	_USART2_Start
  5031                           
  5032                           ;main.c: 288: };main.c: 289: setupAtoD();
  5033  002804  EC48  F015         	call	_setupAtoD	;wreg free
  5034                           
  5035                           ; BSR set to: 15
  5036                           ;main.c: 290: I2C1_Initialize(100000);
  5037  002808  0EA0               	movlw	160
  5038  00280A  6E0F               	movwf	I2C1_Initialize@c^0,c
  5039  00280C  0E86               	movlw	134
  5040  00280E  6E10               	movwf	(I2C1_Initialize@c+1)^0,c
  5041  002810  0E01               	movlw	1
  5042  002812  6E11               	movwf	(I2C1_Initialize@c+2)^0,c
  5043  002814  0E00               	movlw	0
  5044  002816  6E12               	movwf	(I2C1_Initialize@c+3)^0,c
  5045  002818  EC6E  F014         	call	_I2C1_Initialize	;wreg free
  5046                           
  5047                           ;main.c: 291: I2C1_Check_Data_Stuck();
  5048  00281C  EC67  F015         	call	_I2C1_Check_Data_Stuck	;wreg free
  5049                           
  5050                           ;main.c: 292: configADS1110();
  5051  002820  EC36  F017         	call	_configADS1110	;wreg free
  5052  002824  0012               	return		;funcret
  5053  002826                     __end_of_configureIO:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _setupAtoD *****************
  5057 ;; Defined at:
  5058 ;;		line 295 in file "main.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/F
  5069 ;;		On exit  : 3F/F
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;Total ram usage:        0 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_configureIO
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text30
  5087  002A90                     __ptext30:
  5088                           	callstack 0
  5089  002A90                     _setupAtoD:
  5090                           	callstack 28
  5091                           
  5092                           ;main.c: 299: ANSELAbits.ANSA0=1;
  5093                           
  5094                           ;incstack = 0
  5095  002A90  010F               	movlb	15	; () banked
  5096  002A92  8138               	bsf	56,0,b	;volatile
  5097                           
  5098                           ;main.c: 300: ANSELAbits.ANSA1=1;
  5099  002A94  8338               	bsf	56,1,b	;volatile
  5100                           
  5101                           ;main.c: 301: ANSELAbits.ANSA2 = 1;
  5102  002A96  8538               	bsf	56,2,b	;volatile
  5103                           
  5104                           ;main.c: 302: ANSELAbits.ANSA3 = 1;
  5105  002A98  8738               	bsf	56,3,b	;volatile
  5106                           
  5107                           ;main.c: 305: TRISAbits.RA0=1;
  5108  002A9A  8092               	bsf	146,0,c	;volatile
  5109                           
  5110                           ;main.c: 306: TRISAbits.RA1=1;
  5111  002A9C  8292               	bsf	146,1,c	;volatile
  5112                           
  5113                           ;main.c: 307: TRISAbits.RA2 = 1;
  5114  002A9E  8492               	bsf	146,2,c	;volatile
  5115                           
  5116                           ;main.c: 308: TRISAbits.RA3 = 1;
  5117  002AA0  8692               	bsf	146,3,c	;volatile
  5118                           
  5119                           ; BSR set to: 15
  5120                           ;main.c: 311: ADCON1bits.PVCFG=0;
  5121  002AA2  0EF3               	movlw	-13
  5122  002AA4  16C1               	andwf	193,f,c	;volatile
  5123                           
  5124                           ;main.c: 312: ADCON1bits.NVCFG=0;
  5125  002AA6  0EFC               	movlw	-4
  5126  002AA8  16C1               	andwf	193,f,c	;volatile
  5127                           
  5128                           ;main.c: 313: VREFCON0bits.FVRS=0b01;
  5129  002AAA  5142               	movf	66,w,b	;volatile
  5130  002AAC  0BCF               	andlw	-49
  5131  002AAE  0910               	iorlw	16
  5132  002AB0  6F42               	movwf	66,b	;volatile
  5133                           
  5134                           ; BSR set to: 15
  5135                           ;main.c: 314: VREFCON0bits.FVREN=1;
  5136  002AB2  8F42               	bsf	66,7,b	;volatile
  5137                           
  5138                           ;main.c: 317: ADCON0bits.CHS=0;
  5139  002AB4  0E83               	movlw	-125
  5140  002AB6  16C2               	andwf	194,f,c	;volatile
  5141                           
  5142                           ;main.c: 320: ADCON2bits.ACQT=0b010;
  5143  002AB8  50C0               	movf	192,w,c	;volatile
  5144  002ABA  0BC7               	andlw	-57
  5145  002ABC  0910               	iorlw	16
  5146  002ABE  6EC0               	movwf	192,c	;volatile
  5147                           
  5148                           ;main.c: 323: ADCON2bits.ADCS=0b110;
  5149  002AC0  50C0               	movf	192,w,c	;volatile
  5150  002AC2  0BF8               	andlw	-8
  5151  002AC4  0906               	iorlw	6
  5152  002AC6  6EC0               	movwf	192,c	;volatile
  5153                           
  5154                           ; BSR set to: 15
  5155                           ;main.c: 326: ADCON2bits.ADFM = 1;
  5156  002AC8  8EC0               	bsf	192,7,c	;volatile
  5157                           
  5158                           ; BSR set to: 15
  5159                           ;main.c: 329: ADCON0bits.ADON=1;
  5160  002ACA  80C2               	bsf	194,0,c	;volatile
  5161                           
  5162                           ; BSR set to: 15
  5163  002ACC  0012               	return		;funcret
  5164  002ACE                     __end_of_setupAtoD:
  5165                           	callstack 0
  5166                           
  5167 ;; *************** function _configADS1110 *****************
  5168 ;; Defined at:
  5169 ;;		line 40 in file "ADS1110.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/F
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;Total ram usage:        0 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    4
  5190 ;; This function calls:
  5191 ;;		_writeADS1110
  5192 ;; This function is called by:
  5193 ;;		_configureIO
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text31
  5198  002E6C                     __ptext31:
  5199                           	callstack 0
  5200  002E6C                     _configADS1110:
  5201                           	callstack 25
  5202                           
  5203                           ;ADS1110.c: 41: writeADS1110(0b10010000,0x0C);
  5204                           
  5205                           ; BSR set to: 15
  5206                           ;incstack = 0
  5207  002E6C  0E0C               	movlw	12
  5208  002E6E  6E06               	movwf	writeADS1110@config^0,c
  5209  002E70  0E90               	movlw	144
  5210  002E72  ECAA  F016         	call	_writeADS1110
  5211  002E76  0012               	return		;funcret
  5212  002E78                     __end_of_configADS1110:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function _writeADS1110 *****************
  5216 ;; Defined at:
  5217 ;;		line 18 in file "ADS1110.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  address         1    wreg     unsigned char 
  5220 ;;  config          1    5[COMRAM] unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  address         1    6[COMRAM] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/F
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;Total ram usage:        2 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    3
  5239 ;; This function calls:
  5240 ;;		_I2C1_Start
  5241 ;;		_I2C1_Stop
  5242 ;;		_I2C1_Write_Byte_Read_Ack
  5243 ;; This function is called by:
  5244 ;;		_configADS1110
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text32
  5249  002D54                     __ptext32:
  5250                           	callstack 0
  5251  002D54                     _writeADS1110:
  5252                           	callstack 25
  5253                           
  5254                           ;incstack = 0
  5255                           ;writeADS1110@address stored from wreg
  5256  002D54  6E07               	movwf	writeADS1110@address^0,c
  5257                           
  5258                           ;ADS1110.c: 19: I2C1_Start();
  5259  002D56  EC48  F017         	call	_I2C1_Start	;wreg free
  5260                           
  5261                           ;ADS1110.c: 20: i2cFault = I2C1_Write_Byte_Read_Ack(address);
  5262  002D5A  5007               	movf	writeADS1110@address^0,w,c
  5263  002D5C  EC34  F016         	call	_I2C1_Write_Byte_Read_Ack
  5264  002D60  0100               	movlb	0	; () banked
  5265  002D62  6F74               	movwf	_i2cFault& (0+255),b
  5266                           
  5267                           ;ADS1110.c: 21: i2cFault = I2C1_Write_Byte_Read_Ack(config);
  5268  002D64  5006               	movf	writeADS1110@config^0,w,c
  5269  002D66  EC34  F016         	call	_I2C1_Write_Byte_Read_Ack
  5270  002D6A  0100               	movlb	0	; () banked
  5271  002D6C  6F74               	movwf	_i2cFault& (0+255),b
  5272                           
  5273                           ;ADS1110.c: 22: I2C1_Stop();
  5274  002D6E  EC44  F017         	call	_I2C1_Stop	;wreg free
  5275  002D72  0012               	return		;funcret
  5276  002D74                     __end_of_writeADS1110:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _I2C1_Write_Byte_Read_Ack *****************
  5280 ;; Defined at:
  5281 ;;		line 66 in file "i2c1.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  d               1    wreg     unsigned char 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  d               1    3[COMRAM] unsigned char 
  5286 ;;  tries           1    4[COMRAM] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      unsigned char 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        2 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    2
  5303 ;; This function calls:
  5304 ;;		_I2C1_Wait
  5305 ;; This function is called by:
  5306 ;;		_writeADS1110
  5307 ;;		_readADS1110
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text33
  5312  002C68                     __ptext33:
  5313                           	callstack 0
  5314  002C68                     _I2C1_Write_Byte_Read_Ack:
  5315                           	callstack 26
  5316                           
  5317                           ;incstack = 0
  5318                           ;I2C1_Write_Byte_Read_Ack@d stored from wreg
  5319  002C68  6E04               	movwf	I2C1_Write_Byte_Read_Ack@d^0,c
  5320                           
  5321                           ;i2c1.c: 67: I2C1_Wait();
  5322  002C6A  ECBA  F016         	call	_I2C1_Wait	;wreg free
  5323                           
  5324                           ;i2c1.c: 68: PIR1bits.SSP1IF=0;
  5325  002C6E  969E               	bcf	158,3,c	;volatile
  5326                           
  5327                           ;i2c1.c: 69: SSP1BUF=d;
  5328  002C70  C004  FFC9         	movff	I2C1_Write_Byte_Read_Ack@d,4041	;volatile
  5329                           
  5330                           ;i2c1.c: 70: unsigned char tries=0;
  5331  002C74  0E00               	movlw	0
  5332  002C76  6E05               	movwf	I2C1_Write_Byte_Read_Ack@tries^0,c
  5333                           
  5334                           ;i2c1.c: 71: while(!PIR1bits.SSP1IF && tries<150){
  5335  002C78  D001               	goto	l4628
  5336  002C7A                     l4626:
  5337                           
  5338                           ;i2c1.c: 73: tries++;
  5339  002C7A  2A05               	incf	I2C1_Write_Byte_Read_Ack@tries^0,f,c
  5340  002C7C                     l4628:
  5341  002C7C  B69E               	btfsc	158,3,c	;volatile
  5342  002C7E  D003               	goto	u4070
  5343  002C80  0E95               	movlw	149
  5344  002C82  6405               	cpfsgt	I2C1_Write_Byte_Read_Ack@tries^0,c
  5345  002C84  D7FA               	goto	l4626
  5346  002C86                     u4070:
  5347                           
  5348                           ;i2c1.c: 74: };i2c1.c: 75: return SSP1CON2bits.ACKSTAT1;
  5349  002C86  ACC5               	btfss	197,6,c	;volatile
  5350  002C88  D002               	goto	u4080
  5351  002C8A  0E01               	movlw	1
  5352  002C8C  0012               	return	
  5353  002C8E                     u4080:
  5354  002C8E  0E00               	movlw	0
  5355  002C90  0012               	return		;funcret
  5356  002C92                     __end_of_I2C1_Write_Byte_Read_Ack:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _I2C1_Stop *****************
  5360 ;; Defined at:
  5361 ;;		line 78 in file "i2c1.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    2
  5382 ;; This function calls:
  5383 ;;		_I2C1_Wait
  5384 ;; This function is called by:
  5385 ;;		_writeADS1110
  5386 ;;		_readADS1110
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text34
  5391  002E88                     __ptext34:
  5392                           	callstack 0
  5393  002E88                     _I2C1_Stop:
  5394                           	callstack 26
  5395                           
  5396                           ;i2c1.c: 79: I2C1_Wait();
  5397                           
  5398                           ;incstack = 0
  5399  002E88  ECBA  F016         	call	_I2C1_Wait	;wreg free
  5400                           
  5401                           ;i2c1.c: 80: SSP1CON2bits.PEN1=1;
  5402  002E8C  84C5               	bsf	197,2,c	;volatile
  5403  002E8E  0012               	return		;funcret
  5404  002E90                     __end_of_I2C1_Stop:
  5405                           	callstack 0
  5406                           
  5407 ;; *************** function _I2C1_Start *****************
  5408 ;; Defined at:
  5409 ;;		line 52 in file "i2c1.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;		None
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;		None
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;Total ram usage:        0 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    2
  5430 ;; This function calls:
  5431 ;;		_I2C1_Wait
  5432 ;; This function is called by:
  5433 ;;		_writeADS1110
  5434 ;;		_readADS1110
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text35
  5439  002E90                     __ptext35:
  5440                           	callstack 0
  5441  002E90                     _I2C1_Start:
  5442                           	callstack 26
  5443                           
  5444                           ;i2c1.c: 53: I2C1_Wait();
  5445                           
  5446                           ;incstack = 0
  5447  002E90  ECBA  F016         	call	_I2C1_Wait	;wreg free
  5448                           
  5449                           ;i2c1.c: 54: SSP1CON2bits.SEN1=1;
  5450  002E94  80C5               	bsf	197,0,c	;volatile
  5451  002E96  0012               	return		;funcret
  5452  002E98                     __end_of_I2C1_Start:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _I2C1_Wait *****************
  5456 ;; Defined at:
  5457 ;;		line 43 in file "i2c1.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  tries           1    2[COMRAM] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    1
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_I2C1_Start
  5482 ;;		_I2C1_Write_Byte_Read_Ack
  5483 ;;		_I2C1_Stop
  5484 ;;		_I2C1_Read_Byte
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text36
  5489  002D74                     __ptext36:
  5490                           	callstack 0
  5491  002D74                     _I2C1_Wait:
  5492                           	callstack 26
  5493                           
  5494                           ;i2c1.c: 44: unsigned char tries=0;
  5495                           
  5496                           ;incstack = 0
  5497  002D74  0E00               	movlw	0
  5498  002D76  6E03               	movwf	I2C1_Wait@tries^0,c
  5499                           
  5500                           ;i2c1.c: 45: while (((SSP1STAT & 0x04)||(SSP1CON2 & 0x1F))&&(tries<150)){
  5501  002D78  D001               	goto	l4014
  5502  002D7A                     l4012:
  5503                           
  5504                           ;i2c1.c: 46: tries++;
  5505  002D7A  2A03               	incf	I2C1_Wait@tries^0,f,c
  5506  002D7C                     l4014:
  5507  002D7C  B4C7               	btfsc	199,2,c	;volatile
  5508  002D7E  D006               	goto	u3190
  5509  002D80  CFC5 F002          	movff	4037,??_I2C1_Wait	;volatile
  5510  002D84  0E1F               	movlw	31
  5511  002D86  1602               	andwf	??_I2C1_Wait^0,f,c
  5512  002D88  B4D8               	btfsc	status,2,c
  5513  002D8A  0012               	return	
  5514  002D8C                     u3190:
  5515  002D8C  0E95               	movlw	149
  5516  002D8E  6403               	cpfsgt	I2C1_Wait@tries^0,c
  5517  002D90  D7F4               	goto	l4012
  5518  002D92  0012               	return	
  5519  002D94                     __end_of_I2C1_Wait:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _USART2_Start *****************
  5523 ;; Defined at:
  5524 ;;		line 10 in file "usart2.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  baudrate        1    wreg     const unsigned char 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  baudrate        1    1[COMRAM] const unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 3F/F
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;Total ram usage:        1 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    1
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_configureIO
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text37
  5553  002826                     __ptext37:
  5554                           	callstack 0
  5555  002826                     _USART2_Start:
  5556                           	callstack 28
  5557                           
  5558                           ;incstack = 0
  5559                           ;USART2_Start@baudrate stored from wreg
  5560  002826  6E02               	movwf	USART2_Start@baudrate^0,c
  5561                           
  5562                           ;usart2.c: 13: TXSTA2bits.CSRC = 0;
  5563  002828  9E72               	bcf	114,7,c	;volatile
  5564                           
  5565                           ;usart2.c: 14: TXSTA2bits.TX9 = 0;
  5566  00282A  9C72               	bcf	114,6,c	;volatile
  5567                           
  5568                           ;usart2.c: 15: TXSTA2bits.TXEN = 1;
  5569  00282C  8A72               	bsf	114,5,c	;volatile
  5570                           
  5571                           ;usart2.c: 16: TXSTA2bits.SYNC = 0;
  5572  00282E  9872               	bcf	114,4,c	;volatile
  5573                           
  5574                           ;usart2.c: 17: TXSTA2bits.SENDB = 0;
  5575  002830  9672               	bcf	114,3,c	;volatile
  5576                           
  5577                           ;usart2.c: 18: TXSTA2bits.BRGH = 1;
  5578  002832  8472               	bsf	114,2,c	;volatile
  5579                           
  5580                           ;usart2.c: 21: RCSTA2bits.SPEN = 1;
  5581  002834  8E71               	bsf	113,7,c	;volatile
  5582                           
  5583                           ;usart2.c: 22: RCSTA2bits.RX9 = 0;
  5584  002836  9C71               	bcf	113,6,c	;volatile
  5585                           
  5586                           ;usart2.c: 23: RCSTA2bits.CREN = 1;
  5587  002838  8871               	bsf	113,4,c	;volatile
  5588                           
  5589                           ;usart2.c: 24: RCSTA2bits.ADDEN = 0;
  5590  00283A  9671               	bcf	113,3,c	;volatile
  5591                           
  5592                           ;usart2.c: 27: BAUDCON2bits.ABDOVF = 0;
  5593  00283C  9E70               	bcf	112,7,c	;volatile
  5594                           
  5595                           ;usart2.c: 28: BAUDCON2bits.DTRXP = 0;
  5596  00283E  9A70               	bcf	112,5,c	;volatile
  5597                           
  5598                           ;usart2.c: 29: BAUDCON2bits.CKTXP = 0;
  5599  002840  9870               	bcf	112,4,c	;volatile
  5600                           
  5601                           ;usart2.c: 30: BAUDCON2bits.BRG16 = 1;
  5602  002842  8670               	bsf	112,3,c	;volatile
  5603                           
  5604                           ;usart2.c: 31: BAUDCON2bits.WUE = 0;
  5605  002844  9270               	bcf	112,1,c	;volatile
  5606                           
  5607                           ;usart2.c: 32: BAUDCON2bits.ABDEN = 0;
  5608  002846  9070               	bcf	112,0,c	;volatile
  5609                           
  5610                           ;usart2.c: 34: if(baudrate==1){
  5611  002848  0402               	decf	USART2_Start@baudrate^0,w,c
  5612  00284A  A4D8               	btfss	status,2,c
  5613  00284C  D005               	goto	l4984
  5614                           
  5615                           ;usart2.c: 35: SPBRGH2 = 0x03;
  5616  00284E  0E03               	movlw	3
  5617  002850  6E76               	movwf	118,c	;volatile
  5618                           
  5619                           ;usart2.c: 36: SPBRG2 = 0x40;
  5620  002852  0E40               	movlw	64
  5621  002854  6E75               	movwf	117,c	;volatile
  5622                           
  5623                           ;usart2.c: 38: }
  5624  002856  0012               	return	
  5625  002858                     l4984:
  5626                           
  5627                           ;usart2.c: 39: else if(baudrate==0){
  5628  002858  5002               	movf	USART2_Start@baudrate^0,w,c
  5629  00285A  A4D8               	btfss	status,2,c
  5630  00285C  D005               	goto	l4988
  5631                           
  5632                           ;usart2.c: 40: SPBRGH2 = 0x06;
  5633  00285E  0E06               	movlw	6
  5634  002860  6E76               	movwf	118,c	;volatile
  5635                           
  5636                           ;usart2.c: 41: SPBRG2 = 0x82;
  5637  002862  0E82               	movlw	130
  5638  002864  6E75               	movwf	117,c	;volatile
  5639                           
  5640                           ;usart2.c: 43: }
  5641  002866  0012               	return	
  5642  002868                     l4988:
  5643                           
  5644                           ;usart2.c: 44: else if(baudrate==3){
  5645  002868  0E03               	movlw	3
  5646  00286A  1802               	xorwf	USART2_Start@baudrate^0,w,c
  5647  00286C  A4D8               	btfss	status,2,c
  5648  00286E  D005               	goto	l4992
  5649                           
  5650                           ;usart2.c: 45: SPBRGH2 = 0;
  5651  002870  0E00               	movlw	0
  5652  002872  6E76               	movwf	118,c	;volatile
  5653                           
  5654                           ;usart2.c: 46: SPBRG2 = 0x8A;
  5655  002874  0E8A               	movlw	138
  5656  002876  6E75               	movwf	117,c	;volatile
  5657                           
  5658                           ;usart2.c: 48: }
  5659  002878  0012               	return	
  5660  00287A                     l4992:
  5661                           
  5662                           ;usart2.c: 49: else{;usart2.c: 51: SPBRGH2 = 0x01;
  5663  00287A  0E01               	movlw	1
  5664  00287C  6E76               	movwf	118,c	;volatile
  5665                           
  5666                           ;usart2.c: 52: SPBRG2 = 0x17;
  5667  00287E  0E17               	movlw	23
  5668  002880  6E75               	movwf	117,c	;volatile
  5669  002882  0012               	return		;funcret
  5670  002884                     __end_of_USART2_Start:
  5671                           	callstack 0
  5672                           
  5673 ;; *************** function _I2C1_Initialize *****************
  5674 ;; Defined at:
  5675 ;;		line 13 in file "i2c1.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  c               4   14[COMRAM] const unsigned long 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 3F/F
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;Total ram usage:        8 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    2
  5696 ;; This function calls:
  5697 ;;		___lldiv
  5698 ;; This function is called by:
  5699 ;;		_configureIO
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text38
  5704  0028DC                     __ptext38:
  5705                           	callstack 0
  5706  0028DC                     _I2C1_Initialize:
  5707                           	callstack 27
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;i2c1.c: 15: TRISCbits.RC3=1;
  5711                           
  5712                           ;incstack = 0
  5713  0028DC  8694               	bsf	148,3,c	;volatile
  5714                           
  5715                           ;i2c1.c: 16: TRISCbits.RC4=1;
  5716  0028DE  8894               	bsf	148,4,c	;volatile
  5717                           
  5718                           ;i2c1.c: 17: ANSELCbits.ANSC3=0;
  5719  0028E0  973A               	bcf	58,3,b	;volatile
  5720                           
  5721                           ;i2c1.c: 18: ANSELCbits.ANSC4=0;
  5722  0028E2  993A               	bcf	58,4,b	;volatile
  5723                           
  5724                           ; BSR set to: 15
  5725                           ;i2c1.c: 19: SSP1CON1 = 0b00101000;
  5726  0028E4  0E28               	movlw	40
  5727  0028E6  6EC6               	movwf	198,c	;volatile
  5728                           
  5729                           ; BSR set to: 15
  5730                           ;i2c1.c: 23: SSP1ADD = (64000000/(4*c))-1;
  5731  0028E8  0E00               	movlw	0
  5732  0028EA  6E02               	movwf	___lldiv@dividend^0,c
  5733  0028EC  0E90               	movlw	144
  5734  0028EE  6E03               	movwf	(___lldiv@dividend+1)^0,c
  5735  0028F0  0ED0               	movlw	208
  5736  0028F2  6E04               	movwf	(___lldiv@dividend+2)^0,c
  5737  0028F4  0E03               	movlw	3
  5738  0028F6  6E05               	movwf	(___lldiv@dividend+3)^0,c
  5739  0028F8  C00F  F013         	movff	I2C1_Initialize@c,??_I2C1_Initialize
  5740  0028FC  C010  F014         	movff	I2C1_Initialize@c+1,??_I2C1_Initialize+1
  5741  002900  C011  F015         	movff	I2C1_Initialize@c+2,??_I2C1_Initialize+2
  5742  002904  C012  F016         	movff	I2C1_Initialize@c+3,??_I2C1_Initialize+3
  5743  002908  0E02               	movlw	2
  5744  00290A                     u4395:
  5745  00290A  90D8               	bcf	status,0,c
  5746  00290C  3613               	rlcf	??_I2C1_Initialize^0,f,c
  5747  00290E  3614               	rlcf	(??_I2C1_Initialize+1)^0,f,c
  5748  002910  3615               	rlcf	(??_I2C1_Initialize+2)^0,f,c
  5749  002912  3616               	rlcf	(??_I2C1_Initialize+3)^0,f,c
  5750  002914  2EE8               	decfsz	wreg,f,c
  5751  002916  D7F9               	goto	u4395
  5752  002918  C013  F006         	movff	??_I2C1_Initialize,___lldiv@divisor
  5753  00291C  C014  F007         	movff	??_I2C1_Initialize+1,___lldiv@divisor+1
  5754  002920  C015  F008         	movff	??_I2C1_Initialize+2,___lldiv@divisor+2
  5755  002924  C016  F009         	movff	??_I2C1_Initialize+3,___lldiv@divisor+3
  5756  002928  ECC8  F012         	call	___lldiv	;wreg free
  5757  00292C  0402               	decf	?___lldiv^0,w,c
  5758  00292E  6EC8               	movwf	200,c	;volatile
  5759  002930  0012               	return		;funcret
  5760  002932                     __end_of_I2C1_Initialize:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function _I2C1_Check_Data_Stuck *****************
  5764 ;; Defined at:
  5765 ;;		line 26 in file "i2c1.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  i               1    2[COMRAM] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/F
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;Total ram usage:        2 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_configureIO
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text39
  5794  002ACE                     __ptext39:
  5795                           	callstack 0
  5796  002ACE                     _I2C1_Check_Data_Stuck:
  5797                           	callstack 28
  5798                           
  5799                           ;i2c1.c: 28: if(PORTCbits.RC4==0){
  5800                           
  5801                           ;incstack = 0
  5802  002ACE  B882               	btfsc	130,4,c	;volatile
  5803  002AD0  0012               	return	
  5804                           
  5805                           ;i2c1.c: 30: TRISCbits.RC3=0;
  5806  002AD2  9694               	bcf	148,3,c	;volatile
  5807                           
  5808                           ;i2c1.c: 32: for(i=0;i<8;i++){
  5809  002AD4  0E00               	movlw	0
  5810  002AD6  6E03               	movwf	I2C1_Check_Data_Stuck@i^0,c
  5811  002AD8                     l444:
  5812                           
  5813                           ;i2c1.c: 34: LATCbits.LATC3=0;
  5814  002AD8  968B               	bcf	139,3,c	;volatile
  5815                           
  5816                           ;i2c1.c: 35: _delay((unsigned long)((1)*(64000000/4000.0)));
  5817  002ADA  0E15               	movlw	21
  5818  002ADC  6E02               	movwf	??_I2C1_Check_Data_Stuck^0,c
  5819  002ADE  0EC6               	movlw	198
  5820  002AE0                     u5037:
  5821  002AE0  2EE8               	decfsz	wreg,f,c
  5822  002AE2  D7FE               	bra	u5037
  5823  002AE4  2E02               	decfsz	??_I2C1_Check_Data_Stuck^0,f,c
  5824  002AE6  D7FC               	bra	u5037
  5825  002AE8  D000               	nop2	
  5826                           
  5827                           ;i2c1.c: 36: LATCbits.LATC3=1;
  5828  002AEA  868B               	bsf	139,3,c	;volatile
  5829                           
  5830                           ;i2c1.c: 37: _delay((unsigned long)((1)*(64000000/4000.0)));
  5831  002AEC  0E15               	movlw	21
  5832  002AEE  6E02               	movwf	??_I2C1_Check_Data_Stuck^0,c
  5833  002AF0  0EC6               	movlw	198
  5834  002AF2                     u5047:
  5835  002AF2  2EE8               	decfsz	wreg,f,c
  5836  002AF4  D7FE               	bra	u5047
  5837  002AF6  2E02               	decfsz	??_I2C1_Check_Data_Stuck^0,f,c
  5838  002AF8  D7FC               	bra	u5047
  5839  002AFA  D000               	nop2	
  5840  002AFC  2A03               	incf	I2C1_Check_Data_Stuck@i^0,f,c
  5841  002AFE  0E07               	movlw	7
  5842  002B00  6403               	cpfsgt	I2C1_Check_Data_Stuck@i^0,c
  5843  002B02  D7EA               	goto	l444
  5844                           
  5845                           ;i2c1.c: 38: };i2c1.c: 39: TRISCbits.RC3=1;
  5846  002B04  8694               	bsf	148,3,c	;volatile
  5847  002B06  0012               	return		;funcret
  5848  002B08                     __end_of_I2C1_Check_Data_Stuck:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _MAX31865writeConfigByte *****************
  5852 ;; Defined at:
  5853 ;;		line 101 in file "MAX31865.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  config          1    wreg     unsigned char 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  config          1    5[COMRAM] unsigned char 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;Total ram usage:        1 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    2
  5874 ;; This function calls:
  5875 ;;		_MAX31865writeByte
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text40
  5882  002E3A                     __ptext40:
  5883                           	callstack 0
  5884  002E3A                     _MAX31865writeConfigByte:
  5885                           	callstack 28
  5886                           
  5887                           ;incstack = 0
  5888                           ;MAX31865writeConfigByte@config stored from wreg
  5889  002E3A  6E06               	movwf	MAX31865writeConfigByte@config^0,c
  5890                           
  5891                           ;MAX31865.c: 102: MAX31865writeByte(0x80, config);
  5892  002E3C  C006  F002         	movff	MAX31865writeConfigByte@config,MAX31865writeByte@data
  5893  002E40  0E80               	movlw	128
  5894  002E42  EC99  F014         	call	_MAX31865writeByte
  5895  002E46  0012               	return		;funcret
  5896  002E48                     __end_of_MAX31865writeConfigByte:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _MAX31865writeByte *****************
  5900 ;; Defined at:
  5901 ;;		line 41 in file "MAX31865.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  regAddress      1    wreg     unsigned char 
  5904 ;;  data            1    1[COMRAM] unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  regAddress      1    2[COMRAM] unsigned char 
  5907 ;;  tries           2    3[COMRAM] unsigned int 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5917 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;Total ram usage:        4 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    1
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_MAX31865writeConfigByte
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text41
  5932  002932                     __ptext41:
  5933                           	callstack 0
  5934  002932                     _MAX31865writeByte:
  5935                           	callstack 28
  5936                           
  5937                           ;incstack = 0
  5938                           ;MAX31865writeByte@regAddress stored from wreg
  5939  002932  6E03               	movwf	MAX31865writeByte@regAddress^0,c
  5940                           
  5941                           ;MAX31865.c: 42: unsigned int tries=0;
  5942  002934  0E00               	movlw	0
  5943  002936  6E05               	movwf	(MAX31865writeByte@tries+1)^0,c
  5944  002938  0E00               	movlw	0
  5945  00293A  6E04               	movwf	MAX31865writeByte@tries^0,c
  5946                           
  5947                           ;MAX31865.c: 43: PIR3bits.SSP2IF=0;
  5948  00293C  9EA4               	bcf	164,7,c	;volatile
  5949                           
  5950                           ;MAX31865.c: 44: LATCbits.LATC0=0;
  5951  00293E  908B               	bcf	139,0,c	;volatile
  5952                           
  5953                           ;MAX31865.c: 45: SSP2BUF=regAddress;
  5954  002940  C003  FF6F         	movff	MAX31865writeByte@regAddress,3951	;volatile
  5955                           
  5956                           ;MAX31865.c: 47: while(!PIR3bits.SSP2IF && tries<50){
  5957  002944  D002               	goto	l5040
  5958  002946                     l5038:
  5959                           
  5960                           ;MAX31865.c: 48: tries++;
  5961  002946  4A04               	infsnz	MAX31865writeByte@tries^0,f,c
  5962  002948  2A05               	incf	(MAX31865writeByte@tries+1)^0,f,c
  5963  00294A                     l5040:
  5964  00294A  BEA4               	btfsc	164,7,c	;volatile
  5965  00294C  D006               	goto	u4430
  5966  00294E  5005               	movf	(MAX31865writeByte@tries+1)^0,w,c
  5967  002950  E104               	bnz	u4430
  5968  002952  0E32               	movlw	50
  5969  002954  5C04               	subwf	MAX31865writeByte@tries^0,w,c
  5970  002956  A0D8               	btfss	status,0,c
  5971  002958  D7F6               	goto	l5038
  5972  00295A                     u4430:
  5973                           
  5974                           ;MAX31865.c: 49: };MAX31865.c: 50: PIR3bits.SSP2IF=0;
  5975  00295A  9EA4               	bcf	164,7,c	;volatile
  5976                           
  5977                           ;MAX31865.c: 51: tries=0;
  5978  00295C  0E00               	movlw	0
  5979  00295E  6E05               	movwf	(MAX31865writeByte@tries+1)^0,c
  5980  002960  0E00               	movlw	0
  5981  002962  6E04               	movwf	MAX31865writeByte@tries^0,c
  5982                           
  5983                           ;MAX31865.c: 52: SSP2BUF=data;
  5984  002964  C002  FF6F         	movff	MAX31865writeByte@data,3951	;volatile
  5985                           
  5986                           ;MAX31865.c: 54: while(!PIR3bits.SSP2IF && tries<50){
  5987  002968  D002               	goto	l5050
  5988  00296A                     l5048:
  5989                           
  5990                           ;MAX31865.c: 55: tries++;
  5991  00296A  4A04               	infsnz	MAX31865writeByte@tries^0,f,c
  5992  00296C  2A05               	incf	(MAX31865writeByte@tries+1)^0,f,c
  5993  00296E                     l5050:
  5994  00296E  BEA4               	btfsc	164,7,c	;volatile
  5995  002970  D006               	goto	u4450
  5996  002972  5005               	movf	(MAX31865writeByte@tries+1)^0,w,c
  5997  002974  E104               	bnz	u4450
  5998  002976  0E32               	movlw	50
  5999  002978  5C04               	subwf	MAX31865writeByte@tries^0,w,c
  6000  00297A  A0D8               	btfss	status,0,c
  6001  00297C  D7F6               	goto	l5048
  6002  00297E                     u4450:
  6003                           
  6004                           ;MAX31865.c: 56: };MAX31865.c: 57: PIR3bits.SSP2IF=0;
  6005  00297E  9EA4               	bcf	164,7,c	;volatile
  6006                           
  6007                           ;MAX31865.c: 58: LATCbits.LATC0=1;
  6008  002980  808B               	bsf	139,0,c	;volatile
  6009  002982  0012               	return		;funcret
  6010  002984                     __end_of_MAX31865writeByte:
  6011                           	callstack 0
  6012                           
  6013 ;; *************** function _MAX31865readData *****************
  6014 ;; Defined at:
  6015 ;;		line 109 in file "MAX31865.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  tries           2   31[BANK0 ] unsigned int 
  6020 ;;  LSB             1   30[BANK0 ] unsigned char 
  6021 ;;  LFTLSB          1   29[BANK0 ] unsigned char 
  6022 ;;  HFTLSB          1   28[BANK0 ] unsigned char 
  6023 ;;  MSB             1   27[BANK0 ] unsigned char 
  6024 ;;  LFTMSB          1   26[BANK0 ] unsigned char 
  6025 ;;  HFTMSB          1   25[BANK0 ] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  2   87[COMRAM] unsigned int 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;Total ram usage:       12 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    4
  6042 ;; This function calls:
  6043 ;;		___awdiv
  6044 ;;		_printf
  6045 ;; This function is called by:
  6046 ;;		_main
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text42
  6051  001782                     __ptext42:
  6052                           	callstack 0
  6053  001782                     _MAX31865readData:
  6054                           	callstack 26
  6055                           
  6056                           ;MAX31865.c: 110: unsigned int tries=0;
  6057                           
  6058                           ;incstack = 0
  6059  001782  0E00               	movlw	0
  6060  001784  0100               	movlb	0	; () banked
  6061  001786  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6062  001788  0E00               	movlw	0
  6063  00178A  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;MAX31865.c: 111: PIR3bits.SSP2IF=0;
  6067  00178C  9EA4               	bcf	164,7,c	;volatile
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;MAX31865.c: 112: LATCbits.LATC0=0;
  6071  00178E  908B               	bcf	139,0,c	;volatile
  6072                           
  6073                           ;MAX31865.c: 113: SSP2BUF=0;
  6074  001790  0E00               	movlw	0
  6075  001792  6E6F               	movwf	111,c	;volatile
  6076                           
  6077                           ;MAX31865.c: 115: while(!PIR3bits.SSP2IF && tries<50){
  6078  001794  D002               	goto	l5178
  6079  001796                     l5176:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;MAX31865.c: 116: tries++;
  6083  001796  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6084  001798  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6085  00179A                     l5178:
  6086                           
  6087                           ; BSR set to: 0
  6088  00179A  BEA4               	btfsc	164,7,c	;volatile
  6089  00179C  D006               	goto	u4510
  6090                           
  6091                           ; BSR set to: 0
  6092  00179E  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6093  0017A0  E104               	bnz	u4510
  6094  0017A2  0E32               	movlw	50
  6095  0017A4  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6096  0017A6  A0D8               	btfss	status,0,c
  6097  0017A8  D7F6               	goto	l5176
  6098  0017AA                     u4510:
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;MAX31865.c: 117: };MAX31865.c: 118: PIR3bits.SSP2IF=0;
  6102  0017AA  9EA4               	bcf	164,7,c	;volatile
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;MAX31865.c: 119: if(tries>49){
  6106  0017AC  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6107  0017AE  E104               	bnz	u4520
  6108  0017B0  0E32               	movlw	50
  6109  0017B2  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6110  0017B4  A0D8               	btfss	status,0,c
  6111  0017B6  D006               	goto	l5186
  6112  0017B8                     u4520:
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;MAX31865.c: 120: printf("No MAX31865!");
  6116  0017B8  0E5A               	movlw	low STR_17
  6117  0017BA  6E50               	movwf	printf@f^0,c
  6118  0017BC  0EFF               	movlw	high STR_17
  6119  0017BE  6E51               	movwf	(printf@f+1)^0,c
  6120  0017C0  EC18  F000         	call	_printf	;wreg free
  6121  0017C4                     l5186:
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;MAX31865.c: 121: };MAX31865.c: 123: SSP2BUF=0;
  6125  0017C4  0E00               	movlw	0
  6126  0017C6  6E6F               	movwf	111,c	;volatile
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;MAX31865.c: 124: tries=0;
  6130  0017C8  0E00               	movlw	0
  6131  0017CA  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6132  0017CC  0E00               	movlw	0
  6133  0017CE  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6134                           
  6135                           ;MAX31865.c: 126: while(!PIR3bits.SSP2IF && tries<50){
  6136  0017D0  D002               	goto	l5192
  6137  0017D2                     l5190:
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;MAX31865.c: 127: tries++;
  6141  0017D2  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6142  0017D4  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6143  0017D6                     l5192:
  6144                           
  6145                           ; BSR set to: 0
  6146  0017D6  BEA4               	btfsc	164,7,c	;volatile
  6147  0017D8  D006               	goto	u4540
  6148                           
  6149                           ; BSR set to: 0
  6150  0017DA  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6151  0017DC  E104               	bnz	u4540
  6152  0017DE  0E32               	movlw	50
  6153  0017E0  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6154  0017E2  A0D8               	btfss	status,0,c
  6155  0017E4  D7F6               	goto	l5190
  6156  0017E6                     u4540:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;MAX31865.c: 128: };MAX31865.c: 129: PIR3bits.SSP2IF=0;
  6160  0017E6  9EA4               	bcf	164,7,c	;volatile
  6161                           
  6162                           ;MAX31865.c: 130: temp_config_byte = SSP2BUF;
  6163  0017E8  CF6F F05D          	movff	3951,_temp_config_byte	;volatile
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;MAX31865.c: 132: SSP2BUF=0;
  6167  0017EC  0E00               	movlw	0
  6168  0017EE  6E6F               	movwf	111,c	;volatile
  6169                           
  6170                           ;MAX31865.c: 133: tries=0;
  6171  0017F0  0E00               	movlw	0
  6172  0017F2  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6173  0017F4  0E00               	movlw	0
  6174  0017F6  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6175                           
  6176                           ;MAX31865.c: 135: while(!PIR3bits.SSP2IF && tries<50){
  6177  0017F8  D002               	goto	l5200
  6178  0017FA                     l5198:
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;MAX31865.c: 136: tries++;
  6182  0017FA  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6183  0017FC  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6184  0017FE                     l5200:
  6185                           
  6186                           ; BSR set to: 0
  6187  0017FE  BEA4               	btfsc	164,7,c	;volatile
  6188  001800  D006               	goto	u4560
  6189                           
  6190                           ; BSR set to: 0
  6191  001802  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6192  001804  E104               	bnz	u4560
  6193  001806  0E32               	movlw	50
  6194  001808  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6195  00180A  A0D8               	btfss	status,0,c
  6196  00180C  D7F6               	goto	l5198
  6197  00180E                     u4560:
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;MAX31865.c: 137: };MAX31865.c: 138: PIR3bits.SSP2IF=0;
  6201  00180E  9EA4               	bcf	164,7,c	;volatile
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;MAX31865.c: 139: tries=0;
  6205  001810  0E00               	movlw	0
  6206  001812  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6207  001814  0E00               	movlw	0
  6208  001816  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;MAX31865.c: 140: uint8_t MSB = SSP2BUF;
  6212  001818  CF6F F0C5          	movff	3951,MAX31865readData@MSB	;volatile
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;MAX31865.c: 141: printf("MSB %d\r\n", MSB);
  6216  00181C  0E76               	movlw	low (STR_20+3)
  6217  00181E  6E50               	movwf	printf@f^0,c
  6218  001820  0EFF               	movlw	high (STR_20+3)
  6219  001822  6E51               	movwf	(printf@f+1)^0,c
  6220  001824  C0C5  F052         	movff	MAX31865readData@MSB,?_printf+2
  6221  001828  6A53               	clrf	(?_printf+3)^0,c
  6222  00182A  EC18  F000         	call	_printf	;wreg free
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;MAX31865.c: 143: SSP2BUF=0;
  6226  00182E  0E00               	movlw	0
  6227  001830  6E6F               	movwf	111,c	;volatile
  6228                           
  6229                           ;MAX31865.c: 145: while(!PIR3bits.SSP2IF && tries<50){
  6230  001832  D002               	goto	l5214
  6231  001834                     l5212:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;MAX31865.c: 146: tries++;
  6235  001834  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6236  001836  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6237  001838                     l5214:
  6238                           
  6239                           ; BSR set to: 0
  6240  001838  BEA4               	btfsc	164,7,c	;volatile
  6241  00183A  D006               	goto	u4580
  6242                           
  6243                           ; BSR set to: 0
  6244  00183C  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6245  00183E  E104               	bnz	u4580
  6246  001840  0E32               	movlw	50
  6247  001842  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6248  001844  A0D8               	btfss	status,0,c
  6249  001846  D7F6               	goto	l5212
  6250  001848                     u4580:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;MAX31865.c: 147: };MAX31865.c: 148: PIR3bits.SSP2IF=0;
  6254  001848  9EA4               	bcf	164,7,c	;volatile
  6255                           
  6256                           ;MAX31865.c: 150: uint8_t LSB = SSP2BUF;
  6257  00184A  CF6F F0C8          	movff	3951,MAX31865readData@LSB	;volatile
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;MAX31865.c: 151: printf("LSB %d\r\n", LSB);
  6261  00184E  0E6A               	movlw	low (STR_23+3)
  6262  001850  6E50               	movwf	printf@f^0,c
  6263  001852  0EFF               	movlw	high (STR_23+3)
  6264  001854  6E51               	movwf	(printf@f+1)^0,c
  6265  001856  C0C8  F052         	movff	MAX31865readData@LSB,?_printf+2
  6266  00185A  6A53               	clrf	(?_printf+3)^0,c
  6267  00185C  EC18  F000         	call	_printf	;wreg free
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;MAX31865.c: 153: tries=0;
  6271  001860  0E00               	movlw	0
  6272  001862  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6273  001864  0E00               	movlw	0
  6274  001866  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;MAX31865.c: 154: SSP2BUF=0;
  6278  001868  0E00               	movlw	0
  6279  00186A  6E6F               	movwf	111,c	;volatile
  6280                           
  6281                           ;MAX31865.c: 156: while(!PIR3bits.SSP2IF && tries<50){
  6282  00186C  D002               	goto	l5226
  6283  00186E                     l5224:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;MAX31865.c: 157: tries++;
  6287  00186E  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6288  001870  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6289  001872                     l5226:
  6290                           
  6291                           ; BSR set to: 0
  6292  001872  BEA4               	btfsc	164,7,c	;volatile
  6293  001874  D006               	goto	u4600
  6294                           
  6295                           ; BSR set to: 0
  6296  001876  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6297  001878  E104               	bnz	u4600
  6298  00187A  0E32               	movlw	50
  6299  00187C  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6300  00187E  A0D8               	btfss	status,0,c
  6301  001880  D7F6               	goto	l5224
  6302  001882                     u4600:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;MAX31865.c: 158: };MAX31865.c: 159: PIR3bits.SSP2IF=0;
  6306  001882  9EA4               	bcf	164,7,c	;volatile
  6307                           
  6308                           ;MAX31865.c: 161: unsigned char HFTMSB= SSP2BUF;
  6309  001884  CF6F F0C3          	movff	3951,MAX31865readData@HFTMSB	;volatile
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;MAX31865.c: 162: printf("HFTMSB %d\r\n", HFTMSB);
  6313  001888  0E73               	movlw	low STR_20
  6314  00188A  6E50               	movwf	printf@f^0,c
  6315  00188C  0EFF               	movlw	high STR_20
  6316  00188E  6E51               	movwf	(printf@f+1)^0,c
  6317  001890  C0C3  F052         	movff	MAX31865readData@HFTMSB,?_printf+2
  6318  001894  6A53               	clrf	(?_printf+3)^0,c
  6319  001896  EC18  F000         	call	_printf	;wreg free
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;MAX31865.c: 164: tries=0;
  6323  00189A  0E00               	movlw	0
  6324  00189C  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6325  00189E  0E00               	movlw	0
  6326  0018A0  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;MAX31865.c: 165: SSP2BUF=0;
  6330  0018A2  0E00               	movlw	0
  6331  0018A4  6E6F               	movwf	111,c	;volatile
  6332                           
  6333                           ;MAX31865.c: 167: while(!PIR3bits.SSP2IF && tries<50){
  6334  0018A6  D002               	goto	l5238
  6335  0018A8                     l5236:
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;MAX31865.c: 168: tries++;
  6339  0018A8  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6340  0018AA  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6341  0018AC                     l5238:
  6342                           
  6343                           ; BSR set to: 0
  6344  0018AC  BEA4               	btfsc	164,7,c	;volatile
  6345  0018AE  D006               	goto	u4620
  6346                           
  6347                           ; BSR set to: 0
  6348  0018B0  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6349  0018B2  E104               	bnz	u4620
  6350  0018B4  0E32               	movlw	50
  6351  0018B6  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6352  0018B8  A0D8               	btfss	status,0,c
  6353  0018BA  D7F6               	goto	l5236
  6354  0018BC                     u4620:
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;MAX31865.c: 169: };MAX31865.c: 170: PIR3bits.SSP2IF=0;
  6358  0018BC  9EA4               	bcf	164,7,c	;volatile
  6359                           
  6360                           ;MAX31865.c: 172: unsigned char HFTLSB= SSP2BUF;
  6361  0018BE  CF6F F0C6          	movff	3951,MAX31865readData@HFTLSB	;volatile
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;MAX31865.c: 173: printf("HFTMSB %d\r\n", HFTLSB);
  6365  0018C2  0E73               	movlw	low STR_20
  6366  0018C4  6E50               	movwf	printf@f^0,c
  6367  0018C6  0EFF               	movlw	high STR_20
  6368  0018C8  6E51               	movwf	(printf@f+1)^0,c
  6369  0018CA  C0C6  F052         	movff	MAX31865readData@HFTLSB,?_printf+2
  6370  0018CE  6A53               	clrf	(?_printf+3)^0,c
  6371  0018D0  EC18  F000         	call	_printf	;wreg free
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;MAX31865.c: 175: tries=0;
  6375  0018D4  0E00               	movlw	0
  6376  0018D6  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6377  0018D8  0E00               	movlw	0
  6378  0018DA  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;MAX31865.c: 176: SSP2BUF=0;
  6382  0018DC  0E00               	movlw	0
  6383  0018DE  6E6F               	movwf	111,c	;volatile
  6384                           
  6385                           ;MAX31865.c: 178: while(!PIR3bits.SSP2IF && tries<50){
  6386  0018E0  D002               	goto	l5250
  6387  0018E2                     l5248:
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;MAX31865.c: 179: tries++;
  6391  0018E2  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6392  0018E4  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6393  0018E6                     l5250:
  6394                           
  6395                           ; BSR set to: 0
  6396  0018E6  BEA4               	btfsc	164,7,c	;volatile
  6397  0018E8  D006               	goto	u4640
  6398                           
  6399                           ; BSR set to: 0
  6400  0018EA  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6401  0018EC  E104               	bnz	u4640
  6402  0018EE  0E32               	movlw	50
  6403  0018F0  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6404  0018F2  A0D8               	btfss	status,0,c
  6405  0018F4  D7F6               	goto	l5248
  6406  0018F6                     u4640:
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;MAX31865.c: 180: };MAX31865.c: 181: PIR3bits.SSP2IF=0;
  6410  0018F6  9EA4               	bcf	164,7,c	;volatile
  6411                           
  6412                           ;MAX31865.c: 183: unsigned char LFTMSB= SSP2BUF;
  6413  0018F8  CF6F F0C4          	movff	3951,MAX31865readData@LFTMSB	;volatile
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;MAX31865.c: 184: printf("LFTMSB %d\r\n", LFTMSB);
  6417  0018FC  0E7F               	movlw	low STR_22
  6418  0018FE  6E50               	movwf	printf@f^0,c
  6419  001900  0EFF               	movlw	high STR_22
  6420  001902  6E51               	movwf	(printf@f+1)^0,c
  6421  001904  C0C4  F052         	movff	MAX31865readData@LFTMSB,?_printf+2
  6422  001908  6A53               	clrf	(?_printf+3)^0,c
  6423  00190A  EC18  F000         	call	_printf	;wreg free
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;MAX31865.c: 186: tries=0;
  6427  00190E  0E00               	movlw	0
  6428  001910  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6429  001912  0E00               	movlw	0
  6430  001914  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;MAX31865.c: 187: SSP2BUF=0;
  6434  001916  0E00               	movlw	0
  6435  001918  6E6F               	movwf	111,c	;volatile
  6436                           
  6437                           ;MAX31865.c: 189: while(!PIR3bits.SSP2IF && tries<50){
  6438  00191A  D002               	goto	l5262
  6439  00191C                     l5260:
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;MAX31865.c: 190: tries++;
  6443  00191C  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6444  00191E  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6445  001920                     l5262:
  6446                           
  6447                           ; BSR set to: 0
  6448  001920  BEA4               	btfsc	164,7,c	;volatile
  6449  001922  D006               	goto	u4660
  6450                           
  6451                           ; BSR set to: 0
  6452  001924  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6453  001926  E104               	bnz	u4660
  6454  001928  0E32               	movlw	50
  6455  00192A  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6456  00192C  A0D8               	btfss	status,0,c
  6457  00192E  D7F6               	goto	l5260
  6458  001930                     u4660:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;MAX31865.c: 191: };MAX31865.c: 192: PIR3bits.SSP2IF=0;
  6462  001930  9EA4               	bcf	164,7,c	;volatile
  6463                           
  6464                           ;MAX31865.c: 194: unsigned char LFTLSB= SSP2BUF;
  6465  001932  CF6F F0C7          	movff	3951,MAX31865readData@LFTLSB	;volatile
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;MAX31865.c: 195: printf("LFTLSB %d\r\n", LFTLSB);
  6469  001936  0E67               	movlw	low STR_23
  6470  001938  6E50               	movwf	printf@f^0,c
  6471  00193A  0EFF               	movlw	high STR_23
  6472  00193C  6E51               	movwf	(printf@f+1)^0,c
  6473  00193E  C0C7  F052         	movff	MAX31865readData@LFTLSB,?_printf+2
  6474  001942  6A53               	clrf	(?_printf+3)^0,c
  6475  001944  EC18  F000         	call	_printf	;wreg free
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;MAX31865.c: 197: tries=0;
  6479  001948  0E00               	movlw	0
  6480  00194A  6FCA               	movwf	(MAX31865readData@tries+1)& (0+255),b
  6481  00194C  0E00               	movlw	0
  6482  00194E  6FC9               	movwf	MAX31865readData@tries& (0+255),b
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;MAX31865.c: 198: SSP2BUF=0;
  6486  001950  0E00               	movlw	0
  6487  001952  6E6F               	movwf	111,c	;volatile
  6488                           
  6489                           ;MAX31865.c: 200: while(!PIR3bits.SSP2IF && tries<50){
  6490  001954  D002               	goto	l5274
  6491  001956                     l5272:
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;MAX31865.c: 201: tries++;
  6495  001956  4BC9               	infsnz	MAX31865readData@tries& (0+255),f,b
  6496  001958  2BCA               	incf	(MAX31865readData@tries+1)& (0+255),f,b
  6497  00195A                     l5274:
  6498                           
  6499                           ; BSR set to: 0
  6500  00195A  BEA4               	btfsc	164,7,c	;volatile
  6501  00195C  D006               	goto	u4680
  6502                           
  6503                           ; BSR set to: 0
  6504  00195E  51CA               	movf	(MAX31865readData@tries+1)& (0+255),w,b
  6505  001960  E104               	bnz	u4680
  6506  001962  0E32               	movlw	50
  6507  001964  5DC9               	subwf	MAX31865readData@tries& (0+255),w,b
  6508  001966  A0D8               	btfss	status,0,c
  6509  001968  D7F6               	goto	l5272
  6510  00196A                     u4680:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;MAX31865.c: 202: };MAX31865.c: 203: PIR3bits.SSP2IF=0;
  6514  00196A  9EA4               	bcf	164,7,c	;volatile
  6515                           
  6516                           ;MAX31865.c: 205: tempStatus = SSP2BUF;
  6517  00196C  CF6F F05C          	movff	3951,_tempStatus	;volatile
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;MAX31865.c: 206: printf("STATUS %d\r\n", tempStatus);
  6521  001970  0E8B               	movlw	low STR_24
  6522  001972  6E50               	movwf	printf@f^0,c
  6523  001974  0EFF               	movlw	high STR_24
  6524  001976  6E51               	movwf	(printf@f+1)^0,c
  6525  001978  C05C  F052         	movff	_tempStatus,?_printf+2
  6526  00197C  6A53               	clrf	(?_printf+3)^0,c
  6527  00197E  EC18  F000         	call	_printf	;wreg free
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;MAX31865.c: 208: LATCbits.LATC0=1;
  6531  001982  808B               	bsf	139,0,c	;volatile
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;MAX31865.c: 210: tempStatusBit = LSB & 0x01;
  6535  001984  51C8               	movf	MAX31865readData@LSB& (0+255),w,b
  6536  001986  0B01               	andlw	1
  6537  001988  6F77               	movwf	_tempStatusBit& (0+255),b
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;MAX31865.c: 212: tempHighFault = HFTMSB*256 + HFTLSB;
  6541  00198A  C0C6  F076         	movff	MAX31865readData@HFTLSB,_tempHighFault
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;MAX31865.c: 214: tempLowFault = LFTMSB * 256 + LFTLSB;
  6545  00198E  C0C7  F075         	movff	MAX31865readData@LFTLSB,_tempLowFault
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;MAX31865.c: 216: return (MSB*256 + LSB)/2;
  6549  001992  51C5               	movf	MAX31865readData@MSB& (0+255),w,b
  6550  001994  6E5B               	movwf	(??_MAX31865readData+1)^0,c
  6551  001996  6A5A               	clrf	??_MAX31865readData^0,c
  6552  001998  51C8               	movf	MAX31865readData@LSB& (0+255),w,b
  6553  00199A  245A               	addwf	??_MAX31865readData^0,w,c
  6554  00199C  6E08               	movwf	___awdiv@dividend^0,c
  6555  00199E  0E00               	movlw	0
  6556  0019A0  205B               	addwfc	(??_MAX31865readData+1)^0,w,c
  6557  0019A2  6E09               	movwf	(___awdiv@dividend+1)^0,c
  6558  0019A4  0E00               	movlw	0
  6559  0019A6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  6560  0019A8  0E02               	movlw	2
  6561  0019AA  6E0A               	movwf	___awdiv@divisor^0,c
  6562  0019AC  EC86  F012         	call	___awdiv	;wreg free
  6563  0019B0  C008  F058         	movff	?___awdiv,?_MAX31865readData
  6564  0019B4  C009  F059         	movff	?___awdiv+1,?_MAX31865readData+1
  6565  0019B8  0012               	return		;funcret
  6566  0019BA                     __end_of_MAX31865readData:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function _printf *****************
  6570 ;; Defined at:
  6571 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  f               2   79[COMRAM] PTR const unsigned char 
  6574 ;;		 -> STR_24(12), STR_23(12), STR_22(12), STR_21(12), 
  6575 ;;		 -> STR_20(12), STR_19(9), STR_18(9), STR_17(13), 
  6576 ;;		 -> STR_16(12), STR_15(10), STR_14(8), STR_13(18), 
  6577 ;;		 -> STR_12(8), STR_11(10), STR_10(34), STR_9(10), 
  6578 ;;		 -> STR_8(18), STR_7(11), STR_6(10), STR_5(11), 
  6579 ;;		 -> STR_4(12), STR_3(14), STR_2(10), STR_1(10), 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  idx             1    4[BANK0 ] unsigned char 
  6582 ;;  fval            4   20[BANK0 ] unsigned char 
  6583 ;;  val             4   16[BANK0 ] unsigned long 
  6584 ;;  tmpval          4   12[BANK0 ] struct .
  6585 ;;  cp              3    0        PTR const unsigned char 
  6586 ;;  eexp            2   10[BANK0 ] int 
  6587 ;;  prec            2    8[BANK0 ] int 
  6588 ;;  flag            2    6[BANK0 ] unsigned short 
  6589 ;;  len             2    0        unsigned int 
  6590 ;;  width           2    0        int 
  6591 ;;  c               1   24[BANK0 ] unsigned char 
  6592 ;;  ap              1    5[BANK0 ] PTR void [1]
  6593 ;;		 -> ?_printf(2), 
  6594 ;;  d               1    0        unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  2   79[COMRAM] int 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 3F/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6604 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Totals:         8      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;Total ram usage:       33 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    3
  6611 ;; This function calls:
  6612 ;;		___awdiv
  6613 ;;		___fladd
  6614 ;;		___fleq
  6615 ;;		___flge
  6616 ;;		___flmul
  6617 ;;		___flneg
  6618 ;;		___flsub
  6619 ;;		___fltol
  6620 ;;		___lldiv
  6621 ;;		___llmod
  6622 ;;		___wmul
  6623 ;;		___xxtofl
  6624 ;;		__div_to_l_
  6625 ;;		__tdiv_to_l_
  6626 ;;		_fround
  6627 ;;		_putch
  6628 ;;		_scale
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;;		_transmitData
  6632 ;;		_LoRaTXData
  6633 ;;		_LoRaTXMode
  6634 ;;		_MAX31865readData
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text43
  6639  000030                     __ptext43:
  6640                           	callstack 0
  6641  000030                     _printf:
  6642                           	callstack 26
  6643                           
  6644                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  6645                           
  6646                           ;incstack = 0
  6647  000030  0E52               	movlw	low (?_printf+2)
  6648  000032  0100               	movlb	0	; () banked
  6649  000034  6FAF               	movwf	printf@ap& (0+255),b
  6650                           
  6651                           ;doprnt.c: 553: while((c = *f++)) {
  6652  000036  EF35  F004         	goto	u4040
  6653  00003A                     l4380:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;doprnt.c: 555: if(c != '%')
  6657  00003A  0E25               	movlw	37
  6658  00003C  19C2               	xorwf	printf@c& (0+255),w,b
  6659  00003E  B4D8               	btfsc	status,2,c
  6660  000040  D005               	goto	l4384
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  6664  000042  51C2               	movf	printf@c& (0+255),w,b
  6665  000044  EC0E  F017         	call	_putch
  6666                           
  6667                           ;doprnt.c: 559: continue;
  6668  000048  EF35  F004         	goto	u4040
  6669  00004C                     l4384:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  6673  00004C  0E00               	movlw	0
  6674  00004E  6FB1               	movwf	(printf@flag+1)& (0+255),b
  6675  000050  0E00               	movlw	0
  6676  000052  6FB0               	movwf	printf@flag& (0+255),b
  6677                           
  6678                           ;doprnt.c: 661: switch(c = *f++) {
  6679  000054  D004               	goto	l4392
  6680  000056                     l4386:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;doprnt.c: 689: flag |= 0x400;
  6684  000056  85B1               	bsf	(printf@flag+1)& (0+255),2,b
  6685                           
  6686                           ;doprnt.c: 690: break;
  6687  000058  D01F               	goto	l4394
  6688  00005A                     l4388:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;doprnt.c: 744: case 'x':;doprnt.c: 747: flag |= 0x80;
  6692  00005A  8FB0               	bsf	printf@flag& (0+255),7,b
  6693                           
  6694                           ;doprnt.c: 749: break;
  6695  00005C  D01D               	goto	l4394
  6696  00005E                     l4392:
  6697                           
  6698                           ; BSR set to: 0
  6699  00005E  C050  FFF6         	movff	printf@f,tblptrl
  6700  000062  C051  FFF7         	movff	printf@f+1,tblptrh
  6701  000066  4A50               	infsnz	printf@f^0,f,c
  6702  000068  2A51               	incf	(printf@f+1)^0,f,c
  6703  00006A                     	if	0	;tblptru may be non-zero
  6704  00006A                     	endif
  6705  00006A                     	if	0	;tblptru may be non-zero
  6706  00006A                     	endif
  6707  00006A  0008               	tblrd		*
  6708  00006C  CFF5 F0C2          	movff	tablat,printf@c
  6709  000070  51C2               	movf	printf@c& (0+255),w,b
  6710                           
  6711                           ; Switch size 1, requested type "simple"
  6712                           ; Number of cases is 6, Range of values is 0 to 120
  6713                           ; switch strategies available:
  6714                           ; Name         Instructions Cycles
  6715                           ; simple_byte           19    10 (average)
  6716                           ;	Chosen strategy is simple_byte
  6717  000072  0A00               	xorlw	0	; case 0
  6718  000074  B4D8               	btfsc	status,2,c
  6719  000076  0012               	return	
  6720  000078  0A58               	xorlw	88	; case 88
  6721  00007A  B4D8               	btfsc	status,2,c
  6722  00007C  D7EE               	goto	l4388
  6723  00007E  0A3C               	xorlw	60	; case 100
  6724  000080  B4D8               	btfsc	status,2,c
  6725  000082  D00A               	goto	l4394
  6726  000084  0A02               	xorlw	2	; case 102
  6727  000086  B4D8               	btfsc	status,2,c
  6728  000088  D7E6               	goto	l4386
  6729  00008A  0A0F               	xorlw	15	; case 105
  6730  00008C  B4D8               	btfsc	status,2,c
  6731  00008E  D004               	goto	l4394
  6732  000090  0A11               	xorlw	17	; case 120
  6733  000092  B4D8               	btfsc	status,2,c
  6734  000094  D7E2               	goto	l4388
  6735  000096  D3E9               	goto	u4040
  6736  000098                     l4394:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;doprnt.c: 851: if(flag & (0x700)) {
  6740  000098  0E07               	movlw	7
  6741  00009A  15B1               	andwf	(printf@flag+1)& (0+255),w,b
  6742  00009C  B4D8               	btfsc	status,2,c
  6743  00009E  D2E1               	goto	l661
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;doprnt.c: 855: prec = 6;
  6747  0000A0  0E00               	movlw	0
  6748  0000A2  6FB3               	movwf	(printf@prec+1)& (0+255),b
  6749  0000A4  0E06               	movlw	6
  6750  0000A6  6FB2               	movwf	printf@prec& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6754  0000A8  51AF               	movf	printf@ap& (0+255),w,b
  6755  0000AA  6ED9               	movwf	fsr2l,c
  6756  0000AC  6ADA               	clrf	fsr2h,c
  6757  0000AE  CFDE F0BE          	movff	postinc2,printf@fval
  6758  0000B2  CFDE F0BF          	movff	postinc2,printf@fval+1
  6759  0000B6  CFDE F0C0          	movff	postinc2,printf@fval+2
  6760  0000BA  CFDE F0C1          	movff	postinc2,printf@fval+3
  6761                           
  6762                           ; BSR set to: 0
  6763  0000BE  0E04               	movlw	4
  6764  0000C0  27AF               	addwf	printf@ap& (0+255),f,b
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;doprnt.c: 857: if(fval < 0.0) {
  6768  0000C2  AFC1               	btfss	(printf@fval+3)& (0+255),7,b
  6769  0000C4  D014               	goto	l4408
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;doprnt.c: 858: fval = -fval;
  6773  0000C6  C0BE  F002         	movff	printf@fval,___flneg@f1
  6774  0000CA  C0BF  F003         	movff	printf@fval+1,___flneg@f1+1
  6775  0000CE  C0C0  F004         	movff	printf@fval+2,___flneg@f1+2
  6776  0000D2  C0C1  F005         	movff	printf@fval+3,___flneg@f1+3
  6777  0000D6  EC1D  F016         	call	___flneg	;wreg free
  6778  0000DA  C002  F0BE         	movff	?___flneg,printf@fval
  6779  0000DE  C003  F0BF         	movff	?___flneg+1,printf@fval+1
  6780  0000E2  C004  F0C0         	movff	?___flneg+2,printf@fval+2
  6781  0000E6  C005  F0C1         	movff	?___flneg+3,printf@fval+3
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;doprnt.c: 859: flag |= 0x03;
  6785  0000EA  0E03               	movlw	3
  6786  0000EC  13B0               	iorwf	printf@flag& (0+255),f,b
  6787  0000EE                     l4408:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  6791  0000EE  0E00               	movlw	0
  6792  0000F0  6FB5               	movwf	(printf@eexp+1)& (0+255),b
  6793  0000F2  0E00               	movlw	0
  6794  0000F4  6FB4               	movwf	printf@eexp& (0+255),b
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;doprnt.c: 862: if( fval!=0) {
  6798  0000F6  C0BE  F002         	movff	printf@fval,___fleq@ff1
  6799  0000FA  C0BF  F003         	movff	printf@fval+1,___fleq@ff1+1
  6800  0000FE  C0C0  F004         	movff	printf@fval+2,___fleq@ff1+2
  6801  000102  C0C1  F005         	movff	printf@fval+3,___fleq@ff1+3
  6802  000106  0E00               	movlw	0
  6803  000108  6E06               	movwf	___fleq@ff2^0,c
  6804  00010A  0E00               	movlw	0
  6805  00010C  6E07               	movwf	(___fleq@ff2+1)^0,c
  6806  00010E  0E00               	movlw	0
  6807  000110  6E08               	movwf	(___fleq@ff2+2)^0,c
  6808  000112  0E00               	movlw	0
  6809  000114  6E09               	movwf	(___fleq@ff2+3)^0,c
  6810  000116  EC41  F012         	call	___fleq	;wreg free
  6811  00011A  B0D8               	btfsc	status,0,c
  6812  00011C  D082               	goto	l4436
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  6816  00011E  35C0               	rlcf	(printf@fval+2)& (0+255),w,b
  6817  000120  35C1               	rlcf	(printf@fval+3)& (0+255),w,b
  6818  000122  0F82               	addlw	130
  6819  000124  6FB4               	movwf	printf@eexp& (0+255),b
  6820  000126  6BB5               	clrf	(printf@eexp+1)& (0+255),b
  6821  000128  0EFF               	movlw	255
  6822  00012A  23B5               	addwfc	(printf@eexp+1)& (0+255),f,b
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;doprnt.c: 864: eexp--;
  6826  00012C  07B4               	decf	printf@eexp& (0+255),f,b
  6827  00012E  A0D8               	btfss	status,0,c
  6828  000130  07B5               	decf	(printf@eexp+1)& (0+255),f,b
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;doprnt.c: 865: eexp *= 3;
  6832  000132  C0B4  F002         	movff	printf@eexp,___wmul@multiplier
  6833  000136  C0B5  F003         	movff	printf@eexp+1,___wmul@multiplier+1
  6834  00013A  0E00               	movlw	0
  6835  00013C  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  6836  00013E  0E03               	movlw	3
  6837  000140  6E04               	movwf	___wmul@multiplicand^0,c
  6838  000142  EC85  F016         	call	___wmul	;wreg free
  6839  000146  C002  F0B4         	movff	?___wmul,printf@eexp
  6840  00014A  C003  F0B5         	movff	?___wmul+1,printf@eexp+1
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;doprnt.c: 866: eexp /= 10;
  6844  00014E  C0B4  F008         	movff	printf@eexp,___awdiv@dividend
  6845  000152  C0B5  F009         	movff	printf@eexp+1,___awdiv@dividend+1
  6846  000156  0E00               	movlw	0
  6847  000158  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  6848  00015A  0E0A               	movlw	10
  6849  00015C  6E0A               	movwf	___awdiv@divisor^0,c
  6850  00015E  EC86  F012         	call	___awdiv	;wreg free
  6851  000162  C008  F0B4         	movff	?___awdiv,printf@eexp
  6852  000166  C009  F0B5         	movff	?___awdiv+1,printf@eexp+1
  6853                           
  6854                           ;doprnt.c: 867: if(eexp < 0)
  6855  00016A  0100               	movlb	0	; () banked
  6856  00016C  AFB5               	btfss	(printf@eexp+1)& (0+255),7,b
  6857  00016E  D003               	goto	l4424
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;doprnt.c: 868: eexp--;
  6861  000170  07B4               	decf	printf@eexp& (0+255),f,b
  6862  000172  A0D8               	btfss	status,0,c
  6863  000174  07B5               	decf	(printf@eexp+1)& (0+255),f,b
  6864  000176                     l4424:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  6868  000176  51B4               	movf	printf@eexp& (0+255),w,b
  6869  000178  0800               	sublw	0
  6870  00017A  EC44  F004         	call	_scale
  6871  00017E  C029  F0B6         	movff	?_scale,printf@tmpval
  6872  000182  C02A  F0B7         	movff	?_scale+1,printf@tmpval+1
  6873  000186  C02B  F0B8         	movff	?_scale+2,printf@tmpval+2
  6874  00018A  C02C  F0B9         	movff	?_scale+3,printf@tmpval+3
  6875                           
  6876                           ;doprnt.c: 873: tmpval.integ *= fval;
  6877  00018E  C0B6  F010         	movff	printf@tmpval,___flmul@b
  6878  000192  C0B7  F011         	movff	printf@tmpval+1,___flmul@b+1
  6879  000196  C0B8  F012         	movff	printf@tmpval+2,___flmul@b+2
  6880  00019A  C0B9  F013         	movff	printf@tmpval+3,___flmul@b+3
  6881  00019E  C0BE  F014         	movff	printf@fval,___flmul@a
  6882  0001A2  C0BF  F015         	movff	printf@fval+1,___flmul@a+1
  6883  0001A6  C0C0  F016         	movff	printf@fval+2,___flmul@a+2
  6884  0001AA  C0C1  F017         	movff	printf@fval+3,___flmul@a+3
  6885  0001AE  EC2C  F006         	call	___flmul	;wreg free
  6886  0001B2  C010  F0B6         	movff	?___flmul,printf@tmpval
  6887  0001B6  C011  F0B7         	movff	?___flmul+1,printf@tmpval+1
  6888  0001BA  C012  F0B8         	movff	?___flmul+2,printf@tmpval+2
  6889  0001BE  C013  F0B9         	movff	?___flmul+3,printf@tmpval+3
  6890                           
  6891                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  6892  0001C2  C0B6  F002         	movff	printf@tmpval,___flge@ff1
  6893  0001C6  C0B7  F003         	movff	printf@tmpval+1,___flge@ff1+1
  6894  0001CA  C0B8  F004         	movff	printf@tmpval+2,___flge@ff1+2
  6895  0001CE  C0B9  F005         	movff	printf@tmpval+3,___flge@ff1+3
  6896  0001D2  0E00               	movlw	0
  6897  0001D4  6E06               	movwf	___flge@ff2^0,c
  6898  0001D6  0E00               	movlw	0
  6899  0001D8  6E07               	movwf	(___flge@ff2+1)^0,c
  6900  0001DA  0E80               	movlw	128
  6901  0001DC  6E08               	movwf	(___flge@ff2+2)^0,c
  6902  0001DE  0E3F               	movlw	63
  6903  0001E0  6E09               	movwf	(___flge@ff2+3)^0,c
  6904  0001E2  EC16  F011         	call	___flge	;wreg free
  6905  0001E6  B0D8               	btfsc	status,0,c
  6906  0001E8  D005               	goto	l4432
  6907                           
  6908                           ;doprnt.c: 875: eexp--;
  6909  0001EA  0100               	movlb	0	; () banked
  6910  0001EC  07B4               	decf	printf@eexp& (0+255),f,b
  6911  0001EE  A0D8               	btfss	status,0,c
  6912  0001F0  07B5               	decf	(printf@eexp+1)& (0+255),f,b
  6913  0001F2  D017               	goto	l4436
  6914  0001F4                     l4432:
  6915                           
  6916                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  6917  0001F4  C0B6  F002         	movff	printf@tmpval,___flge@ff1
  6918  0001F8  C0B7  F003         	movff	printf@tmpval+1,___flge@ff1+1
  6919  0001FC  C0B8  F004         	movff	printf@tmpval+2,___flge@ff1+2
  6920  000200  C0B9  F005         	movff	printf@tmpval+3,___flge@ff1+3
  6921  000204  0E00               	movlw	0
  6922  000206  6E06               	movwf	___flge@ff2^0,c
  6923  000208  0E00               	movlw	0
  6924  00020A  6E07               	movwf	(___flge@ff2+1)^0,c
  6925  00020C  0E20               	movlw	32
  6926  00020E  6E08               	movwf	(___flge@ff2+2)^0,c
  6927  000210  0E41               	movlw	65
  6928  000212  6E09               	movwf	(___flge@ff2+3)^0,c
  6929  000214  EC16  F011         	call	___flge	;wreg free
  6930  000218  A0D8               	btfss	status,0,c
  6931  00021A  D003               	goto	l4436
  6932                           
  6933                           ;doprnt.c: 877: eexp++;
  6934  00021C  0100               	movlb	0	; () banked
  6935  00021E  4BB4               	infsnz	printf@eexp& (0+255),f,b
  6936  000220  2BB5               	incf	(printf@eexp+1)& (0+255),f,b
  6937  000222                     l4436:
  6938                           
  6939                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  6940                           
  6941                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  6942  000222  C0BE  F038         	movff	printf@fval,___fladd@b
  6943  000226  C0BF  F039         	movff	printf@fval+1,___fladd@b+1
  6944  00022A  C0C0  F03A         	movff	printf@fval+2,___fladd@b+2
  6945  00022E  C0C1  F03B         	movff	printf@fval+3,___fladd@b+3
  6946  000232  0E06               	movlw	6
  6947  000234  EC8C  F00A         	call	_fround
  6948  000238  C029  F03C         	movff	?_fround,___fladd@a
  6949  00023C  C02A  F03D         	movff	?_fround+1,___fladd@a+1
  6950  000240  C02B  F03E         	movff	?_fround+2,___fladd@a+2
  6951  000244  C02C  F03F         	movff	?_fround+3,___fladd@a+3
  6952  000248  ECC2  F007         	call	___fladd	;wreg free
  6953  00024C  C038  F0BE         	movff	?___fladd,printf@fval
  6954  000250  C039  F0BF         	movff	?___fladd+1,printf@fval+1
  6955  000254  C03A  F0C0         	movff	?___fladd+2,printf@fval+2
  6956  000258  C03B  F0C1         	movff	?___fladd+3,printf@fval+3
  6957                           
  6958                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  6959  00025C  0100               	movlb	0	; () banked
  6960  00025E  BFB5               	btfsc	(printf@eexp+1)& (0+255),7,b
  6961  000260  D006               	goto	u3830
  6962  000262  51B5               	movf	(printf@eexp+1)& (0+255),w,b
  6963  000264  E131               	bnz	l4448
  6964  000266  0E0A               	movlw	10
  6965  000268  5DB4               	subwf	printf@eexp& (0+255),w,b
  6966  00026A  B0D8               	btfsc	status,0,c
  6967  00026C  D02D               	goto	u3860
  6968  00026E                     u3830:
  6969                           
  6970                           ; BSR set to: 0
  6971  00026E  C0BE  F002         	movff	printf@fval,___fleq@ff1
  6972  000272  C0BF  F003         	movff	printf@fval+1,___fleq@ff1+1
  6973  000276  C0C0  F004         	movff	printf@fval+2,___fleq@ff1+2
  6974  00027A  C0C1  F005         	movff	printf@fval+3,___fleq@ff1+3
  6975  00027E  0E00               	movlw	0
  6976  000280  6E06               	movwf	___fleq@ff2^0,c
  6977  000282  0E00               	movlw	0
  6978  000284  6E07               	movwf	(___fleq@ff2+1)^0,c
  6979  000286  0E00               	movlw	0
  6980  000288  6E08               	movwf	(___fleq@ff2+2)^0,c
  6981  00028A  0E00               	movlw	0
  6982  00028C  6E09               	movwf	(___fleq@ff2+3)^0,c
  6983  00028E  EC41  F012         	call	___fleq	;wreg free
  6984  000292  B0D8               	btfsc	status,0,c
  6985  000294  D064               	goto	l4462
  6986                           
  6987                           ; BSR set to: 0
  6988  000296  C0BE  F029         	movff	printf@fval,___fltol@f1
  6989  00029A  C0BF  F02A         	movff	printf@fval+1,___fltol@f1+1
  6990  00029E  C0C0  F02B         	movff	printf@fval+2,___fltol@f1+2
  6991  0002A2  C0C1  F02C         	movff	printf@fval+3,___fltol@f1+3
  6992  0002A6  ECE4  F011         	call	___fltol	;wreg free
  6993  0002AA  5029               	movf	?___fltol^0,w,c
  6994  0002AC  102A               	iorwf	(?___fltol+1)^0,w,c
  6995  0002AE  102B               	iorwf	(?___fltol+2)^0,w,c
  6996  0002B0  102C               	iorwf	(?___fltol+3)^0,w,c
  6997  0002B2  A4D8               	btfss	status,2,c
  6998  0002B4  D054               	goto	l4462
  6999  0002B6  0100               	movlb	0	; () banked
  7000  0002B8  BFB5               	btfsc	(printf@eexp+1)& (0+255),7,b
  7001  0002BA  D051               	goto	l4462
  7002  0002BC  51B5               	movf	(printf@eexp+1)& (0+255),w,b
  7003  0002BE  E104               	bnz	u3860
  7004  0002C0  0E02               	movlw	2
  7005  0002C2  5DB4               	subwf	printf@eexp& (0+255),w,b
  7006  0002C4  A0D8               	btfss	status,0,c
  7007  0002C6  D04B               	goto	l4462
  7008  0002C8                     u3860:
  7009  0002C8                     l4448:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  7013  0002C8  C0B6  F002         	movff	printf@tmpval,___flge@ff1
  7014  0002CC  C0B7  F003         	movff	printf@tmpval+1,___flge@ff1+1
  7015  0002D0  C0B8  F004         	movff	printf@tmpval+2,___flge@ff1+2
  7016  0002D4  C0B9  F005         	movff	printf@tmpval+3,___flge@ff1+3
  7017  0002D8  0E5F               	movlw	95
  7018  0002DA  6E06               	movwf	___flge@ff2^0,c
  7019  0002DC  0E70               	movlw	112
  7020  0002DE  6E07               	movwf	(___flge@ff2+1)^0,c
  7021  0002E0  0E89               	movlw	137
  7022  0002E2  6E08               	movwf	(___flge@ff2+2)^0,c
  7023  0002E4  0E40               	movlw	64
  7024  0002E6  6E09               	movwf	(___flge@ff2+3)^0,c
  7025  0002E8  EC16  F011         	call	___flge	;wreg free
  7026  0002EC  B0D8               	btfsc	status,0,c
  7027  0002EE  D003               	goto	l4452
  7028                           
  7029                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7030  0002F0  0100               	movlb	0	; () banked
  7031  0002F2  0EF7               	movlw	247
  7032  0002F4  D002               	goto	L3
  7033  0002F6                     l4452:
  7034                           
  7035                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7036  0002F6  0100               	movlb	0	; () banked
  7037  0002F8  0EF8               	movlw	248
  7038  0002FA                     L3:
  7039  0002FA  27B4               	addwf	printf@eexp& (0+255),f,b
  7040  0002FC  0EFF               	movlw	255
  7041  0002FE  23B5               	addwfc	(printf@eexp+1)& (0+255),f,b
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7045  000300  51B4               	movf	printf@eexp& (0+255),w,b
  7046  000302  EC44  F004         	call	_scale
  7047  000306  C029  F0B6         	movff	?_scale,printf@tmpval
  7048  00030A  C02A  F0B7         	movff	?_scale+1,printf@tmpval+1
  7049  00030E  C02B  F0B8         	movff	?_scale+2,printf@tmpval+2
  7050  000312  C02C  F0B9         	movff	?_scale+3,printf@tmpval+3
  7051  000316  C0BE  F002         	movff	printf@fval,__div_to_l_@f1
  7052  00031A  C0BF  F003         	movff	printf@fval+1,__div_to_l_@f1+1
  7053  00031E  C0C0  F004         	movff	printf@fval+2,__div_to_l_@f1+2
  7054  000322  C0C1  F005         	movff	printf@fval+3,__div_to_l_@f1+3
  7055  000326  C0B6  F006         	movff	printf@tmpval,__div_to_l_@f2
  7056  00032A  C0B7  F007         	movff	printf@tmpval+1,__div_to_l_@f2+1
  7057  00032E  C0B8  F008         	movff	printf@tmpval+2,__div_to_l_@f2+2
  7058  000332  C0B9  F009         	movff	printf@tmpval+3,__div_to_l_@f2+3
  7059  000336  EC9C  F010         	call	__div_to_l_	;wreg free
  7060  00033A  C002  F0BA         	movff	?__div_to_l_,printf@val
  7061  00033E  C003  F0BB         	movff	?__div_to_l_+1,printf@val+1
  7062  000342  C004  F0BC         	movff	?__div_to_l_+2,printf@val+2
  7063  000346  C005  F0BD         	movff	?__div_to_l_+3,printf@val+3
  7064                           
  7065                           ;doprnt.c: 1155: fval = 0.0;
  7066  00034A  0E00               	movlw	0
  7067  00034C  0100               	movlb	0	; () banked
  7068  00034E  6FBE               	movwf	printf@fval& (0+255),b
  7069  000350  0E00               	movlw	0
  7070  000352  6FBF               	movwf	(printf@fval+1)& (0+255),b
  7071  000354  0E00               	movlw	0
  7072  000356  6FC0               	movwf	(printf@fval+2)& (0+255),b
  7073  000358  0E00               	movlw	0
  7074  00035A  6FC1               	movwf	(printf@fval+3)& (0+255),b
  7075                           
  7076                           ;doprnt.c: 1156: } else {
  7077  00035C  D03C               	goto	l4466
  7078  00035E                     l4462:
  7079                           
  7080                           ;doprnt.c: 1157: val = (unsigned long)fval;
  7081  00035E  C0BE  F029         	movff	printf@fval,___fltol@f1
  7082  000362  C0BF  F02A         	movff	printf@fval+1,___fltol@f1+1
  7083  000366  C0C0  F02B         	movff	printf@fval+2,___fltol@f1+2
  7084  00036A  C0C1  F02C         	movff	printf@fval+3,___fltol@f1+3
  7085  00036E  ECE4  F011         	call	___fltol	;wreg free
  7086  000372  C029  F0BA         	movff	?___fltol,printf@val
  7087  000376  C02A  F0BB         	movff	?___fltol+1,printf@val+1
  7088  00037A  C02B  F0BC         	movff	?___fltol+2,printf@val+2
  7089  00037E  C02C  F0BD         	movff	?___fltol+3,printf@val+3
  7090                           
  7091                           ;doprnt.c: 1158: fval -= (double)val;
  7092  000382  C0BE  F048         	movff	printf@fval,___flsub@b
  7093  000386  C0BF  F049         	movff	printf@fval+1,___flsub@b+1
  7094  00038A  C0C0  F04A         	movff	printf@fval+2,___flsub@b+2
  7095  00038E  C0C1  F04B         	movff	printf@fval+3,___flsub@b+3
  7096  000392  C0BA  F002         	movff	printf@val,___xxtofl@val
  7097  000396  C0BB  F003         	movff	printf@val+1,___xxtofl@val+1
  7098  00039A  C0BC  F004         	movff	printf@val+2,___xxtofl@val+2
  7099  00039E  C0BD  F005         	movff	printf@val+3,___xxtofl@val+3
  7100  0003A2  0E00               	movlw	0
  7101  0003A4  EC7D  F00F         	call	___xxtofl
  7102  0003A8  C002  F04C         	movff	?___xxtofl,___flsub@a
  7103  0003AC  C003  F04D         	movff	?___xxtofl+1,___flsub@a+1
  7104  0003B0  C004  F04E         	movff	?___xxtofl+2,___flsub@a+2
  7105  0003B4  C005  F04F         	movff	?___xxtofl+3,___flsub@a+3
  7106  0003B8  ECE7  F014         	call	___flsub	;wreg free
  7107  0003BC  C048  F0BE         	movff	?___flsub,printf@fval
  7108  0003C0  C049  F0BF         	movff	?___flsub+1,printf@fval+1
  7109  0003C4  C04A  F0C0         	movff	?___flsub+2,printf@fval+2
  7110  0003C8  C04B  F0C1         	movff	?___flsub+3,printf@fval+3
  7111                           
  7112                           ;doprnt.c: 1159: eexp = 0;
  7113  0003CC  0E00               	movlw	0
  7114  0003CE  0100               	movlb	0	; () banked
  7115  0003D0  6FB5               	movwf	(printf@eexp+1)& (0+255),b
  7116  0003D2  0E00               	movlw	0
  7117  0003D4  6FB4               	movwf	printf@eexp& (0+255),b
  7118  0003D6                     l4466:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  7122  0003D6  0E01               	movlw	1
  7123  0003D8  6FC2               	movwf	printf@c& (0+255),b
  7124  0003DA                     l4472:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;doprnt.c: 1163: if(val < dpowers[c])
  7128  0003DA  51C2               	movf	printf@c& (0+255),w,b
  7129  0003DC  0D04               	mullw	4
  7130  0003DE  0ECD               	movlw	low _dpowers
  7131  0003E0  24F3               	addwf	243,w,c
  7132  0003E2  6EF6               	movwf	tblptrl,c
  7133  0003E4  0EFE               	movlw	high _dpowers
  7134  0003E6  20F4               	addwfc	244,w,c
  7135  0003E8  6EF7               	movwf	tblptrh,c
  7136  0003EA                     	if	0	;There are less than 3 active tblptr bytes
  7137  0003EA                     	endif
  7138  0003EA  0009               	tblrd		*+
  7139  0003EC  50F5               	movf	tablat,w,c
  7140  0003EE  5DBA               	subwf	printf@val& (0+255),w,b
  7141  0003F0  0009               	tblrd		*+
  7142  0003F2  50F5               	movf	tablat,w,c
  7143  0003F4  59BB               	subwfb	(printf@val+1)& (0+255),w,b
  7144  0003F6  0009               	tblrd		*+
  7145  0003F8  50F5               	movf	tablat,w,c
  7146  0003FA  59BC               	subwfb	(printf@val+2)& (0+255),w,b
  7147  0003FC  0009               	tblrd		*+
  7148  0003FE  50F5               	movf	tablat,w,c
  7149  000400  59BD               	subwfb	(printf@val+3)& (0+255),w,b
  7150  000402  A0D8               	btfss	status,0,c
  7151  000404  D005               	goto	u3890
  7152                           
  7153                           ; BSR set to: 0
  7154  000406  2BC2               	incf	printf@c& (0+255),f,b
  7155                           
  7156                           ; BSR set to: 0
  7157  000408  0E0A               	movlw	10
  7158  00040A  19C2               	xorwf	printf@c& (0+255),w,b
  7159  00040C  A4D8               	btfss	status,2,c
  7160  00040E  D7E5               	goto	l4472
  7161  000410                     u3890:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  7165  000410  C0B0  F056         	movff	printf@flag,??_printf
  7166  000414  0E03               	movlw	3
  7167  000416  1656               	andwf	??_printf^0,f,c
  7168  000418  B4D8               	btfsc	status,2,c
  7169  00041A  D049               	goto	l4490
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;doprnt.c: 1216: (putch('-') );
  7173  00041C  0E2D               	movlw	45
  7174  00041E  EC0E  F017         	call	_putch
  7175  000422  D045               	goto	l4490
  7176  000424                     l4484:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  7180  000424  C0BA  F002         	movff	printf@val,___lldiv@dividend
  7181  000428  C0BB  F003         	movff	printf@val+1,___lldiv@dividend+1
  7182  00042C  C0BC  F004         	movff	printf@val+2,___lldiv@dividend+2
  7183  000430  C0BD  F005         	movff	printf@val+3,___lldiv@dividend+3
  7184  000434  51C2               	movf	printf@c& (0+255),w,b
  7185  000436  0D04               	mullw	4
  7186  000438  0ECD               	movlw	low _dpowers
  7187  00043A  24F3               	addwf	243,w,c
  7188  00043C  6EF6               	movwf	tblptrl,c
  7189  00043E  0EFE               	movlw	high _dpowers
  7190  000440  20F4               	addwfc	244,w,c
  7191  000442  6EF7               	movwf	tblptrh,c
  7192  000444                     	if	0	;There are less than 3 active tblptr bytes
  7193  000444                     	endif
  7194  000444  0009               	tblrd		*+
  7195  000446  CFF5 F006          	movff	tablat,___lldiv@divisor
  7196  00044A  0009               	tblrd		*+
  7197  00044C  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  7198  000450  0009               	tblrd		*+
  7199  000452  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  7200  000456  000A               	tblrd		*-
  7201  000458  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  7202  00045C  ECC8  F012         	call	___lldiv	;wreg free
  7203  000460  C002  F0B6         	movff	?___lldiv,printf@tmpval
  7204  000464  C003  F0B7         	movff	?___lldiv+1,printf@tmpval+1
  7205  000468  C004  F0B8         	movff	?___lldiv+2,printf@tmpval+2
  7206  00046C  C005  F0B9         	movff	?___lldiv+3,printf@tmpval+3
  7207                           
  7208                           ;doprnt.c: 1228: tmpval.vd %= 10;
  7209  000470  C0B6  F00F         	movff	printf@tmpval,___llmod@dividend
  7210  000474  C0B7  F010         	movff	printf@tmpval+1,___llmod@dividend+1
  7211  000478  C0B8  F011         	movff	printf@tmpval+2,___llmod@dividend+2
  7212  00047C  C0B9  F012         	movff	printf@tmpval+3,___llmod@dividend+3
  7213  000480  0E0A               	movlw	10
  7214  000482  6E13               	movwf	___llmod@divisor^0,c
  7215  000484  0E00               	movlw	0
  7216  000486  6E14               	movwf	(___llmod@divisor+1)^0,c
  7217  000488  0E00               	movlw	0
  7218  00048A  6E15               	movwf	(___llmod@divisor+2)^0,c
  7219  00048C  0E00               	movlw	0
  7220  00048E  6E16               	movwf	(___llmod@divisor+3)^0,c
  7221  000490  ECAE  F013         	call	___llmod	;wreg free
  7222  000494  C00F  F0B6         	movff	?___llmod,printf@tmpval
  7223  000498  C010  F0B7         	movff	?___llmod+1,printf@tmpval+1
  7224  00049C  C011  F0B8         	movff	?___llmod+2,printf@tmpval+2
  7225  0004A0  C012  F0B9         	movff	?___llmod+3,printf@tmpval+3
  7226                           
  7227                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  7228  0004A4  0100               	movlb	0	; () banked
  7229  0004A6  51B6               	movf	printf@tmpval& (0+255),w,b
  7230  0004A8  0F30               	addlw	48
  7231  0004AA  EC0E  F017         	call	_putch
  7232  0004AE                     l4490:
  7233  0004AE  0100               	movlb	0	; () banked
  7234  0004B0  07C2               	decf	printf@c& (0+255),f,b
  7235  0004B2  29C2               	incf	printf@c& (0+255),w,b
  7236  0004B4  B4D8               	btfsc	status,2,c
  7237  0004B6  D008               	goto	l4496
  7238  0004B8  D7B5               	goto	l4484
  7239  0004BA                     l4492:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;doprnt.c: 1234: (putch('0') );
  7243  0004BA  0E30               	movlw	48
  7244  0004BC  EC0E  F017         	call	_putch
  7245                           
  7246                           ;doprnt.c: 1235: eexp--;
  7247  0004C0  0100               	movlb	0	; () banked
  7248  0004C2  07B4               	decf	printf@eexp& (0+255),f,b
  7249  0004C4  A0D8               	btfss	status,0,c
  7250  0004C6  07B5               	decf	(printf@eexp+1)& (0+255),f,b
  7251  0004C8                     l4496:
  7252                           
  7253                           ; BSR set to: 0
  7254  0004C8  BFB5               	btfsc	(printf@eexp+1)& (0+255),7,b
  7255  0004CA  D005               	goto	u3920
  7256  0004CC  51B5               	movf	(printf@eexp+1)& (0+255),w,b
  7257  0004CE  E1F5               	bnz	l4492
  7258  0004D0  05B4               	decf	printf@eexp& (0+255),w,b
  7259  0004D2  B0D8               	btfsc	status,0,c
  7260  0004D4  D7F2               	goto	l4492
  7261  0004D6                     u3920:
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  7265  0004D6  BFB3               	btfsc	(printf@prec+1)& (0+255),7,b
  7266  0004D8  D009               	goto	l689
  7267  0004DA  51B3               	movf	(printf@prec+1)& (0+255),w,b
  7268  0004DC  E104               	bnz	u3930
  7269  0004DE  0E09               	movlw	9
  7270  0004E0  5DB2               	subwf	printf@prec& (0+255),w,b
  7271  0004E2  A0D8               	btfss	status,0,c
  7272  0004E4  D003               	goto	l689
  7273  0004E6                     u3930:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7277  0004E6  0E08               	movlw	8
  7278  0004E8  6FC2               	movwf	printf@c& (0+255),b
  7279  0004EA  D002               	goto	l4502
  7280  0004EC                     l689:
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  7284  0004EC  C0B2  F0C2         	movff	printf@prec,printf@c
  7285  0004F0                     l4502:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;doprnt.c: 1241: prec -= (int)c;
  7289  0004F0  51C2               	movf	printf@c& (0+255),w,b
  7290  0004F2  5FB2               	subwf	printf@prec& (0+255),f,b
  7291  0004F4  0E00               	movlw	0
  7292  0004F6  5BB3               	subwfb	(printf@prec+1)& (0+255),f,b
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;doprnt.c: 1245: if(c)
  7296  0004F8  51C2               	movf	printf@c& (0+255),w,b
  7297  0004FA  B4D8               	btfsc	status,2,c
  7298  0004FC  D003               	goto	l4508
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;doprnt.c: 1247: (putch('.') );
  7302  0004FE  0E2E               	movlw	46
  7303  000500  EC0E  F017         	call	_putch
  7304  000504                     l4508:
  7305                           
  7306                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  7307  000504  0100               	movlb	0	; () banked
  7308  000506  51C2               	movf	printf@c& (0+255),w,b
  7309  000508  EC44  F004         	call	_scale
  7310  00050C  C029  F0AA         	movff	?_scale,_printf$3331
  7311  000510  C02A  F0AB         	movff	?_scale+1,_printf$3331+1
  7312  000514  C02B  F0AC         	movff	?_scale+2,_printf$3331+2
  7313  000518  C02C  F0AD         	movff	?_scale+3,_printf$3331+3
  7314                           
  7315                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  7316  00051C  C0BE  F014         	movff	printf@fval,___flmul@a
  7317  000520  C0BF  F015         	movff	printf@fval+1,___flmul@a+1
  7318  000524  C0C0  F016         	movff	printf@fval+2,___flmul@a+2
  7319  000528  C0C1  F017         	movff	printf@fval+3,___flmul@a+3
  7320  00052C  C0AA  F010         	movff	_printf$3331,___flmul@b
  7321  000530  C0AB  F011         	movff	_printf$3331+1,___flmul@b+1
  7322  000534  C0AC  F012         	movff	_printf$3331+2,___flmul@b+2
  7323  000538  C0AD  F013         	movff	_printf$3331+3,___flmul@b+3
  7324  00053C  EC2C  F006         	call	___flmul	;wreg free
  7325  000540  C010  F029         	movff	?___flmul,___fltol@f1
  7326  000544  C011  F02A         	movff	?___flmul+1,___fltol@f1+1
  7327  000548  C012  F02B         	movff	?___flmul+2,___fltol@f1+2
  7328  00054C  C013  F02C         	movff	?___flmul+3,___fltol@f1+3
  7329  000550  ECE4  F011         	call	___fltol	;wreg free
  7330  000554  C029  F0BA         	movff	?___fltol,printf@val
  7331  000558  C02A  F0BB         	movff	?___fltol+1,printf@val+1
  7332  00055C  C02B  F0BC         	movff	?___fltol+2,printf@val+2
  7333  000560  C02C  F0BD         	movff	?___fltol+3,printf@val+3
  7334                           
  7335                           ;doprnt.c: 1254: while(c--) {
  7336  000564  D06C               	goto	l4518
  7337  000566                     l4512:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  7341  000566  C0BA  F002         	movff	printf@val,___lldiv@dividend
  7342  00056A  C0BB  F003         	movff	printf@val+1,___lldiv@dividend+1
  7343  00056E  C0BC  F004         	movff	printf@val+2,___lldiv@dividend+2
  7344  000572  C0BD  F005         	movff	printf@val+3,___lldiv@dividend+3
  7345  000576  51C2               	movf	printf@c& (0+255),w,b
  7346  000578  0D04               	mullw	4
  7347  00057A  0ECD               	movlw	low _dpowers
  7348  00057C  24F3               	addwf	243,w,c
  7349  00057E  6EF6               	movwf	tblptrl,c
  7350  000580  0EFE               	movlw	high _dpowers
  7351  000582  20F4               	addwfc	244,w,c
  7352  000584  6EF7               	movwf	tblptrh,c
  7353  000586                     	if	0	;There are less than 3 active tblptr bytes
  7354  000586                     	endif
  7355  000586  0009               	tblrd		*+
  7356  000588  CFF5 F006          	movff	tablat,___lldiv@divisor
  7357  00058C  0009               	tblrd		*+
  7358  00058E  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  7359  000592  0009               	tblrd		*+
  7360  000594  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  7361  000598  000A               	tblrd		*-
  7362  00059A  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  7363  00059E  ECC8  F012         	call	___lldiv	;wreg free
  7364  0005A2  C002  F0B6         	movff	?___lldiv,printf@tmpval
  7365  0005A6  C003  F0B7         	movff	?___lldiv+1,printf@tmpval+1
  7366  0005AA  C004  F0B8         	movff	?___lldiv+2,printf@tmpval+2
  7367  0005AE  C005  F0B9         	movff	?___lldiv+3,printf@tmpval+3
  7368                           
  7369                           ;doprnt.c: 1256: tmpval.vd %= 10;
  7370  0005B2  C0B6  F00F         	movff	printf@tmpval,___llmod@dividend
  7371  0005B6  C0B7  F010         	movff	printf@tmpval+1,___llmod@dividend+1
  7372  0005BA  C0B8  F011         	movff	printf@tmpval+2,___llmod@dividend+2
  7373  0005BE  C0B9  F012         	movff	printf@tmpval+3,___llmod@dividend+3
  7374  0005C2  0E0A               	movlw	10
  7375  0005C4  6E13               	movwf	___llmod@divisor^0,c
  7376  0005C6  0E00               	movlw	0
  7377  0005C8  6E14               	movwf	(___llmod@divisor+1)^0,c
  7378  0005CA  0E00               	movlw	0
  7379  0005CC  6E15               	movwf	(___llmod@divisor+2)^0,c
  7380  0005CE  0E00               	movlw	0
  7381  0005D0  6E16               	movwf	(___llmod@divisor+3)^0,c
  7382  0005D2  ECAE  F013         	call	___llmod	;wreg free
  7383  0005D6  C00F  F0B6         	movff	?___llmod,printf@tmpval
  7384  0005DA  C010  F0B7         	movff	?___llmod+1,printf@tmpval+1
  7385  0005DE  C011  F0B8         	movff	?___llmod+2,printf@tmpval+2
  7386  0005E2  C012  F0B9         	movff	?___llmod+3,printf@tmpval+3
  7387                           
  7388                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  7389  0005E6  0100               	movlb	0	; () banked
  7390  0005E8  51B6               	movf	printf@tmpval& (0+255),w,b
  7391  0005EA  0F30               	addlw	48
  7392  0005EC  EC0E  F017         	call	_putch
  7393                           
  7394                           ;doprnt.c: 1258: val %= dpowers[c];
  7395  0005F0  C0BA  F00F         	movff	printf@val,___llmod@dividend
  7396  0005F4  C0BB  F010         	movff	printf@val+1,___llmod@dividend+1
  7397  0005F8  C0BC  F011         	movff	printf@val+2,___llmod@dividend+2
  7398  0005FC  C0BD  F012         	movff	printf@val+3,___llmod@dividend+3
  7399  000600  0100               	movlb	0	; () banked
  7400  000602  51C2               	movf	printf@c& (0+255),w,b
  7401  000604  0D04               	mullw	4
  7402  000606  0ECD               	movlw	low _dpowers
  7403  000608  24F3               	addwf	243,w,c
  7404  00060A  6EF6               	movwf	tblptrl,c
  7405  00060C  0EFE               	movlw	high _dpowers
  7406  00060E  20F4               	addwfc	244,w,c
  7407  000610  6EF7               	movwf	tblptrh,c
  7408  000612                     	if	0	;There are less than 3 active tblptr bytes
  7409  000612                     	endif
  7410  000612  0009               	tblrd		*+
  7411  000614  CFF5 F013          	movff	tablat,___llmod@divisor
  7412  000618  0009               	tblrd		*+
  7413  00061A  CFF5 F014          	movff	tablat,___llmod@divisor+1
  7414  00061E  0009               	tblrd		*+
  7415  000620  CFF5 F015          	movff	tablat,___llmod@divisor+2
  7416  000624  000A               	tblrd		*-
  7417  000626  CFF5 F016          	movff	tablat,___llmod@divisor+3
  7418  00062A  ECAE  F013         	call	___llmod	;wreg free
  7419  00062E  C00F  F0BA         	movff	?___llmod,printf@val
  7420  000632  C010  F0BB         	movff	?___llmod+1,printf@val+1
  7421  000636  C011  F0BC         	movff	?___llmod+2,printf@val+2
  7422  00063A  C012  F0BD         	movff	?___llmod+3,printf@val+3
  7423  00063E                     l4518:
  7424  00063E  0100               	movlb	0	; () banked
  7425  000640  07C2               	decf	printf@c& (0+255),f,b
  7426  000642  29C2               	incf	printf@c& (0+255),w,b
  7427  000644  B4D8               	btfsc	status,2,c
  7428  000646  D008               	goto	l4524
  7429  000648  D78E               	goto	l4512
  7430  00064A                     l4520:
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;doprnt.c: 1262: (putch('0') );
  7434  00064A  0E30               	movlw	48
  7435  00064C  EC0E  F017         	call	_putch
  7436                           
  7437                           ;doprnt.c: 1263: prec--;
  7438  000650  0100               	movlb	0	; () banked
  7439  000652  07B2               	decf	printf@prec& (0+255),f,b
  7440  000654  A0D8               	btfss	status,0,c
  7441  000656  07B3               	decf	(printf@prec+1)& (0+255),f,b
  7442  000658                     l4524:
  7443                           
  7444                           ; BSR set to: 0
  7445  000658  51B2               	movf	printf@prec& (0+255),w,b
  7446  00065A  11B3               	iorwf	(printf@prec+1)& (0+255),w,b
  7447  00065C  B4D8               	btfsc	status,2,c
  7448  00065E  D105               	goto	u4040
  7449  000660  D7F4               	goto	l4520
  7450  000662                     l661:
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & 0x80) == 0x00)
  7454  000662  BFB0               	btfsc	printf@flag& (0+255),7,b
  7455  000664  D01B               	goto	l4536
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)ap),
      +                           (int)0));
  7459  000666  51AF               	movf	printf@ap& (0+255),w,b
  7460  000668  6ED9               	movwf	fsr2l,c
  7461  00066A  6ADA               	clrf	fsr2h,c
  7462  00066C  CFDE F0BA          	movff	postinc2,printf@val
  7463  000670  CFDD F0BB          	movff	postdec2,printf@val+1
  7464  000674  0E00               	movlw	0
  7465  000676  BFBB               	btfsc	(printf@val+1)& (0+255),7,b
  7466  000678  0EFF               	movlw	-1
  7467  00067A  6FBC               	movwf	(printf@val+2)& (0+255),b
  7468  00067C  6FBD               	movwf	(printf@val+3)& (0+255),b
  7469                           
  7470                           ; BSR set to: 0
  7471  00067E  0E02               	movlw	2
  7472  000680  27AF               	addwf	printf@ap& (0+255),f,b
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;doprnt.c: 1287: if((long)val < 0) {
  7476  000682  AFBD               	btfss	(printf@val+3)& (0+255),7,b
  7477  000684  D057               	goto	l4570
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;doprnt.c: 1288: flag |= 0x03;
  7481  000686  0E03               	movlw	3
  7482  000688  13B0               	iorwf	printf@flag& (0+255),f,b
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;doprnt.c: 1289: val = -val;
  7486  00068A  1FBD               	comf	(printf@val+3)& (0+255),f,b
  7487  00068C  1FBC               	comf	(printf@val+2)& (0+255),f,b
  7488  00068E  1FBB               	comf	(printf@val+1)& (0+255),f,b
  7489  000690  6DBA               	negf	printf@val& (0+255),b
  7490  000692  0E00               	movlw	0
  7491  000694  23BB               	addwfc	(printf@val+1)& (0+255),f,b
  7492  000696  23BC               	addwfc	(printf@val+2)& (0+255),f,b
  7493  000698  23BD               	addwfc	(printf@val+3)& (0+255),f,b
  7494  00069A  D04C               	goto	l4570
  7495  00069C                     l4536:
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  7499  00069C  51AF               	movf	printf@ap& (0+255),w,b
  7500  00069E  6ED9               	movwf	fsr2l,c
  7501  0006A0  6ADA               	clrf	fsr2h,c
  7502  0006A2  CFDE F056          	movff	postinc2,??_printf
  7503  0006A6  CFDD F057          	movff	postdec2,??_printf+1
  7504  0006AA  C056  F0BA         	movff	??_printf,printf@val
  7505  0006AE  C057  F0BB         	movff	??_printf+1,printf@val+1
  7506  0006B2  6BBC               	clrf	(printf@val+2)& (0+255),b
  7507  0006B4  6BBD               	clrf	(printf@val+3)& (0+255),b
  7508                           
  7509                           ; BSR set to: 0
  7510  0006B6  0E02               	movlw	2
  7511  0006B8  27AF               	addwf	printf@ap& (0+255),f,b
  7512  0006BA  D03C               	goto	l4570
  7513  0006BC                     l4540:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7517  0006BC  0E01               	movlw	1
  7518  0006BE  6FC2               	movwf	printf@c& (0+255),b
  7519  0006C0                     l4546:
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;doprnt.c: 1332: if(val < dpowers[c])
  7523  0006C0  51C2               	movf	printf@c& (0+255),w,b
  7524  0006C2  0D04               	mullw	4
  7525  0006C4  0ECD               	movlw	low _dpowers
  7526  0006C6  24F3               	addwf	243,w,c
  7527  0006C8  6EF6               	movwf	tblptrl,c
  7528  0006CA  0EFE               	movlw	high _dpowers
  7529  0006CC  20F4               	addwfc	244,w,c
  7530  0006CE  6EF7               	movwf	tblptrh,c
  7531  0006D0                     	if	0	;There are less than 3 active tblptr bytes
  7532  0006D0                     	endif
  7533  0006D0  0009               	tblrd		*+
  7534  0006D2  50F5               	movf	tablat,w,c
  7535  0006D4  5DBA               	subwf	printf@val& (0+255),w,b
  7536  0006D6  0009               	tblrd		*+
  7537  0006D8  50F5               	movf	tablat,w,c
  7538  0006DA  59BB               	subwfb	(printf@val+1)& (0+255),w,b
  7539  0006DC  0009               	tblrd		*+
  7540  0006DE  50F5               	movf	tablat,w,c
  7541  0006E0  59BC               	subwfb	(printf@val+2)& (0+255),w,b
  7542  0006E2  0009               	tblrd		*+
  7543  0006E4  50F5               	movf	tablat,w,c
  7544  0006E6  59BD               	subwfb	(printf@val+3)& (0+255),w,b
  7545  0006E8  A0D8               	btfss	status,0,c
  7546  0006EA  D02C               	goto	l4572
  7547                           
  7548                           ; BSR set to: 0
  7549  0006EC  2BC2               	incf	printf@c& (0+255),f,b
  7550                           
  7551                           ; BSR set to: 0
  7552  0006EE  0E0A               	movlw	10
  7553  0006F0  19C2               	xorwf	printf@c& (0+255),w,b
  7554  0006F2  B4D8               	btfsc	status,2,c
  7555  0006F4  D027               	goto	l4572
  7556  0006F6  D7E4               	goto	l4546
  7557  0006F8                     l4554:
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7561  0006F8  0E01               	movlw	1
  7562  0006FA  6FC2               	movwf	printf@c& (0+255),b
  7563  0006FC                     l4560:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;doprnt.c: 1343: if(val < hexpowers[c])
  7567  0006FC  51C2               	movf	printf@c& (0+255),w,b
  7568  0006FE  0D04               	mullw	4
  7569  000700  0EAD               	movlw	low _hexpowers
  7570  000702  24F3               	addwf	243,w,c
  7571  000704  6EF6               	movwf	tblptrl,c
  7572  000706  0EFE               	movlw	high _hexpowers
  7573  000708  20F4               	addwfc	244,w,c
  7574  00070A  6EF7               	movwf	tblptrh,c
  7575  00070C                     	if	0	;There are less than 3 active tblptr bytes
  7576  00070C                     	endif
  7577  00070C  0009               	tblrd		*+
  7578  00070E  50F5               	movf	tablat,w,c
  7579  000710  5DBA               	subwf	printf@val& (0+255),w,b
  7580  000712  0009               	tblrd		*+
  7581  000714  50F5               	movf	tablat,w,c
  7582  000716  59BB               	subwfb	(printf@val+1)& (0+255),w,b
  7583  000718  0009               	tblrd		*+
  7584  00071A  50F5               	movf	tablat,w,c
  7585  00071C  59BC               	subwfb	(printf@val+2)& (0+255),w,b
  7586  00071E  0009               	tblrd		*+
  7587  000720  50F5               	movf	tablat,w,c
  7588  000722  59BD               	subwfb	(printf@val+3)& (0+255),w,b
  7589  000724  A0D8               	btfss	status,0,c
  7590  000726  D00E               	goto	l4572
  7591                           
  7592                           ; BSR set to: 0
  7593  000728  2BC2               	incf	printf@c& (0+255),f,b
  7594                           
  7595                           ; BSR set to: 0
  7596  00072A  0E08               	movlw	8
  7597  00072C  19C2               	xorwf	printf@c& (0+255),w,b
  7598  00072E  B4D8               	btfsc	status,2,c
  7599  000730  D009               	goto	l4572
  7600  000732  D7E4               	goto	l4560
  7601  000734                     l4570:
  7602                           
  7603                           ; BSR set to: 0
  7604  000734  51B0               	movf	printf@flag& (0+255),w,b
  7605  000736  0B80               	andlw	128
  7606                           
  7607                           ; Switch size 1, requested type "simple"
  7608                           ; Number of cases is 2, Range of values is 0 to 128
  7609                           ; switch strategies available:
  7610                           ; Name         Instructions Cycles
  7611                           ; simple_byte            7     4 (average)
  7612                           ;	Chosen strategy is simple_byte
  7613  000738  0A00               	xorlw	0	; case 0
  7614  00073A  B4D8               	btfsc	status,2,c
  7615  00073C  D7BF               	goto	l4540
  7616  00073E  0A80               	xorlw	128	; case 128
  7617  000740  B4D8               	btfsc	status,2,c
  7618  000742  D7DA               	goto	l4554
  7619  000744                     l4572:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  7623  000744  C0B0  F056         	movff	printf@flag,??_printf
  7624  000748  0E03               	movlw	3
  7625  00074A  1656               	andwf	??_printf^0,f,c
  7626  00074C  B4D8               	btfsc	status,2,c
  7627  00074E  D003               	goto	l4576
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;doprnt.c: 1465: (putch('-') );
  7631  000750  0E2D               	movlw	45
  7632  000752  EC0E  F017         	call	_putch
  7633  000756                     l4576:
  7634                           
  7635                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  7636  000756  C0C2  F0B2         	movff	printf@c,printf@prec
  7637  00075A  0100               	movlb	0	; () banked
  7638  00075C  6BB3               	clrf	(printf@prec+1)& (0+255),b
  7639                           
  7640                           ;doprnt.c: 1500: while(prec--) {
  7641  00075E  D07C               	goto	l4590
  7642  000760                     l4578:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  7646  000760  C0B2  F056         	movff	printf@prec,??_printf
  7647  000764  C0B3  F057         	movff	printf@prec+1,??_printf+1
  7648  000768  90D8               	bcf	status,0,c
  7649  00076A  3656               	rlcf	??_printf^0,f,c
  7650  00076C  3657               	rlcf	(??_printf+1)^0,f,c
  7651  00076E  90D8               	bcf	status,0,c
  7652  000770  3656               	rlcf	??_printf^0,f,c
  7653  000772  3657               	rlcf	(??_printf+1)^0,f,c
  7654  000774  0ECD               	movlw	low _dpowers
  7655  000776  2456               	addwf	??_printf^0,w,c
  7656  000778  6EF6               	movwf	tblptrl,c
  7657  00077A  0EFE               	movlw	high _dpowers
  7658  00077C  2057               	addwfc	(??_printf+1)^0,w,c
  7659  00077E  6EF7               	movwf	tblptrh,c
  7660  000780                     	if	0	;There are less than 3 active tblptr bytes
  7661  000780                     	endif
  7662  000780  0009               	tblrd		*+
  7663  000782  CFF5 F006          	movff	tablat,___lldiv@divisor
  7664  000786  0009               	tblrd		*+
  7665  000788  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  7666  00078C  0009               	tblrd		*+
  7667  00078E  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  7668  000792  000A               	tblrd		*-
  7669  000794  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  7670  000798  C0BA  F002         	movff	printf@val,___lldiv@dividend
  7671  00079C  C0BB  F003         	movff	printf@val+1,___lldiv@dividend+1
  7672  0007A0  C0BC  F004         	movff	printf@val+2,___lldiv@dividend+2
  7673  0007A4  C0BD  F005         	movff	printf@val+3,___lldiv@dividend+3
  7674  0007A8  ECC8  F012         	call	___lldiv	;wreg free
  7675  0007AC  C002  F00F         	movff	?___lldiv,___llmod@dividend
  7676  0007B0  C003  F010         	movff	?___lldiv+1,___llmod@dividend+1
  7677  0007B4  C004  F011         	movff	?___lldiv+2,___llmod@dividend+2
  7678  0007B8  C005  F012         	movff	?___lldiv+3,___llmod@dividend+3
  7679  0007BC  0E0A               	movlw	10
  7680  0007BE  6E13               	movwf	___llmod@divisor^0,c
  7681  0007C0  0E00               	movlw	0
  7682  0007C2  6E14               	movwf	(___llmod@divisor+1)^0,c
  7683  0007C4  0E00               	movlw	0
  7684  0007C6  6E15               	movwf	(___llmod@divisor+2)^0,c
  7685  0007C8  0E00               	movlw	0
  7686  0007CA  6E16               	movwf	(___llmod@divisor+3)^0,c
  7687  0007CC  ECAE  F013         	call	___llmod	;wreg free
  7688  0007D0  500F               	movf	?___llmod^0,w,c
  7689  0007D2  0F30               	addlw	48
  7690  0007D4  0100               	movlb	0	; () banked
  7691  0007D6  6FC2               	movwf	printf@c& (0+255),b
  7692                           
  7693                           ;doprnt.c: 1517: break;
  7694  0007D8  D03C               	goto	l4588
  7695  0007DA                     l4580:
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  7699  0007DA  C0BA  F002         	movff	printf@val,___lldiv@dividend
  7700  0007DE  C0BB  F003         	movff	printf@val+1,___lldiv@dividend+1
  7701  0007E2  C0BC  F004         	movff	printf@val+2,___lldiv@dividend+2
  7702  0007E6  C0BD  F005         	movff	printf@val+3,___lldiv@dividend+3
  7703  0007EA  C0B2  F056         	movff	printf@prec,??_printf
  7704  0007EE  C0B3  F057         	movff	printf@prec+1,??_printf+1
  7705  0007F2  90D8               	bcf	status,0,c
  7706  0007F4  3656               	rlcf	??_printf^0,f,c
  7707  0007F6  3657               	rlcf	(??_printf+1)^0,f,c
  7708  0007F8  90D8               	bcf	status,0,c
  7709  0007FA  3656               	rlcf	??_printf^0,f,c
  7710  0007FC  3657               	rlcf	(??_printf+1)^0,f,c
  7711  0007FE  0EAD               	movlw	low _hexpowers
  7712  000800  2456               	addwf	??_printf^0,w,c
  7713  000802  6EF6               	movwf	tblptrl,c
  7714  000804  0EFE               	movlw	high _hexpowers
  7715  000806  2057               	addwfc	(??_printf+1)^0,w,c
  7716  000808  6EF7               	movwf	tblptrh,c
  7717  00080A                     	if	0	;There are less than 3 active tblptr bytes
  7718  00080A                     	endif
  7719  00080A  0009               	tblrd		*+
  7720  00080C  CFF5 F006          	movff	tablat,___lldiv@divisor
  7721  000810  0009               	tblrd		*+
  7722  000812  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  7723  000816  0009               	tblrd		*+
  7724  000818  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  7725  00081C  000A               	tblrd		*-
  7726  00081E  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  7727  000822  ECC8  F012         	call	___lldiv	;wreg free
  7728  000826  5002               	movf	?___lldiv^0,w,c
  7729  000828  0B0F               	andlw	15
  7730  00082A  0100               	movlb	0	; () banked
  7731  00082C  6FAE               	movwf	printf@idx& (0+255),b
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;doprnt.c: 1530: c = "0123456789ABCDEF"[idx];
  7735  00082E  0E3B               	movlw	low STR_25
  7736  000830  25AE               	addwf	printf@idx& (0+255),w,b
  7737  000832  6EF6               	movwf	tblptrl,c
  7738  000834  6AF7               	clrf	tblptrh,c
  7739  000836  0EFF               	movlw	high STR_25
  7740  000838  22F7               	addwfc	tblptrh,f,c
  7741  00083A                     	if	0	;There are less than 3 active tblptr bytes
  7742  00083A                     	endif
  7743  00083A  0008               	tblrd		*
  7744  00083C  CFF5 F0C2          	movff	tablat,printf@c
  7745                           
  7746                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  7747  000840  D008               	goto	l4588
  7748  000842                     l4586:
  7749                           
  7750                           ; BSR set to: 0
  7751  000842  51B0               	movf	printf@flag& (0+255),w,b
  7752  000844  0B80               	andlw	128
  7753                           
  7754                           ; Switch size 1, requested type "simple"
  7755                           ; Number of cases is 2, Range of values is 0 to 128
  7756                           ; switch strategies available:
  7757                           ; Name         Instructions Cycles
  7758                           ; simple_byte            7     4 (average)
  7759                           ;	Chosen strategy is simple_byte
  7760  000846  0A00               	xorlw	0	; case 0
  7761  000848  B4D8               	btfsc	status,2,c
  7762  00084A  D78A               	goto	l4578
  7763  00084C  0A80               	xorlw	128	; case 128
  7764  00084E  B4D8               	btfsc	status,2,c
  7765  000850  D7C4               	goto	l4580
  7766  000852                     l4588:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;doprnt.c: 1550: (putch(c) );
  7770  000852  51C2               	movf	printf@c& (0+255),w,b
  7771  000854  EC0E  F017         	call	_putch
  7772  000858                     l4590:
  7773  000858  0100               	movlb	0	; () banked
  7774  00085A  07B2               	decf	printf@prec& (0+255),f,b
  7775  00085C  A0D8               	btfss	status,0,c
  7776  00085E  07B3               	decf	(printf@prec+1)& (0+255),f,b
  7777  000860  29B2               	incf	printf@prec& (0+255),w,b
  7778  000862  E1EF               	bnz	l4586
  7779  000864  29B3               	incf	(printf@prec+1)& (0+255),w,b
  7780  000866  A4D8               	btfss	status,2,c
  7781  000868  D7EC               	goto	l4586
  7782  00086A                     u4040:
  7783  00086A  C050  FFF6         	movff	printf@f,tblptrl
  7784  00086E  C051  FFF7         	movff	printf@f+1,tblptrh
  7785  000872  4A50               	infsnz	printf@f^0,f,c
  7786  000874  2A51               	incf	(printf@f+1)^0,f,c
  7787  000876                     	if	0	;tblptru may be non-zero
  7788  000876                     	endif
  7789  000876                     	if	0	;tblptru may be non-zero
  7790  000876                     	endif
  7791  000876  0008               	tblrd		*
  7792  000878  CFF5 F0C2          	movff	tablat,printf@c
  7793  00087C  0100               	movlb	0	; () banked
  7794  00087E  51C2               	movf	printf@c& (0+255),w,b
  7795  000880  B4D8               	btfsc	status,2,c
  7796  000882  0012               	return	
  7797  000884  EF1D  F000         	goto	l4380
  7798  000888                     __end_of_printf:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function _scale *****************
  7802 ;; Defined at:
  7803 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  scl             1    wreg     char 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  scl             1   48[COMRAM] char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  4   40[COMRAM] char 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 3F/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7818 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;Total ram usage:        9 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    2
  7824 ;; This function calls:
  7825 ;;		___awdiv
  7826 ;;		___awmod
  7827 ;;		___flmul
  7828 ;; This function is called by:
  7829 ;;		_printf
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text44
  7834  000888                     __ptext44:
  7835                           	callstack 0
  7836  000888                     _scale:
  7837                           	callstack 26
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;incstack = 0
  7841                           ;scale@scl stored from wreg
  7842  000888  6E31               	movwf	scale@scl^0,c
  7843                           
  7844                           ;doprnt.c: 436: if(scl < 0) {
  7845  00088A  AE31               	btfss	scale@scl^0,7,c
  7846  00088C  D0F3               	goto	l4058
  7847                           
  7848                           ;doprnt.c: 437: scl = -scl;
  7849  00088E  6C31               	negf	scale@scl^0,c
  7850                           
  7851                           ;doprnt.c: 438: if(scl>=110)
  7852  000890  5031               	movf	scale@scl^0,w,c
  7853  000892  0A80               	xorlw	128
  7854  000894  0F12               	addlw	-238
  7855  000896  A0D8               	btfss	status,0,c
  7856  000898  D088               	goto	l4048
  7857                           
  7858                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7859  00089A  0E00               	movlw	0
  7860  00089C  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7861  00089E  0E0A               	movlw	10
  7862  0008A0  6E0A               	movwf	___awdiv@divisor^0,c
  7863  0008A2  0E00               	movlw	0
  7864  0008A4  6E05               	movwf	(___awmod@divisor+1)^0,c
  7865  0008A6  0E64               	movlw	100
  7866  0008A8  6E04               	movwf	___awmod@divisor^0,c
  7867  0008AA  5031               	movf	scale@scl^0,w,c
  7868  0008AC  6E02               	movwf	___awmod@dividend^0,c
  7869  0008AE  6A03               	clrf	(___awmod@dividend+1)^0,c
  7870  0008B0  BE02               	btfsc	___awmod@dividend^0,7,c
  7871  0008B2  0603               	decf	(___awmod@dividend+1)^0,f,c
  7872  0008B4  EC43  F013         	call	___awmod	;wreg free
  7873  0008B8  C002  F008         	movff	?___awmod,___awdiv@dividend
  7874  0008BC  C003  F009         	movff	?___awmod+1,___awdiv@dividend+1
  7875  0008C0  EC86  F012         	call	___awdiv	;wreg free
  7876  0008C4  0E09               	movlw	9
  7877  0008C6  2608               	addwf	?___awdiv^0,f,c
  7878  0008C8  5008               	movf	?___awdiv^0,w,c
  7879  0008CA  0D04               	mullw	4
  7880  0008CC  0E79               	movlw	low __npowers_
  7881  0008CE  24F3               	addwf	243,w,c
  7882  0008D0  6EF6               	movwf	tblptrl,c
  7883  0008D2  0EFE               	movlw	high __npowers_
  7884  0008D4  20F4               	addwfc	244,w,c
  7885  0008D6  6EF7               	movwf	tblptrh,c
  7886  0008D8                     	if	0	;There are less than 3 active tblptr bytes
  7887  0008D8                     	endif
  7888  0008D8  0009               	tblrd		*+
  7889  0008DA  CFF5 F014          	movff	tablat,___flmul@a
  7890  0008DE  0009               	tblrd		*+
  7891  0008E0  CFF5 F015          	movff	tablat,___flmul@a+1
  7892  0008E4  0009               	tblrd		*+
  7893  0008E6  CFF5 F016          	movff	tablat,___flmul@a+2
  7894  0008EA  000A               	tblrd		*-
  7895  0008EC  CFF5 F017          	movff	tablat,___flmul@a+3
  7896  0008F0  0E00               	movlw	0
  7897  0008F2  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7898  0008F4  0E64               	movlw	100
  7899  0008F6  6E0A               	movwf	___awdiv@divisor^0,c
  7900  0008F8  5031               	movf	scale@scl^0,w,c
  7901  0008FA  6E08               	movwf	___awdiv@dividend^0,c
  7902  0008FC  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7903  0008FE  BE08               	btfsc	___awdiv@dividend^0,7,c
  7904  000900  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7905  000902  EC86  F012         	call	___awdiv	;wreg free
  7906  000906  0E12               	movlw	18
  7907  000908  2608               	addwf	?___awdiv^0,f,c
  7908  00090A  5008               	movf	?___awdiv^0,w,c
  7909  00090C  0D04               	mullw	4
  7910  00090E  0E79               	movlw	low __npowers_
  7911  000910  24F3               	addwf	243,w,c
  7912  000912  6EF6               	movwf	tblptrl,c
  7913  000914  0EFE               	movlw	high __npowers_
  7914  000916  20F4               	addwfc	244,w,c
  7915  000918  6EF7               	movwf	tblptrh,c
  7916  00091A                     	if	0	;There are less than 3 active tblptr bytes
  7917  00091A                     	endif
  7918  00091A  0009               	tblrd		*+
  7919  00091C  CFF5 F010          	movff	tablat,___flmul@b
  7920  000920  0009               	tblrd		*+
  7921  000922  CFF5 F011          	movff	tablat,___flmul@b+1
  7922  000926  0009               	tblrd		*+
  7923  000928  CFF5 F012          	movff	tablat,___flmul@b+2
  7924  00092C  000A               	tblrd		*-
  7925  00092E  CFF5 F013          	movff	tablat,___flmul@b+3
  7926  000932  EC2C  F006         	call	___flmul	;wreg free
  7927  000936  C010  F02D         	movff	?___flmul,_scale$3330
  7928  00093A  C011  F02E         	movff	?___flmul+1,_scale$3330+1
  7929  00093E  C012  F02F         	movff	?___flmul+2,_scale$3330+2
  7930  000942  C013  F030         	movff	?___flmul+3,_scale$3330+3
  7931                           
  7932                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7933  000946  C02D  F010         	movff	_scale$3330,___flmul@b
  7934  00094A  C02E  F011         	movff	_scale$3330+1,___flmul@b+1
  7935  00094E  C02F  F012         	movff	_scale$3330+2,___flmul@b+2
  7936  000952  C030  F013         	movff	_scale$3330+3,___flmul@b+3
  7937  000956  0E00               	movlw	0
  7938  000958  6E05               	movwf	(___awmod@divisor+1)^0,c
  7939  00095A  0E0A               	movlw	10
  7940  00095C  6E04               	movwf	___awmod@divisor^0,c
  7941  00095E  5031               	movf	scale@scl^0,w,c
  7942  000960  6E02               	movwf	___awmod@dividend^0,c
  7943  000962  6A03               	clrf	(___awmod@dividend+1)^0,c
  7944  000964  BE02               	btfsc	___awmod@dividend^0,7,c
  7945  000966  0603               	decf	(___awmod@dividend+1)^0,f,c
  7946  000968  EC43  F013         	call	___awmod	;wreg free
  7947  00096C  5002               	movf	?___awmod^0,w,c
  7948  00096E  0D04               	mullw	4
  7949  000970  0E79               	movlw	low __npowers_
  7950  000972  24F3               	addwf	243,w,c
  7951  000974  6EF6               	movwf	tblptrl,c
  7952  000976  0EFE               	movlw	high __npowers_
  7953  000978  20F4               	addwfc	244,w,c
  7954  00097A  6EF7               	movwf	tblptrh,c
  7955  00097C                     	if	0	;There are less than 3 active tblptr bytes
  7956  00097C                     	endif
  7957  00097C  0009               	tblrd		*+
  7958  00097E  CFF5 F014          	movff	tablat,___flmul@a
  7959  000982  0009               	tblrd		*+
  7960  000984  CFF5 F015          	movff	tablat,___flmul@a+1
  7961  000988  0009               	tblrd		*+
  7962  00098A  CFF5 F016          	movff	tablat,___flmul@a+2
  7963  00098E  000A               	tblrd		*-
  7964  000990  CFF5 F017          	movff	tablat,___flmul@a+3
  7965  000994  EC2C  F006         	call	___flmul	;wreg free
  7966  000998  C010  F029         	movff	?___flmul,?_scale
  7967  00099C  C011  F02A         	movff	?___flmul+1,?_scale+1
  7968  0009A0  C012  F02B         	movff	?___flmul+2,?_scale+2
  7969  0009A4  C013  F02C         	movff	?___flmul+3,?_scale+3
  7970  0009A8  0012               	return	
  7971  0009AA                     l4048:
  7972                           
  7973                           ;doprnt.c: 440: else if(scl > 10)
  7974  0009AA  5031               	movf	scale@scl^0,w,c
  7975  0009AC  0A80               	xorlw	128
  7976  0009AE  0F75               	addlw	-139
  7977  0009B0  A0D8               	btfss	status,0,c
  7978  0009B2  D04B               	goto	l4054
  7979                           
  7980                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  7981  0009B4  0E00               	movlw	0
  7982  0009B6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7983  0009B8  0E0A               	movlw	10
  7984  0009BA  6E0A               	movwf	___awdiv@divisor^0,c
  7985  0009BC  5031               	movf	scale@scl^0,w,c
  7986  0009BE  6E08               	movwf	___awdiv@dividend^0,c
  7987  0009C0  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7988  0009C2  BE08               	btfsc	___awdiv@dividend^0,7,c
  7989  0009C4  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7990  0009C6  EC86  F012         	call	___awdiv	;wreg free
  7991  0009CA  0E09               	movlw	9
  7992  0009CC  2608               	addwf	?___awdiv^0,f,c
  7993  0009CE  5008               	movf	?___awdiv^0,w,c
  7994  0009D0  0D04               	mullw	4
  7995  0009D2  0E79               	movlw	low __npowers_
  7996  0009D4  24F3               	addwf	243,w,c
  7997  0009D6  6EF6               	movwf	tblptrl,c
  7998  0009D8  0EFE               	movlw	high __npowers_
  7999  0009DA  20F4               	addwfc	244,w,c
  8000  0009DC  6EF7               	movwf	tblptrh,c
  8001  0009DE                     	if	0	;There are less than 3 active tblptr bytes
  8002  0009DE                     	endif
  8003  0009DE  0009               	tblrd		*+
  8004  0009E0  CFF5 F010          	movff	tablat,___flmul@b
  8005  0009E4  0009               	tblrd		*+
  8006  0009E6  CFF5 F011          	movff	tablat,___flmul@b+1
  8007  0009EA  0009               	tblrd		*+
  8008  0009EC  CFF5 F012          	movff	tablat,___flmul@b+2
  8009  0009F0  000A               	tblrd		*-
  8010  0009F2  CFF5 F013          	movff	tablat,___flmul@b+3
  8011  0009F6  0E00               	movlw	0
  8012  0009F8  6E05               	movwf	(___awmod@divisor+1)^0,c
  8013  0009FA  0E0A               	movlw	10
  8014  0009FC  6E04               	movwf	___awmod@divisor^0,c
  8015  0009FE  5031               	movf	scale@scl^0,w,c
  8016  000A00  6E02               	movwf	___awmod@dividend^0,c
  8017  000A02  6A03               	clrf	(___awmod@dividend+1)^0,c
  8018  000A04  BE02               	btfsc	___awmod@dividend^0,7,c
  8019  000A06  0603               	decf	(___awmod@dividend+1)^0,f,c
  8020  000A08  EC43  F013         	call	___awmod	;wreg free
  8021  000A0C  5002               	movf	?___awmod^0,w,c
  8022  000A0E  0D04               	mullw	4
  8023  000A10  0E79               	movlw	low __npowers_
  8024  000A12  24F3               	addwf	243,w,c
  8025  000A14  6EF6               	movwf	tblptrl,c
  8026  000A16  0EFE               	movlw	high __npowers_
  8027  000A18  20F4               	addwfc	244,w,c
  8028  000A1A  6EF7               	movwf	tblptrh,c
  8029  000A1C                     	if	0	;There are less than 3 active tblptr bytes
  8030  000A1C                     	endif
  8031  000A1C  0009               	tblrd		*+
  8032  000A1E  CFF5 F014          	movff	tablat,___flmul@a
  8033  000A22  0009               	tblrd		*+
  8034  000A24  CFF5 F015          	movff	tablat,___flmul@a+1
  8035  000A28  0009               	tblrd		*+
  8036  000A2A  CFF5 F016          	movff	tablat,___flmul@a+2
  8037  000A2E  000A               	tblrd		*-
  8038  000A30  CFF5 F017          	movff	tablat,___flmul@a+3
  8039  000A34  EC2C  F006         	call	___flmul	;wreg free
  8040  000A38  C010  F029         	movff	?___flmul,?_scale
  8041  000A3C  C011  F02A         	movff	?___flmul+1,?_scale+1
  8042  000A40  C012  F02B         	movff	?___flmul+2,?_scale+2
  8043  000A44  C013  F02C         	movff	?___flmul+3,?_scale+3
  8044  000A48  0012               	return	
  8045  000A4A                     l4054:
  8046                           
  8047                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  8048  000A4A  5031               	movf	scale@scl^0,w,c
  8049  000A4C  0D04               	mullw	4
  8050  000A4E  0E79               	movlw	low __npowers_
  8051  000A50  24F3               	addwf	243,w,c
  8052  000A52  6EF6               	movwf	tblptrl,c
  8053  000A54  0EFE               	movlw	high __npowers_
  8054  000A56  20F4               	addwfc	244,w,c
  8055  000A58  6EF7               	movwf	tblptrh,c
  8056  000A5A                     	if	0	;There are less than 3 active tblptr bytes
  8057  000A5A                     	endif
  8058  000A5A  0009               	tblrd		*+
  8059  000A5C  CFF5 F029          	movff	tablat,?_scale
  8060  000A60  0009               	tblrd		*+
  8061  000A62  CFF5 F02A          	movff	tablat,?_scale+1
  8062  000A66  0009               	tblrd		*+
  8063  000A68  CFF5 F02B          	movff	tablat,?_scale+2
  8064  000A6C  000A               	tblrd		*-
  8065  000A6E  CFF5 F02C          	movff	tablat,?_scale+3
  8066  000A72  0012               	return	
  8067  000A74                     l4058:
  8068                           
  8069                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  8070  000A74  5031               	movf	scale@scl^0,w,c
  8071  000A76  0A80               	xorlw	128
  8072  000A78  0F12               	addlw	-238
  8073  000A7A  A0D8               	btfss	status,0,c
  8074  000A7C  D088               	goto	l4066
  8075                           
  8076                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  8077  000A7E  0E00               	movlw	0
  8078  000A80  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  8079  000A82  0E0A               	movlw	10
  8080  000A84  6E0A               	movwf	___awdiv@divisor^0,c
  8081  000A86  0E00               	movlw	0
  8082  000A88  6E05               	movwf	(___awmod@divisor+1)^0,c
  8083  000A8A  0E64               	movlw	100
  8084  000A8C  6E04               	movwf	___awmod@divisor^0,c
  8085  000A8E  5031               	movf	scale@scl^0,w,c
  8086  000A90  6E02               	movwf	___awmod@dividend^0,c
  8087  000A92  6A03               	clrf	(___awmod@dividend+1)^0,c
  8088  000A94  BE02               	btfsc	___awmod@dividend^0,7,c
  8089  000A96  0603               	decf	(___awmod@dividend+1)^0,f,c
  8090  000A98  EC43  F013         	call	___awmod	;wreg free
  8091  000A9C  C002  F008         	movff	?___awmod,___awdiv@dividend
  8092  000AA0  C003  F009         	movff	?___awmod+1,___awdiv@dividend+1
  8093  000AA4  EC86  F012         	call	___awdiv	;wreg free
  8094  000AA8  0E09               	movlw	9
  8095  000AAA  2608               	addwf	?___awdiv^0,f,c
  8096  000AAC  5008               	movf	?___awdiv^0,w,c
  8097  000AAE  0D04               	mullw	4
  8098  000AB0  0E45               	movlw	low __powers_
  8099  000AB2  24F3               	addwf	243,w,c
  8100  000AB4  6EF6               	movwf	tblptrl,c
  8101  000AB6  0EFE               	movlw	high __powers_
  8102  000AB8  20F4               	addwfc	244,w,c
  8103  000ABA  6EF7               	movwf	tblptrh,c
  8104  000ABC                     	if	0	;There are less than 3 active tblptr bytes
  8105  000ABC                     	endif
  8106  000ABC  0009               	tblrd		*+
  8107  000ABE  CFF5 F014          	movff	tablat,___flmul@a
  8108  000AC2  0009               	tblrd		*+
  8109  000AC4  CFF5 F015          	movff	tablat,___flmul@a+1
  8110  000AC8  0009               	tblrd		*+
  8111  000ACA  CFF5 F016          	movff	tablat,___flmul@a+2
  8112  000ACE  000A               	tblrd		*-
  8113  000AD0  CFF5 F017          	movff	tablat,___flmul@a+3
  8114  000AD4  0E00               	movlw	0
  8115  000AD6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  8116  000AD8  0E64               	movlw	100
  8117  000ADA  6E0A               	movwf	___awdiv@divisor^0,c
  8118  000ADC  5031               	movf	scale@scl^0,w,c
  8119  000ADE  6E08               	movwf	___awdiv@dividend^0,c
  8120  000AE0  6A09               	clrf	(___awdiv@dividend+1)^0,c
  8121  000AE2  BE08               	btfsc	___awdiv@dividend^0,7,c
  8122  000AE4  0609               	decf	(___awdiv@dividend+1)^0,f,c
  8123  000AE6  EC86  F012         	call	___awdiv	;wreg free
  8124  000AEA  0E12               	movlw	18
  8125  000AEC  2608               	addwf	?___awdiv^0,f,c
  8126  000AEE  5008               	movf	?___awdiv^0,w,c
  8127  000AF0  0D04               	mullw	4
  8128  000AF2  0E45               	movlw	low __powers_
  8129  000AF4  24F3               	addwf	243,w,c
  8130  000AF6  6EF6               	movwf	tblptrl,c
  8131  000AF8  0EFE               	movlw	high __powers_
  8132  000AFA  20F4               	addwfc	244,w,c
  8133  000AFC  6EF7               	movwf	tblptrh,c
  8134  000AFE                     	if	0	;There are less than 3 active tblptr bytes
  8135  000AFE                     	endif
  8136  000AFE  0009               	tblrd		*+
  8137  000B00  CFF5 F010          	movff	tablat,___flmul@b
  8138  000B04  0009               	tblrd		*+
  8139  000B06  CFF5 F011          	movff	tablat,___flmul@b+1
  8140  000B0A  0009               	tblrd		*+
  8141  000B0C  CFF5 F012          	movff	tablat,___flmul@b+2
  8142  000B10  000A               	tblrd		*-
  8143  000B12  CFF5 F013          	movff	tablat,___flmul@b+3
  8144  000B16  EC2C  F006         	call	___flmul	;wreg free
  8145  000B1A  C010  F02D         	movff	?___flmul,_scale$3330
  8146  000B1E  C011  F02E         	movff	?___flmul+1,_scale$3330+1
  8147  000B22  C012  F02F         	movff	?___flmul+2,_scale$3330+2
  8148  000B26  C013  F030         	movff	?___flmul+3,_scale$3330+3
  8149                           
  8150                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  8151  000B2A  C02D  F010         	movff	_scale$3330,___flmul@b
  8152  000B2E  C02E  F011         	movff	_scale$3330+1,___flmul@b+1
  8153  000B32  C02F  F012         	movff	_scale$3330+2,___flmul@b+2
  8154  000B36  C030  F013         	movff	_scale$3330+3,___flmul@b+3
  8155  000B3A  0E00               	movlw	0
  8156  000B3C  6E05               	movwf	(___awmod@divisor+1)^0,c
  8157  000B3E  0E0A               	movlw	10
  8158  000B40  6E04               	movwf	___awmod@divisor^0,c
  8159  000B42  5031               	movf	scale@scl^0,w,c
  8160  000B44  6E02               	movwf	___awmod@dividend^0,c
  8161  000B46  6A03               	clrf	(___awmod@dividend+1)^0,c
  8162  000B48  BE02               	btfsc	___awmod@dividend^0,7,c
  8163  000B4A  0603               	decf	(___awmod@dividend+1)^0,f,c
  8164  000B4C  EC43  F013         	call	___awmod	;wreg free
  8165  000B50  5002               	movf	?___awmod^0,w,c
  8166  000B52  0D04               	mullw	4
  8167  000B54  0E45               	movlw	low __powers_
  8168  000B56  24F3               	addwf	243,w,c
  8169  000B58  6EF6               	movwf	tblptrl,c
  8170  000B5A  0EFE               	movlw	high __powers_
  8171  000B5C  20F4               	addwfc	244,w,c
  8172  000B5E  6EF7               	movwf	tblptrh,c
  8173  000B60                     	if	0	;There are less than 3 active tblptr bytes
  8174  000B60                     	endif
  8175  000B60  0009               	tblrd		*+
  8176  000B62  CFF5 F014          	movff	tablat,___flmul@a
  8177  000B66  0009               	tblrd		*+
  8178  000B68  CFF5 F015          	movff	tablat,___flmul@a+1
  8179  000B6C  0009               	tblrd		*+
  8180  000B6E  CFF5 F016          	movff	tablat,___flmul@a+2
  8181  000B72  000A               	tblrd		*-
  8182  000B74  CFF5 F017          	movff	tablat,___flmul@a+3
  8183  000B78  EC2C  F006         	call	___flmul	;wreg free
  8184  000B7C  C010  F029         	movff	?___flmul,?_scale
  8185  000B80  C011  F02A         	movff	?___flmul+1,?_scale+1
  8186  000B84  C012  F02B         	movff	?___flmul+2,?_scale+2
  8187  000B88  C013  F02C         	movff	?___flmul+3,?_scale+3
  8188  000B8C  0012               	return	
  8189  000B8E                     l4066:
  8190                           
  8191                           ;doprnt.c: 446: else if(scl > 10)
  8192  000B8E  5031               	movf	scale@scl^0,w,c
  8193  000B90  0A80               	xorlw	128
  8194  000B92  0F75               	addlw	-139
  8195  000B94  A0D8               	btfss	status,0,c
  8196  000B96  D04B               	goto	l4072
  8197                           
  8198                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  8199  000B98  0E00               	movlw	0
  8200  000B9A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  8201  000B9C  0E0A               	movlw	10
  8202  000B9E  6E0A               	movwf	___awdiv@divisor^0,c
  8203  000BA0  5031               	movf	scale@scl^0,w,c
  8204  000BA2  6E08               	movwf	___awdiv@dividend^0,c
  8205  000BA4  6A09               	clrf	(___awdiv@dividend+1)^0,c
  8206  000BA6  BE08               	btfsc	___awdiv@dividend^0,7,c
  8207  000BA8  0609               	decf	(___awdiv@dividend+1)^0,f,c
  8208  000BAA  EC86  F012         	call	___awdiv	;wreg free
  8209  000BAE  0E09               	movlw	9
  8210  000BB0  2608               	addwf	?___awdiv^0,f,c
  8211  000BB2  5008               	movf	?___awdiv^0,w,c
  8212  000BB4  0D04               	mullw	4
  8213  000BB6  0E45               	movlw	low __powers_
  8214  000BB8  24F3               	addwf	243,w,c
  8215  000BBA  6EF6               	movwf	tblptrl,c
  8216  000BBC  0EFE               	movlw	high __powers_
  8217  000BBE  20F4               	addwfc	244,w,c
  8218  000BC0  6EF7               	movwf	tblptrh,c
  8219  000BC2                     	if	0	;There are less than 3 active tblptr bytes
  8220  000BC2                     	endif
  8221  000BC2  0009               	tblrd		*+
  8222  000BC4  CFF5 F010          	movff	tablat,___flmul@b
  8223  000BC8  0009               	tblrd		*+
  8224  000BCA  CFF5 F011          	movff	tablat,___flmul@b+1
  8225  000BCE  0009               	tblrd		*+
  8226  000BD0  CFF5 F012          	movff	tablat,___flmul@b+2
  8227  000BD4  000A               	tblrd		*-
  8228  000BD6  CFF5 F013          	movff	tablat,___flmul@b+3
  8229  000BDA  0E00               	movlw	0
  8230  000BDC  6E05               	movwf	(___awmod@divisor+1)^0,c
  8231  000BDE  0E0A               	movlw	10
  8232  000BE0  6E04               	movwf	___awmod@divisor^0,c
  8233  000BE2  5031               	movf	scale@scl^0,w,c
  8234  000BE4  6E02               	movwf	___awmod@dividend^0,c
  8235  000BE6  6A03               	clrf	(___awmod@dividend+1)^0,c
  8236  000BE8  BE02               	btfsc	___awmod@dividend^0,7,c
  8237  000BEA  0603               	decf	(___awmod@dividend+1)^0,f,c
  8238  000BEC  EC43  F013         	call	___awmod	;wreg free
  8239  000BF0  5002               	movf	?___awmod^0,w,c
  8240  000BF2  0D04               	mullw	4
  8241  000BF4  0E45               	movlw	low __powers_
  8242  000BF6  24F3               	addwf	243,w,c
  8243  000BF8  6EF6               	movwf	tblptrl,c
  8244  000BFA  0EFE               	movlw	high __powers_
  8245  000BFC  20F4               	addwfc	244,w,c
  8246  000BFE  6EF7               	movwf	tblptrh,c
  8247  000C00                     	if	0	;There are less than 3 active tblptr bytes
  8248  000C00                     	endif
  8249  000C00  0009               	tblrd		*+
  8250  000C02  CFF5 F014          	movff	tablat,___flmul@a
  8251  000C06  0009               	tblrd		*+
  8252  000C08  CFF5 F015          	movff	tablat,___flmul@a+1
  8253  000C0C  0009               	tblrd		*+
  8254  000C0E  CFF5 F016          	movff	tablat,___flmul@a+2
  8255  000C12  000A               	tblrd		*-
  8256  000C14  CFF5 F017          	movff	tablat,___flmul@a+3
  8257  000C18  EC2C  F006         	call	___flmul	;wreg free
  8258  000C1C  C010  F029         	movff	?___flmul,?_scale
  8259  000C20  C011  F02A         	movff	?___flmul+1,?_scale+1
  8260  000C24  C012  F02B         	movff	?___flmul+2,?_scale+2
  8261  000C28  C013  F02C         	movff	?___flmul+3,?_scale+3
  8262  000C2C  0012               	return	
  8263  000C2E                     l4072:
  8264                           
  8265                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  8266  000C2E  5031               	movf	scale@scl^0,w,c
  8267  000C30  0D04               	mullw	4
  8268  000C32  0E45               	movlw	low __powers_
  8269  000C34  24F3               	addwf	243,w,c
  8270  000C36  6EF6               	movwf	tblptrl,c
  8271  000C38  0EFE               	movlw	high __powers_
  8272  000C3A  20F4               	addwfc	244,w,c
  8273  000C3C  6EF7               	movwf	tblptrh,c
  8274  000C3E                     	if	0	;There are less than 3 active tblptr bytes
  8275  000C3E                     	endif
  8276  000C3E  0009               	tblrd		*+
  8277  000C40  CFF5 F029          	movff	tablat,?_scale
  8278  000C44  0009               	tblrd		*+
  8279  000C46  CFF5 F02A          	movff	tablat,?_scale+1
  8280  000C4A  0009               	tblrd		*+
  8281  000C4C  CFF5 F02B          	movff	tablat,?_scale+2
  8282  000C50  000A               	tblrd		*-
  8283  000C52  CFF5 F02C          	movff	tablat,?_scale+3
  8284  000C56  0012               	return		;funcret
  8285  000C58                     __end_of_scale:
  8286                           	callstack 0
  8287                           
  8288 ;; *************** function ___awmod *****************
  8289 ;; Defined at:
  8290 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  dividend        2    1[COMRAM] int 
  8293 ;;  divisor         2    3[COMRAM] int 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  sign            1    6[COMRAM] unsigned char 
  8296 ;;  counter         1    5[COMRAM] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  2    1[COMRAM] int 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;Total ram usage:        6 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    1
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_scale
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text45
  8321  002686                     __ptext45:
  8322                           	callstack 0
  8323  002686                     ___awmod:
  8324                           	callstack 26
  8325                           
  8326                           ;incstack = 0
  8327  002686  0E00               	movlw	0
  8328  002688  6E07               	movwf	___awmod@sign^0,c
  8329  00268A  AE03               	btfss	(___awmod@dividend+1)^0,7,c
  8330  00268C  D006               	goto	l3930
  8331  00268E  6C02               	negf	___awmod@dividend^0,c
  8332  002690  1E03               	comf	(___awmod@dividend+1)^0,f,c
  8333  002692  B0D8               	btfsc	status,0,c
  8334  002694  2A03               	incf	(___awmod@dividend+1)^0,f,c
  8335  002696  0E01               	movlw	1
  8336  002698  6E07               	movwf	___awmod@sign^0,c
  8337  00269A                     l3930:
  8338  00269A  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  8339  00269C  D004               	goto	l3934
  8340  00269E  6C04               	negf	___awmod@divisor^0,c
  8341  0026A0  1E05               	comf	(___awmod@divisor+1)^0,f,c
  8342  0026A2  B0D8               	btfsc	status,0,c
  8343  0026A4  2A05               	incf	(___awmod@divisor+1)^0,f,c
  8344  0026A6                     l3934:
  8345  0026A6  5004               	movf	___awmod@divisor^0,w,c
  8346  0026A8  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  8347  0026AA  B4D8               	btfsc	status,2,c
  8348  0026AC  D018               	goto	l3950
  8349  0026AE  0E01               	movlw	1
  8350  0026B0  6E06               	movwf	___awmod@counter^0,c
  8351  0026B2  D004               	goto	l3940
  8352  0026B4                     l3938:
  8353  0026B4  90D8               	bcf	status,0,c
  8354  0026B6  3604               	rlcf	___awmod@divisor^0,f,c
  8355  0026B8  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  8356  0026BA  2A06               	incf	___awmod@counter^0,f,c
  8357  0026BC                     l3940:
  8358  0026BC  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  8359  0026BE  D7FA               	goto	l3938
  8360  0026C0                     u3090:
  8361  0026C0  5004               	movf	___awmod@divisor^0,w,c
  8362  0026C2  5C02               	subwf	___awmod@dividend^0,w,c
  8363  0026C4  5005               	movf	(___awmod@divisor+1)^0,w,c
  8364  0026C6  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  8365  0026C8  A0D8               	btfss	status,0,c
  8366  0026CA  D004               	goto	l3946
  8367  0026CC  5004               	movf	___awmod@divisor^0,w,c
  8368  0026CE  5E02               	subwf	___awmod@dividend^0,f,c
  8369  0026D0  5005               	movf	(___awmod@divisor+1)^0,w,c
  8370  0026D2  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  8371  0026D4                     l3946:
  8372  0026D4  90D8               	bcf	status,0,c
  8373  0026D6  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  8374  0026D8  3204               	rrcf	___awmod@divisor^0,f,c
  8375  0026DA  2E06               	decfsz	___awmod@counter^0,f,c
  8376  0026DC  D7F1               	goto	u3090
  8377  0026DE                     l3950:
  8378  0026DE  5007               	movf	___awmod@sign^0,w,c
  8379  0026E0  B4D8               	btfsc	status,2,c
  8380  0026E2  D004               	goto	l3954
  8381  0026E4  6C02               	negf	___awmod@dividend^0,c
  8382  0026E6  1E03               	comf	(___awmod@dividend+1)^0,f,c
  8383  0026E8  B0D8               	btfsc	status,0,c
  8384  0026EA  2A03               	incf	(___awmod@dividend+1)^0,f,c
  8385  0026EC                     l3954:
  8386  0026EC  C002  F002         	movff	___awmod@dividend,?___awmod
  8387  0026F0  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  8388  0026F4  0012               	return		;funcret
  8389  0026F6                     __end_of___awmod:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function ___awdiv *****************
  8393 ;; Defined at:
  8394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  dividend        2    7[COMRAM] int 
  8397 ;;  divisor         2    9[COMRAM] int 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  quotient        2   13[COMRAM] int 
  8400 ;;  sign            1   12[COMRAM] unsigned char 
  8401 ;;  counter         1   11[COMRAM] unsigned char 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  2    7[COMRAM] int 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;Total ram usage:        8 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; Hardware stack levels required when called:    1
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_MAX31865readData
  8422 ;;		_scale
  8423 ;;		_printf
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text46
  8428  00250C                     __ptext46:
  8429                           	callstack 0
  8430  00250C                     ___awdiv:
  8431                           	callstack 26
  8432                           
  8433                           ;incstack = 0
  8434  00250C  0E00               	movlw	0
  8435  00250E  6E0D               	movwf	___awdiv@sign^0,c
  8436  002510  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  8437  002512  D006               	goto	l3886
  8438  002514  6C0A               	negf	___awdiv@divisor^0,c
  8439  002516  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  8440  002518  B0D8               	btfsc	status,0,c
  8441  00251A  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  8442  00251C  0E01               	movlw	1
  8443  00251E  6E0D               	movwf	___awdiv@sign^0,c
  8444  002520                     l3886:
  8445  002520  AE09               	btfss	(___awdiv@dividend+1)^0,7,c
  8446  002522  D006               	goto	l3892
  8447  002524  6C08               	negf	___awdiv@dividend^0,c
  8448  002526  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  8449  002528  B0D8               	btfsc	status,0,c
  8450  00252A  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  8451  00252C  0E01               	movlw	1
  8452  00252E  1A0D               	xorwf	___awdiv@sign^0,f,c
  8453  002530                     l3892:
  8454  002530  0E00               	movlw	0
  8455  002532  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  8456  002534  0E00               	movlw	0
  8457  002536  6E0E               	movwf	___awdiv@quotient^0,c
  8458  002538  500A               	movf	___awdiv@divisor^0,w,c
  8459  00253A  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  8460  00253C  B4D8               	btfsc	status,2,c
  8461  00253E  D01C               	goto	l3914
  8462  002540  0E01               	movlw	1
  8463  002542  6E0C               	movwf	___awdiv@counter^0,c
  8464  002544  D004               	goto	l3900
  8465  002546                     l3898:
  8466  002546  90D8               	bcf	status,0,c
  8467  002548  360A               	rlcf	___awdiv@divisor^0,f,c
  8468  00254A  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  8469  00254C  2A0C               	incf	___awdiv@counter^0,f,c
  8470  00254E                     l3900:
  8471  00254E  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  8472  002550  D7FA               	goto	l3898
  8473  002552                     u3030:
  8474  002552  90D8               	bcf	status,0,c
  8475  002554  360E               	rlcf	___awdiv@quotient^0,f,c
  8476  002556  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  8477  002558  500A               	movf	___awdiv@divisor^0,w,c
  8478  00255A  5C08               	subwf	___awdiv@dividend^0,w,c
  8479  00255C  500B               	movf	(___awdiv@divisor+1)^0,w,c
  8480  00255E  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  8481  002560  A0D8               	btfss	status,0,c
  8482  002562  D005               	goto	l3910
  8483  002564  500A               	movf	___awdiv@divisor^0,w,c
  8484  002566  5E08               	subwf	___awdiv@dividend^0,f,c
  8485  002568  500B               	movf	(___awdiv@divisor+1)^0,w,c
  8486  00256A  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  8487  00256C  800E               	bsf	___awdiv@quotient^0,0,c
  8488  00256E                     l3910:
  8489  00256E  90D8               	bcf	status,0,c
  8490  002570  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  8491  002572  320A               	rrcf	___awdiv@divisor^0,f,c
  8492  002574  2E0C               	decfsz	___awdiv@counter^0,f,c
  8493  002576  D7ED               	goto	u3030
  8494  002578                     l3914:
  8495  002578  500D               	movf	___awdiv@sign^0,w,c
  8496  00257A  B4D8               	btfsc	status,2,c
  8497  00257C  D004               	goto	l3918
  8498  00257E  6C0E               	negf	___awdiv@quotient^0,c
  8499  002580  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  8500  002582  B0D8               	btfsc	status,0,c
  8501  002584  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  8502  002586                     l3918:
  8503  002586  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  8504  00258A  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  8505  00258E  0012               	return		;funcret
  8506  002590                     __end_of___awdiv:
  8507                           	callstack 0
  8508                           
  8509 ;; *************** function _putch *****************
  8510 ;; Defined at:
  8511 ;;		line 81 in file "usart2.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  data            1    wreg     unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  data            1    1[COMRAM] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;Total ram usage:        1 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:    1
  8532 ;; This function calls:
  8533 ;;		Nothing
  8534 ;; This function is called by:
  8535 ;;		_printf
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text47
  8540  002E1C                     __ptext47:
  8541                           	callstack 0
  8542  002E1C                     _putch:
  8543                           	callstack 27
  8544                           
  8545                           ;incstack = 0
  8546                           ;putch@data stored from wreg
  8547  002E1C  6E02               	movwf	putch@data^0,c
  8548  002E1E                     
  8549                           ;usart2.c: 82: while(!TRMT2){
  8550  002E1E  A272               	btfss	3954,1,c	;volatile
  8551  002E20  D7FE               	goto	l4000
  8552                           
  8553                           ;usart2.c: 83: };usart2.c: 84: TXREG2 = data;
  8554  002E22  C002  FF73         	movff	putch@data,3955	;volatile
  8555  002E26                     l266:
  8556  002E26  B272               	btfsc	3954,1,c	;volatile
  8557  002E28  0012               	return	
  8558  002E2A  D7FD               	goto	l266
  8559  002E2C                     __end_of_putch:
  8560                           	callstack 0
  8561                           
  8562 ;; *************** function _fround *****************
  8563 ;; Defined at:
  8564 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  prec            1    wreg     unsigned char 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  prec            1   54[COMRAM] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  4   40[COMRAM] unsigned char 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;Total ram usage:       15 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    2
  8585 ;; This function calls:
  8586 ;;		___flmul
  8587 ;;		___lbdiv
  8588 ;;		___lbmod
  8589 ;; This function is called by:
  8590 ;;		_printf
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text48
  8595  001518                     __ptext48:
  8596                           	callstack 0
  8597  001518                     _fround:
  8598                           	callstack 26
  8599                           
  8600                           ;incstack = 0
  8601                           ;fround@prec stored from wreg
  8602  001518  6E37               	movwf	fround@prec^0,c
  8603                           
  8604                           ;doprnt.c: 421: if(prec>=110)
  8605  00151A  0E6D               	movlw	109
  8606  00151C  6437               	cpfsgt	fround@prec^0,c
  8607  00151E  D0A0               	goto	l4028
  8608                           
  8609                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8610  001520  0E00               	movlw	0
  8611  001522  6E14               	movwf	___flmul@a^0,c
  8612  001524  0E00               	movlw	0
  8613  001526  6E15               	movwf	(___flmul@a+1)^0,c
  8614  001528  0E00               	movlw	0
  8615  00152A  6E16               	movwf	(___flmul@a+2)^0,c
  8616  00152C  0E3F               	movlw	63
  8617  00152E  6E17               	movwf	(___flmul@a+3)^0,c
  8618  001530  0E64               	movlw	100
  8619  001532  6E06               	movwf	___lbdiv@divisor^0,c
  8620  001534  5037               	movf	fround@prec^0,w,c
  8621  001536  EC84  F015         	call	___lbdiv
  8622  00153A  6E2D               	movwf	??_fround^0,c
  8623  00153C  6A2E               	clrf	(??_fround+1)^0,c
  8624  00153E  90D8               	bcf	status,0,c
  8625  001540  362D               	rlcf	??_fround^0,f,c
  8626  001542  362E               	rlcf	(??_fround+1)^0,f,c
  8627  001544  90D8               	bcf	status,0,c
  8628  001546  362D               	rlcf	??_fround^0,f,c
  8629  001548  362E               	rlcf	(??_fround+1)^0,f,c
  8630  00154A  0E48               	movlw	72
  8631  00154C  262D               	addwf	??_fround^0,f,c
  8632  00154E  0E00               	movlw	0
  8633  001550  222E               	addwfc	(??_fround+1)^0,f,c
  8634  001552  0E79               	movlw	low __npowers_
  8635  001554  242D               	addwf	??_fround^0,w,c
  8636  001556  6EF6               	movwf	tblptrl,c
  8637  001558  0EFE               	movlw	high __npowers_
  8638  00155A  202E               	addwfc	(??_fround+1)^0,w,c
  8639  00155C  6EF7               	movwf	tblptrh,c
  8640  00155E                     	if	0	;There are less than 3 active tblptr bytes
  8641  00155E                     	endif
  8642  00155E  0009               	tblrd		*+
  8643  001560  CFF5 F010          	movff	tablat,___flmul@b
  8644  001564  0009               	tblrd		*+
  8645  001566  CFF5 F011          	movff	tablat,___flmul@b+1
  8646  00156A  0009               	tblrd		*+
  8647  00156C  CFF5 F012          	movff	tablat,___flmul@b+2
  8648  001570  000A               	tblrd		*-
  8649  001572  CFF5 F013          	movff	tablat,___flmul@b+3
  8650  001576  EC2C  F006         	call	___flmul	;wreg free
  8651  00157A  C010  F033         	movff	?___flmul,_fround$3328
  8652  00157E  C011  F034         	movff	?___flmul+1,_fround$3328+1
  8653  001582  C012  F035         	movff	?___flmul+2,_fround$3328+2
  8654  001586  C013  F036         	movff	?___flmul+3,_fround$3328+3
  8655                           
  8656                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8657  00158A  0E0A               	movlw	10
  8658  00158C  6E06               	movwf	___lbdiv@divisor^0,c
  8659  00158E  0E64               	movlw	100
  8660  001590  6E02               	movwf	___lbmod@divisor^0,c
  8661  001592  5037               	movf	fround@prec^0,w,c
  8662  001594  EC49  F016         	call	___lbmod
  8663  001598  EC84  F015         	call	___lbdiv
  8664  00159C  6E2D               	movwf	??_fround^0,c
  8665  00159E  6A2E               	clrf	(??_fround+1)^0,c
  8666  0015A0  90D8               	bcf	status,0,c
  8667  0015A2  362D               	rlcf	??_fround^0,f,c
  8668  0015A4  362E               	rlcf	(??_fround+1)^0,f,c
  8669  0015A6  90D8               	bcf	status,0,c
  8670  0015A8  362D               	rlcf	??_fround^0,f,c
  8671  0015AA  362E               	rlcf	(??_fround+1)^0,f,c
  8672  0015AC  0E24               	movlw	36
  8673  0015AE  262D               	addwf	??_fround^0,f,c
  8674  0015B0  0E00               	movlw	0
  8675  0015B2  222E               	addwfc	(??_fround+1)^0,f,c
  8676  0015B4  0E79               	movlw	low __npowers_
  8677  0015B6  242D               	addwf	??_fround^0,w,c
  8678  0015B8  6EF6               	movwf	tblptrl,c
  8679  0015BA  0EFE               	movlw	high __npowers_
  8680  0015BC  202E               	addwfc	(??_fround+1)^0,w,c
  8681  0015BE  6EF7               	movwf	tblptrh,c
  8682  0015C0                     	if	0	;There are less than 3 active tblptr bytes
  8683  0015C0                     	endif
  8684  0015C0  0009               	tblrd		*+
  8685  0015C2  CFF5 F014          	movff	tablat,___flmul@a
  8686  0015C6  0009               	tblrd		*+
  8687  0015C8  CFF5 F015          	movff	tablat,___flmul@a+1
  8688  0015CC  0009               	tblrd		*+
  8689  0015CE  CFF5 F016          	movff	tablat,___flmul@a+2
  8690  0015D2  000A               	tblrd		*-
  8691  0015D4  CFF5 F017          	movff	tablat,___flmul@a+3
  8692  0015D8  C033  F010         	movff	_fround$3328,___flmul@b
  8693  0015DC  C034  F011         	movff	_fround$3328+1,___flmul@b+1
  8694  0015E0  C035  F012         	movff	_fround$3328+2,___flmul@b+2
  8695  0015E4  C036  F013         	movff	_fround$3328+3,___flmul@b+3
  8696  0015E8  EC2C  F006         	call	___flmul	;wreg free
  8697  0015EC  C010  F02F         	movff	?___flmul,_fround$3329
  8698  0015F0  C011  F030         	movff	?___flmul+1,_fround$3329+1
  8699  0015F4  C012  F031         	movff	?___flmul+2,_fround$3329+2
  8700  0015F8  C013  F032         	movff	?___flmul+3,_fround$3329+3
  8701                           
  8702                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8703  0015FC  C02F  F010         	movff	_fround$3329,___flmul@b
  8704  001600  C030  F011         	movff	_fround$3329+1,___flmul@b+1
  8705  001604  C031  F012         	movff	_fround$3329+2,___flmul@b+2
  8706  001608  C032  F013         	movff	_fround$3329+3,___flmul@b+3
  8707  00160C  0E0A               	movlw	10
  8708  00160E  6E02               	movwf	___lbmod@divisor^0,c
  8709  001610  5037               	movf	fround@prec^0,w,c
  8710  001612  EC49  F016         	call	___lbmod
  8711  001616  6E2D               	movwf	??_fround^0,c
  8712  001618  6A2E               	clrf	(??_fround+1)^0,c
  8713  00161A  90D8               	bcf	status,0,c
  8714  00161C  362D               	rlcf	??_fround^0,f,c
  8715  00161E  362E               	rlcf	(??_fround+1)^0,f,c
  8716  001620  90D8               	bcf	status,0,c
  8717  001622  362D               	rlcf	??_fround^0,f,c
  8718  001624  362E               	rlcf	(??_fround+1)^0,f,c
  8719  001626  0E79               	movlw	low __npowers_
  8720  001628  242D               	addwf	??_fround^0,w,c
  8721  00162A  6EF6               	movwf	tblptrl,c
  8722  00162C  0EFE               	movlw	high __npowers_
  8723  00162E  202E               	addwfc	(??_fround+1)^0,w,c
  8724  001630  6EF7               	movwf	tblptrh,c
  8725  001632                     	if	0	;There are less than 3 active tblptr bytes
  8726  001632                     	endif
  8727  001632  0009               	tblrd		*+
  8728  001634  CFF5 F014          	movff	tablat,___flmul@a
  8729  001638  0009               	tblrd		*+
  8730  00163A  CFF5 F015          	movff	tablat,___flmul@a+1
  8731  00163E  0009               	tblrd		*+
  8732  001640  CFF5 F016          	movff	tablat,___flmul@a+2
  8733  001644  000A               	tblrd		*-
  8734  001646  CFF5 F017          	movff	tablat,___flmul@a+3
  8735  00164A  EC2C  F006         	call	___flmul	;wreg free
  8736  00164E  C010  F029         	movff	?___flmul,?_fround
  8737  001652  C011  F02A         	movff	?___flmul+1,?_fround+1
  8738  001656  C012  F02B         	movff	?___flmul+2,?_fround+2
  8739  00165A  C013  F02C         	movff	?___flmul+3,?_fround+3
  8740  00165E  0012               	return	
  8741  001660                     l4028:
  8742                           
  8743                           ;doprnt.c: 423: else if(prec > 10)
  8744  001660  0E0A               	movlw	10
  8745  001662  6437               	cpfsgt	fround@prec^0,c
  8746  001664  D067               	goto	l4034
  8747                           
  8748                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8749  001666  0E00               	movlw	0
  8750  001668  6E14               	movwf	___flmul@a^0,c
  8751  00166A  0E00               	movlw	0
  8752  00166C  6E15               	movwf	(___flmul@a+1)^0,c
  8753  00166E  0E00               	movlw	0
  8754  001670  6E16               	movwf	(___flmul@a+2)^0,c
  8755  001672  0E3F               	movlw	63
  8756  001674  6E17               	movwf	(___flmul@a+3)^0,c
  8757  001676  0E0A               	movlw	10
  8758  001678  6E06               	movwf	___lbdiv@divisor^0,c
  8759  00167A  5037               	movf	fround@prec^0,w,c
  8760  00167C  EC84  F015         	call	___lbdiv
  8761  001680  6E2D               	movwf	??_fround^0,c
  8762  001682  6A2E               	clrf	(??_fround+1)^0,c
  8763  001684  90D8               	bcf	status,0,c
  8764  001686  362D               	rlcf	??_fround^0,f,c
  8765  001688  362E               	rlcf	(??_fround+1)^0,f,c
  8766  00168A  90D8               	bcf	status,0,c
  8767  00168C  362D               	rlcf	??_fround^0,f,c
  8768  00168E  362E               	rlcf	(??_fround+1)^0,f,c
  8769  001690  0E24               	movlw	36
  8770  001692  262D               	addwf	??_fround^0,f,c
  8771  001694  0E00               	movlw	0
  8772  001696  222E               	addwfc	(??_fround+1)^0,f,c
  8773  001698  0E79               	movlw	low __npowers_
  8774  00169A  242D               	addwf	??_fround^0,w,c
  8775  00169C  6EF6               	movwf	tblptrl,c
  8776  00169E  0EFE               	movlw	high __npowers_
  8777  0016A0  202E               	addwfc	(??_fround+1)^0,w,c
  8778  0016A2  6EF7               	movwf	tblptrh,c
  8779  0016A4                     	if	0	;There are less than 3 active tblptr bytes
  8780  0016A4                     	endif
  8781  0016A4  0009               	tblrd		*+
  8782  0016A6  CFF5 F010          	movff	tablat,___flmul@b
  8783  0016AA  0009               	tblrd		*+
  8784  0016AC  CFF5 F011          	movff	tablat,___flmul@b+1
  8785  0016B0  0009               	tblrd		*+
  8786  0016B2  CFF5 F012          	movff	tablat,___flmul@b+2
  8787  0016B6  000A               	tblrd		*-
  8788  0016B8  CFF5 F013          	movff	tablat,___flmul@b+3
  8789  0016BC  EC2C  F006         	call	___flmul	;wreg free
  8790  0016C0  C010  F033         	movff	?___flmul,_fround$3328
  8791  0016C4  C011  F034         	movff	?___flmul+1,_fround$3328+1
  8792  0016C8  C012  F035         	movff	?___flmul+2,_fround$3328+2
  8793  0016CC  C013  F036         	movff	?___flmul+3,_fround$3328+3
  8794                           
  8795                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8796  0016D0  C033  F010         	movff	_fround$3328,___flmul@b
  8797  0016D4  C034  F011         	movff	_fround$3328+1,___flmul@b+1
  8798  0016D8  C035  F012         	movff	_fround$3328+2,___flmul@b+2
  8799  0016DC  C036  F013         	movff	_fround$3328+3,___flmul@b+3
  8800  0016E0  0E0A               	movlw	10
  8801  0016E2  6E02               	movwf	___lbmod@divisor^0,c
  8802  0016E4  5037               	movf	fround@prec^0,w,c
  8803  0016E6  EC49  F016         	call	___lbmod
  8804  0016EA  6E2D               	movwf	??_fround^0,c
  8805  0016EC  6A2E               	clrf	(??_fround+1)^0,c
  8806  0016EE  90D8               	bcf	status,0,c
  8807  0016F0  362D               	rlcf	??_fround^0,f,c
  8808  0016F2  362E               	rlcf	(??_fround+1)^0,f,c
  8809  0016F4  90D8               	bcf	status,0,c
  8810  0016F6  362D               	rlcf	??_fround^0,f,c
  8811  0016F8  362E               	rlcf	(??_fround+1)^0,f,c
  8812  0016FA  0E79               	movlw	low __npowers_
  8813  0016FC  242D               	addwf	??_fround^0,w,c
  8814  0016FE  6EF6               	movwf	tblptrl,c
  8815  001700  0EFE               	movlw	high __npowers_
  8816  001702  202E               	addwfc	(??_fround+1)^0,w,c
  8817  001704  6EF7               	movwf	tblptrh,c
  8818  001706                     	if	0	;There are less than 3 active tblptr bytes
  8819  001706                     	endif
  8820  001706  0009               	tblrd		*+
  8821  001708  CFF5 F014          	movff	tablat,___flmul@a
  8822  00170C  0009               	tblrd		*+
  8823  00170E  CFF5 F015          	movff	tablat,___flmul@a+1
  8824  001712  0009               	tblrd		*+
  8825  001714  CFF5 F016          	movff	tablat,___flmul@a+2
  8826  001718  000A               	tblrd		*-
  8827  00171A  CFF5 F017          	movff	tablat,___flmul@a+3
  8828  00171E  EC2C  F006         	call	___flmul	;wreg free
  8829  001722  C010  F029         	movff	?___flmul,?_fround
  8830  001726  C011  F02A         	movff	?___flmul+1,?_fround+1
  8831  00172A  C012  F02B         	movff	?___flmul+2,?_fround+2
  8832  00172E  C013  F02C         	movff	?___flmul+3,?_fround+3
  8833  001732  0012               	return	
  8834  001734                     l4034:
  8835                           
  8836                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  8837  001734  5037               	movf	fround@prec^0,w,c
  8838  001736  0D04               	mullw	4
  8839  001738  0E79               	movlw	low __npowers_
  8840  00173A  24F3               	addwf	243,w,c
  8841  00173C  6EF6               	movwf	tblptrl,c
  8842  00173E  0EFE               	movlw	high __npowers_
  8843  001740  20F4               	addwfc	244,w,c
  8844  001742  6EF7               	movwf	tblptrh,c
  8845  001744                     	if	0	;There are less than 3 active tblptr bytes
  8846  001744                     	endif
  8847  001744  0009               	tblrd		*+
  8848  001746  CFF5 F010          	movff	tablat,___flmul@b
  8849  00174A  0009               	tblrd		*+
  8850  00174C  CFF5 F011          	movff	tablat,___flmul@b+1
  8851  001750  0009               	tblrd		*+
  8852  001752  CFF5 F012          	movff	tablat,___flmul@b+2
  8853  001756  000A               	tblrd		*-
  8854  001758  CFF5 F013          	movff	tablat,___flmul@b+3
  8855  00175C  0E00               	movlw	0
  8856  00175E  6E14               	movwf	___flmul@a^0,c
  8857  001760  0E00               	movlw	0
  8858  001762  6E15               	movwf	(___flmul@a+1)^0,c
  8859  001764  0E00               	movlw	0
  8860  001766  6E16               	movwf	(___flmul@a+2)^0,c
  8861  001768  0E3F               	movlw	63
  8862  00176A  6E17               	movwf	(___flmul@a+3)^0,c
  8863  00176C  EC2C  F006         	call	___flmul	;wreg free
  8864  001770  C010  F029         	movff	?___flmul,?_fround
  8865  001774  C011  F02A         	movff	?___flmul+1,?_fround+1
  8866  001778  C012  F02B         	movff	?___flmul+2,?_fround+2
  8867  00177C  C013  F02C         	movff	?___flmul+3,?_fround+3
  8868  001780  0012               	return		;funcret
  8869  001782                     __end_of_fround:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function ___lbmod *****************
  8873 ;; Defined at:
  8874 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lbmod.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  dividend        1    wreg     unsigned char 
  8877 ;;  divisor         1    1[COMRAM] unsigned char 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  dividend        1    2[COMRAM] unsigned char 
  8880 ;;  rem             1    4[COMRAM] unsigned char 
  8881 ;;  counter         1    3[COMRAM] unsigned char 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  1    wreg      unsigned char 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8895 ;;Total ram usage:        4 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_fround
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text49
  8906  002C92                     __ptext49:
  8907                           	callstack 0
  8908  002C92                     ___lbmod:
  8909                           	callstack 26
  8910                           
  8911                           ;incstack = 0
  8912                           ;___lbmod@dividend stored from wreg
  8913  002C92  6E03               	movwf	___lbmod@dividend^0,c
  8914  002C94  0E08               	movlw	8
  8915  002C96  6E04               	movwf	___lbmod@counter^0,c
  8916  002C98  0E00               	movlw	0
  8917  002C9A  6E05               	movwf	___lbmod@rem^0,c
  8918  002C9C                     l3986:
  8919  002C9C  90D8               	bcf	status,0,c
  8920  002C9E  3403               	rlcf	___lbmod@dividend^0,w,c
  8921  002CA0  3405               	rlcf	___lbmod@rem^0,w,c
  8922  002CA2  6E05               	movwf	___lbmod@rem^0,c
  8923  002CA4  90D8               	bcf	status,0,c
  8924  002CA6  3603               	rlcf	___lbmod@dividend^0,f,c
  8925  002CA8  5002               	movf	___lbmod@divisor^0,w,c
  8926  002CAA  5C05               	subwf	___lbmod@rem^0,w,c
  8927  002CAC  A0D8               	btfss	status,0,c
  8928  002CAE  D002               	goto	l3994
  8929  002CB0  5002               	movf	___lbmod@divisor^0,w,c
  8930  002CB2  5E05               	subwf	___lbmod@rem^0,f,c
  8931  002CB4                     l3994:
  8932  002CB4  2E04               	decfsz	___lbmod@counter^0,f,c
  8933  002CB6  D7F2               	goto	l3986
  8934  002CB8  5005               	movf	___lbmod@rem^0,w,c
  8935  002CBA  0012               	return		;funcret
  8936  002CBC                     __end_of___lbmod:
  8937                           	callstack 0
  8938                           
  8939 ;; *************** function ___lbdiv *****************
  8940 ;; Defined at:
  8941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lbdiv.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  dividend        1    wreg     unsigned char 
  8944 ;;  divisor         1    5[COMRAM] unsigned char 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  dividend        1    6[COMRAM] unsigned char 
  8947 ;;  quotient        1    8[COMRAM] unsigned char 
  8948 ;;  counter         1    7[COMRAM] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      unsigned char 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;Total ram usage:        4 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    1
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_fround
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text50
  8973  002B08                     __ptext50:
  8974                           	callstack 0
  8975  002B08                     ___lbdiv:
  8976                           	callstack 26
  8977                           
  8978                           ;incstack = 0
  8979                           ;___lbdiv@dividend stored from wreg
  8980  002B08  6E07               	movwf	___lbdiv@dividend^0,c
  8981  002B0A  0E00               	movlw	0
  8982  002B0C  6E09               	movwf	___lbdiv@quotient^0,c
  8983  002B0E  5006               	movf	___lbdiv@divisor^0,w,c
  8984  002B10  B4D8               	btfsc	status,2,c
  8985  002B12  D015               	goto	l3980
  8986  002B14  0E01               	movlw	1
  8987  002B16  6E08               	movwf	___lbdiv@counter^0,c
  8988  002B18  D003               	goto	l3968
  8989  002B1A                     l3964:
  8990  002B1A  90D8               	bcf	status,0,c
  8991  002B1C  3606               	rlcf	___lbdiv@divisor^0,f,c
  8992  002B1E  2A08               	incf	___lbdiv@counter^0,f,c
  8993  002B20                     l3968:
  8994  002B20  AE06               	btfss	___lbdiv@divisor^0,7,c
  8995  002B22  D7FB               	goto	l3964
  8996  002B24                     u3130:
  8997  002B24  90D8               	bcf	status,0,c
  8998  002B26  3609               	rlcf	___lbdiv@quotient^0,f,c
  8999  002B28  5006               	movf	___lbdiv@divisor^0,w,c
  9000  002B2A  5C07               	subwf	___lbdiv@dividend^0,w,c
  9001  002B2C  A0D8               	btfss	status,0,c
  9002  002B2E  D003               	goto	l3976
  9003  002B30  5006               	movf	___lbdiv@divisor^0,w,c
  9004  002B32  5E07               	subwf	___lbdiv@dividend^0,f,c
  9005  002B34  8009               	bsf	___lbdiv@quotient^0,0,c
  9006  002B36                     l3976:
  9007  002B36  90D8               	bcf	status,0,c
  9008  002B38  3206               	rrcf	___lbdiv@divisor^0,f,c
  9009  002B3A  2E08               	decfsz	___lbdiv@counter^0,f,c
  9010  002B3C  D7F3               	goto	u3130
  9011  002B3E                     l3980:
  9012  002B3E  5009               	movf	___lbdiv@quotient^0,w,c
  9013  002B40  0012               	return		;funcret
  9014  002B42                     __end_of___lbdiv:
  9015                           	callstack 0
  9016                           
  9017 ;; *************** function ___flmul *****************
  9018 ;; Defined at:
  9019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  b               4   15[COMRAM] unsigned char 
  9022 ;;  a               4   19[COMRAM] unsigned char 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  prod            4   34[COMRAM] struct .
  9025 ;;  grs             4   29[COMRAM] unsigned long 
  9026 ;;  temp            2   38[COMRAM] struct .
  9027 ;;  bexp            1   33[COMRAM] unsigned char 
  9028 ;;  aexp            1   28[COMRAM] unsigned char 
  9029 ;;  sign            1   27[COMRAM] unsigned char 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  4   15[COMRAM] unsigned char 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0, prodl, prodh
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/F
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;Total ram usage:       25 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    1
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_LoRaSetFrequency
  9050 ;;		_fround
  9051 ;;		_scale
  9052 ;;		_printf
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text51
  9057  000C58                     __ptext51:
  9058                           	callstack 0
  9059  000C58                     ___flmul:
  9060                           	callstack 26
  9061                           
  9062                           ;incstack = 0
  9063  000C58  5013               	movf	(___flmul@b+3)^0,w,c
  9064  000C5A  0B80               	andlw	128
  9065  000C5C  6E1C               	movwf	___flmul@sign^0,c
  9066  000C5E  5013               	movf	(___flmul@b+3)^0,w,c
  9067  000C60  2413               	addwf	(___flmul@b+3)^0,w,c
  9068  000C62  6E22               	movwf	___flmul@bexp^0,c
  9069  000C64  BE12               	btfsc	(___flmul@b+2)^0,7,c
  9070  000C66  8022               	bsf	___flmul@bexp^0,0,c
  9071  000C68  5022               	movf	___flmul@bexp^0,w,c
  9072  000C6A  B4D8               	btfsc	status,2,c
  9073  000C6C  D00D               	goto	l3762
  9074  000C6E  2822               	incf	___flmul@bexp^0,w,c
  9075  000C70  A4D8               	btfss	status,2,c
  9076  000C72  D008               	goto	l3760
  9077  000C74  0E00               	movlw	0
  9078  000C76  6E10               	movwf	___flmul@b^0,c
  9079  000C78  0E00               	movlw	0
  9080  000C7A  6E11               	movwf	(___flmul@b+1)^0,c
  9081  000C7C  0E00               	movlw	0
  9082  000C7E  6E12               	movwf	(___flmul@b+2)^0,c
  9083  000C80  0E00               	movlw	0
  9084  000C82  6E13               	movwf	(___flmul@b+3)^0,c
  9085  000C84                     l3760:
  9086  000C84  8E12               	bsf	(___flmul@b+2)^0,7,c
  9087  000C86  D008               	goto	l3764
  9088  000C88                     l3762:
  9089  000C88  0E00               	movlw	0
  9090  000C8A  6E10               	movwf	___flmul@b^0,c
  9091  000C8C  0E00               	movlw	0
  9092  000C8E  6E11               	movwf	(___flmul@b+1)^0,c
  9093  000C90  0E00               	movlw	0
  9094  000C92  6E12               	movwf	(___flmul@b+2)^0,c
  9095  000C94  0E00               	movlw	0
  9096  000C96  6E13               	movwf	(___flmul@b+3)^0,c
  9097  000C98                     l3764:
  9098  000C98  5017               	movf	(___flmul@a+3)^0,w,c
  9099  000C9A  0B80               	andlw	128
  9100  000C9C  1A1C               	xorwf	___flmul@sign^0,f,c
  9101  000C9E  5017               	movf	(___flmul@a+3)^0,w,c
  9102  000CA0  2417               	addwf	(___flmul@a+3)^0,w,c
  9103  000CA2  6E1D               	movwf	___flmul@aexp^0,c
  9104  000CA4  BE16               	btfsc	(___flmul@a+2)^0,7,c
  9105  000CA6  801D               	bsf	___flmul@aexp^0,0,c
  9106  000CA8  501D               	movf	___flmul@aexp^0,w,c
  9107  000CAA  B4D8               	btfsc	status,2,c
  9108  000CAC  D00D               	goto	l3780
  9109  000CAE  281D               	incf	___flmul@aexp^0,w,c
  9110  000CB0  A4D8               	btfss	status,2,c
  9111  000CB2  D008               	goto	l3778
  9112  000CB4  0E00               	movlw	0
  9113  000CB6  6E14               	movwf	___flmul@a^0,c
  9114  000CB8  0E00               	movlw	0
  9115  000CBA  6E15               	movwf	(___flmul@a+1)^0,c
  9116  000CBC  0E00               	movlw	0
  9117  000CBE  6E16               	movwf	(___flmul@a+2)^0,c
  9118  000CC0  0E00               	movlw	0
  9119  000CC2  6E17               	movwf	(___flmul@a+3)^0,c
  9120  000CC4                     l3778:
  9121  000CC4  8E16               	bsf	(___flmul@a+2)^0,7,c
  9122  000CC6  D008               	goto	l1359
  9123  000CC8                     l3780:
  9124  000CC8  0E00               	movlw	0
  9125  000CCA  6E14               	movwf	___flmul@a^0,c
  9126  000CCC  0E00               	movlw	0
  9127  000CCE  6E15               	movwf	(___flmul@a+1)^0,c
  9128  000CD0  0E00               	movlw	0
  9129  000CD2  6E16               	movwf	(___flmul@a+2)^0,c
  9130  000CD4  0E00               	movlw	0
  9131  000CD6  6E17               	movwf	(___flmul@a+3)^0,c
  9132  000CD8                     l1359:
  9133  000CD8  501D               	movf	___flmul@aexp^0,w,c
  9134  000CDA  B4D8               	btfsc	status,2,c
  9135  000CDC  D003               	goto	u2890
  9136  000CDE  5022               	movf	___flmul@bexp^0,w,c
  9137  000CE0  A4D8               	btfss	status,2,c
  9138  000CE2  D009               	goto	l3788
  9139  000CE4                     u2890:
  9140  000CE4  0E00               	movlw	0
  9141  000CE6  6E10               	movwf	?___flmul^0,c
  9142  000CE8  0E00               	movlw	0
  9143  000CEA  6E11               	movwf	(?___flmul+1)^0,c
  9144  000CEC  0E00               	movlw	0
  9145  000CEE  6E12               	movwf	(?___flmul+2)^0,c
  9146  000CF0  0E00               	movlw	0
  9147  000CF2  6E13               	movwf	(?___flmul+3)^0,c
  9148  000CF4  0012               	return	
  9149  000CF6                     l3788:
  9150  000CF6  5016               	movf	(___flmul@a+2)^0,w,c
  9151  000CF8  0210               	mulwf	___flmul@b^0,c
  9152  000CFA  CFF3 F027          	movff	prodl,___flmul@temp
  9153  000CFE  CFF4 F028          	movff	prodh,___flmul@temp+1
  9154  000D02  5027               	movf	___flmul@temp^0,w,c
  9155  000D04  6E1E               	movwf	___flmul@grs^0,c
  9156  000D06  6A1F               	clrf	(___flmul@grs+1)^0,c
  9157  000D08  6A20               	clrf	(___flmul@grs+2)^0,c
  9158  000D0A  6A21               	clrf	(___flmul@grs+3)^0,c
  9159  000D0C  5028               	movf	(___flmul@temp+1)^0,w,c
  9160  000D0E  6E23               	movwf	___flmul@prod^0,c
  9161  000D10  6A24               	clrf	(___flmul@prod+1)^0,c
  9162  000D12  6A25               	clrf	(___flmul@prod+2)^0,c
  9163  000D14  6A26               	clrf	(___flmul@prod+3)^0,c
  9164  000D16  5015               	movf	(___flmul@a+1)^0,w,c
  9165  000D18  0211               	mulwf	(___flmul@b+1)^0,c
  9166  000D1A  CFF3 F027          	movff	prodl,___flmul@temp
  9167  000D1E  CFF4 F028          	movff	prodh,___flmul@temp+1
  9168  000D22  5027               	movf	___flmul@temp^0,w,c
  9169  000D24  261E               	addwf	___flmul@grs^0,f,c
  9170  000D26  0E00               	movlw	0
  9171  000D28  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9172  000D2A  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9173  000D2C  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9174  000D2E  5028               	movf	(___flmul@temp+1)^0,w,c
  9175  000D30  2623               	addwf	___flmul@prod^0,f,c
  9176  000D32  0E00               	movlw	0
  9177  000D34  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9178  000D36  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9179  000D38  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9180  000D3A  5014               	movf	___flmul@a^0,w,c
  9181  000D3C  0212               	mulwf	(___flmul@b+2)^0,c
  9182  000D3E  CFF3 F027          	movff	prodl,___flmul@temp
  9183  000D42  CFF4 F028          	movff	prodh,___flmul@temp+1
  9184  000D46  5027               	movf	___flmul@temp^0,w,c
  9185  000D48  261E               	addwf	___flmul@grs^0,f,c
  9186  000D4A  0E00               	movlw	0
  9187  000D4C  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9188  000D4E  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9189  000D50  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9190  000D52  5028               	movf	(___flmul@temp+1)^0,w,c
  9191  000D54  2623               	addwf	___flmul@prod^0,f,c
  9192  000D56  0E00               	movlw	0
  9193  000D58  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9194  000D5A  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9195  000D5C  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9196  000D5E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  9197  000D62  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  9198  000D66  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  9199  000D6A  6A1E               	clrf	___flmul@grs^0,c
  9200  000D6C  5014               	movf	___flmul@a^0,w,c
  9201  000D6E  0211               	mulwf	(___flmul@b+1)^0,c
  9202  000D70  CFF3 F027          	movff	prodl,___flmul@temp
  9203  000D74  CFF4 F028          	movff	prodh,___flmul@temp+1
  9204  000D78  5027               	movf	___flmul@temp^0,w,c
  9205  000D7A  261E               	addwf	___flmul@grs^0,f,c
  9206  000D7C  5028               	movf	(___flmul@temp+1)^0,w,c
  9207  000D7E  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9208  000D80  0E00               	movlw	0
  9209  000D82  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9210  000D84  0E00               	movlw	0
  9211  000D86  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9212  000D88  5015               	movf	(___flmul@a+1)^0,w,c
  9213  000D8A  0210               	mulwf	___flmul@b^0,c
  9214  000D8C  CFF3 F027          	movff	prodl,___flmul@temp
  9215  000D90  CFF4 F028          	movff	prodh,___flmul@temp+1
  9216  000D94  5027               	movf	___flmul@temp^0,w,c
  9217  000D96  261E               	addwf	___flmul@grs^0,f,c
  9218  000D98  5028               	movf	(___flmul@temp+1)^0,w,c
  9219  000D9A  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9220  000D9C  0E00               	movlw	0
  9221  000D9E  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9222  000DA0  0E00               	movlw	0
  9223  000DA2  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9224  000DA4  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  9225  000DA8  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  9226  000DAC  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  9227  000DB0  6A1E               	clrf	___flmul@grs^0,c
  9228  000DB2  5014               	movf	___flmul@a^0,w,c
  9229  000DB4  0210               	mulwf	___flmul@b^0,c
  9230  000DB6  CFF3 F027          	movff	prodl,___flmul@temp
  9231  000DBA  CFF4 F028          	movff	prodh,___flmul@temp+1
  9232  000DBE  5027               	movf	___flmul@temp^0,w,c
  9233  000DC0  261E               	addwf	___flmul@grs^0,f,c
  9234  000DC2  5028               	movf	(___flmul@temp+1)^0,w,c
  9235  000DC4  221F               	addwfc	(___flmul@grs+1)^0,f,c
  9236  000DC6  0E00               	movlw	0
  9237  000DC8  2220               	addwfc	(___flmul@grs+2)^0,f,c
  9238  000DCA  0E00               	movlw	0
  9239  000DCC  2221               	addwfc	(___flmul@grs+3)^0,f,c
  9240  000DCE  5016               	movf	(___flmul@a+2)^0,w,c
  9241  000DD0  0211               	mulwf	(___flmul@b+1)^0,c
  9242  000DD2  CFF3 F027          	movff	prodl,___flmul@temp
  9243  000DD6  CFF4 F028          	movff	prodh,___flmul@temp+1
  9244  000DDA  5027               	movf	___flmul@temp^0,w,c
  9245  000DDC  2623               	addwf	___flmul@prod^0,f,c
  9246  000DDE  5028               	movf	(___flmul@temp+1)^0,w,c
  9247  000DE0  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9248  000DE2  0E00               	movlw	0
  9249  000DE4  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9250  000DE6  0E00               	movlw	0
  9251  000DE8  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9252  000DEA  5015               	movf	(___flmul@a+1)^0,w,c
  9253  000DEC  0212               	mulwf	(___flmul@b+2)^0,c
  9254  000DEE  CFF3 F027          	movff	prodl,___flmul@temp
  9255  000DF2  CFF4 F028          	movff	prodh,___flmul@temp+1
  9256  000DF6  5027               	movf	___flmul@temp^0,w,c
  9257  000DF8  2623               	addwf	___flmul@prod^0,f,c
  9258  000DFA  5028               	movf	(___flmul@temp+1)^0,w,c
  9259  000DFC  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9260  000DFE  0E00               	movlw	0
  9261  000E00  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9262  000E02  0E00               	movlw	0
  9263  000E04  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9264  000E06  5016               	movf	(___flmul@a+2)^0,w,c
  9265  000E08  0212               	mulwf	(___flmul@b+2)^0,c
  9266  000E0A  CFF3 F027          	movff	prodl,___flmul@temp
  9267  000E0E  CFF4 F028          	movff	prodh,___flmul@temp+1
  9268  000E12  5027               	movf	___flmul@temp^0,w,c
  9269  000E14  6E18               	movwf	??___flmul^0,c
  9270  000E16  5028               	movf	(___flmul@temp+1)^0,w,c
  9271  000E18  6E19               	movwf	(??___flmul+1)^0,c
  9272  000E1A  6A1A               	clrf	(??___flmul+2)^0,c
  9273  000E1C  6A1B               	clrf	(??___flmul+3)^0,c
  9274  000E1E  C01A  F01B         	movff	??___flmul+2,??___flmul+3
  9275  000E22  C019  F01A         	movff	??___flmul+1,??___flmul+2
  9276  000E26  C018  F019         	movff	??___flmul,??___flmul+1
  9277  000E2A  6A18               	clrf	??___flmul^0,c
  9278  000E2C  5018               	movf	??___flmul^0,w,c
  9279  000E2E  2623               	addwf	___flmul@prod^0,f,c
  9280  000E30  5019               	movf	(??___flmul+1)^0,w,c
  9281  000E32  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9282  000E34  501A               	movf	(??___flmul+2)^0,w,c
  9283  000E36  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9284  000E38  501B               	movf	(??___flmul+3)^0,w,c
  9285  000E3A  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9286  000E3C  5021               	movf	(___flmul@grs+3)^0,w,c
  9287  000E3E  2623               	addwf	___flmul@prod^0,f,c
  9288  000E40  0E00               	movlw	0
  9289  000E42  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9290  000E44  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9291  000E46  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9292  000E48  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  9293  000E4C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  9294  000E50  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  9295  000E54  6A1E               	clrf	___flmul@grs^0,c
  9296  000E56  501D               	movf	___flmul@aexp^0,w,c
  9297  000E58  C022  F018         	movff	___flmul@bexp,??___flmul
  9298  000E5C  6A19               	clrf	(??___flmul+1)^0,c
  9299  000E5E  2618               	addwf	??___flmul^0,f,c
  9300  000E60  0E00               	movlw	0
  9301  000E62  2219               	addwfc	(??___flmul+1)^0,f,c
  9302  000E64  0E82               	movlw	130
  9303  000E66  2418               	addwf	??___flmul^0,w,c
  9304  000E68  6E27               	movwf	___flmul@temp^0,c
  9305  000E6A  0EFF               	movlw	255
  9306  000E6C  2019               	addwfc	(??___flmul+1)^0,w,c
  9307  000E6E  6E28               	movwf	(___flmul@temp+1)^0,c
  9308  000E70  D00F               	goto	l3836
  9309  000E72                     l3830:
  9310  000E72  90D8               	bcf	status,0,c
  9311  000E74  3623               	rlcf	___flmul@prod^0,f,c
  9312  000E76  3624               	rlcf	(___flmul@prod+1)^0,f,c
  9313  000E78  3625               	rlcf	(___flmul@prod+2)^0,f,c
  9314  000E7A  3626               	rlcf	(___flmul@prod+3)^0,f,c
  9315  000E7C  BE21               	btfsc	(___flmul@grs+3)^0,7,c
  9316  000E7E  8023               	bsf	___flmul@prod^0,0,c
  9317  000E80  90D8               	bcf	status,0,c
  9318  000E82  361E               	rlcf	___flmul@grs^0,f,c
  9319  000E84  361F               	rlcf	(___flmul@grs+1)^0,f,c
  9320  000E86  3620               	rlcf	(___flmul@grs+2)^0,f,c
  9321  000E88  3621               	rlcf	(___flmul@grs+3)^0,f,c
  9322  000E8A  0627               	decf	___flmul@temp^0,f,c
  9323  000E8C  A0D8               	btfss	status,0,c
  9324  000E8E  0628               	decf	(___flmul@temp+1)^0,f,c
  9325  000E90                     l3836:
  9326  000E90  AE25               	btfss	(___flmul@prod+2)^0,7,c
  9327  000E92  D7EF               	goto	l3830
  9328  000E94  0E00               	movlw	0
  9329  000E96  6E1D               	movwf	___flmul@aexp^0,c
  9330  000E98  AE21               	btfss	(___flmul@grs+3)^0,7,c
  9331  000E9A  D017               	goto	l1368
  9332  000E9C  0EFF               	movlw	255
  9333  000E9E  141E               	andwf	___flmul@grs^0,w,c
  9334  000EA0  6E18               	movwf	??___flmul^0,c
  9335  000EA2  0EFF               	movlw	255
  9336  000EA4  141F               	andwf	(___flmul@grs+1)^0,w,c
  9337  000EA6  6E19               	movwf	(??___flmul+1)^0,c
  9338  000EA8  0EFF               	movlw	255
  9339  000EAA  1420               	andwf	(___flmul@grs+2)^0,w,c
  9340  000EAC  6E1A               	movwf	(??___flmul+2)^0,c
  9341  000EAE  0E7F               	movlw	127
  9342  000EB0  1421               	andwf	(___flmul@grs+3)^0,w,c
  9343  000EB2  6E1B               	movwf	(??___flmul+3)^0,c
  9344  000EB4  5018               	movf	??___flmul^0,w,c
  9345  000EB6  1019               	iorwf	(??___flmul+1)^0,w,c
  9346  000EB8  101A               	iorwf	(??___flmul+2)^0,w,c
  9347  000EBA  101B               	iorwf	(??___flmul+3)^0,w,c
  9348  000EBC  B4D8               	btfsc	status,2,c
  9349  000EBE  D003               	goto	l1369
  9350  000EC0                     u2930:
  9351  000EC0  0E01               	movlw	1
  9352  000EC2  6E1D               	movwf	___flmul@aexp^0,c
  9353  000EC4  D002               	goto	l1368
  9354  000EC6                     l1369:
  9355  000EC6  B023               	btfsc	___flmul@prod^0,0,c
  9356  000EC8  D7FB               	goto	u2930
  9357  000ECA                     l1368:
  9358  000ECA  501D               	movf	___flmul@aexp^0,w,c
  9359  000ECC  B4D8               	btfsc	status,2,c
  9360  000ECE  D01F               	goto	l3856
  9361  000ED0  0E01               	movlw	1
  9362  000ED2  2623               	addwf	___flmul@prod^0,f,c
  9363  000ED4  0E00               	movlw	0
  9364  000ED6  2224               	addwfc	(___flmul@prod+1)^0,f,c
  9365  000ED8  2225               	addwfc	(___flmul@prod+2)^0,f,c
  9366  000EDA  2226               	addwfc	(___flmul@prod+3)^0,f,c
  9367  000EDC  A026               	btfss	(___flmul@prod+3)^0,0,c
  9368  000EDE  D017               	goto	l3856
  9369  000EE0  C023  F018         	movff	___flmul@prod,??___flmul
  9370  000EE4  C024  F019         	movff	___flmul@prod+1,??___flmul+1
  9371  000EE8  C025  F01A         	movff	___flmul@prod+2,??___flmul+2
  9372  000EEC  C026  F01B         	movff	___flmul@prod+3,??___flmul+3
  9373  000EF0  341B               	rlcf	(??___flmul+3)^0,w,c
  9374  000EF2  321B               	rrcf	(??___flmul+3)^0,f,c
  9375  000EF4  321A               	rrcf	(??___flmul+2)^0,f,c
  9376  000EF6  3219               	rrcf	(??___flmul+1)^0,f,c
  9377  000EF8  3218               	rrcf	??___flmul^0,f,c
  9378  000EFA  C018  F023         	movff	??___flmul,___flmul@prod
  9379  000EFE  C019  F024         	movff	??___flmul+1,___flmul@prod+1
  9380  000F02  C01A  F025         	movff	??___flmul+2,___flmul@prod+2
  9381  000F06  C01B  F026         	movff	??___flmul+3,___flmul@prod+3
  9382  000F0A  4A27               	infsnz	___flmul@temp^0,f,c
  9383  000F0C  2A28               	incf	(___flmul@temp+1)^0,f,c
  9384  000F0E                     l3856:
  9385  000F0E  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  9386  000F10  D00D               	goto	l3860
  9387  000F12  5028               	movf	(___flmul@temp+1)^0,w,c
  9388  000F14  E103               	bnz	u2970
  9389  000F16  2827               	incf	___flmul@temp^0,w,c
  9390  000F18  A0D8               	btfss	status,0,c
  9391  000F1A  D008               	goto	l3860
  9392  000F1C                     u2970:
  9393  000F1C  0E00               	movlw	0
  9394  000F1E  6E23               	movwf	___flmul@prod^0,c
  9395  000F20  0E00               	movlw	0
  9396  000F22  6E24               	movwf	(___flmul@prod+1)^0,c
  9397  000F24  0E80               	movlw	128
  9398  000F26  6E25               	movwf	(___flmul@prod+2)^0,c
  9399  000F28  0E7F               	movlw	127
  9400  000F2A  D020               	goto	L4
  9401  000F2C                     l3860:
  9402  000F2C  BE28               	btfsc	(___flmul@temp+1)^0,7,c
  9403  000F2E  D005               	goto	u2980
  9404  000F30  5028               	movf	(___flmul@temp+1)^0,w,c
  9405  000F32  E10E               	bnz	l1376
  9406  000F34  0427               	decf	___flmul@temp^0,w,c
  9407  000F36  B0D8               	btfsc	status,0,c
  9408  000F38  D00B               	goto	l1376
  9409  000F3A                     u2980:
  9410  000F3A  0E00               	movlw	0
  9411  000F3C  6E23               	movwf	___flmul@prod^0,c
  9412  000F3E  0E00               	movlw	0
  9413  000F40  6E24               	movwf	(___flmul@prod+1)^0,c
  9414  000F42  0E00               	movlw	0
  9415  000F44  6E25               	movwf	(___flmul@prod+2)^0,c
  9416  000F46  0E00               	movlw	0
  9417  000F48  6E26               	movwf	(___flmul@prod+3)^0,c
  9418  000F4A  0E00               	movlw	0
  9419  000F4C  6E1C               	movwf	___flmul@sign^0,c
  9420  000F4E  D00F               	goto	l3872
  9421  000F50                     l1376:
  9422  000F50  C027  F022         	movff	___flmul@temp,___flmul@bexp
  9423  000F54  0EFF               	movlw	255
  9424  000F56  1623               	andwf	___flmul@prod^0,f,c
  9425  000F58  0EFF               	movlw	255
  9426  000F5A  1624               	andwf	(___flmul@prod+1)^0,f,c
  9427  000F5C  0E7F               	movlw	127
  9428  000F5E  1625               	andwf	(___flmul@prod+2)^0,f,c
  9429  000F60  0E00               	movlw	0
  9430  000F62  1626               	andwf	(___flmul@prod+3)^0,f,c
  9431  000F64  B022               	btfsc	___flmul@bexp^0,0,c
  9432  000F66  8E25               	bsf	(___flmul@prod+2)^0,7,c
  9433  000F68  90D8               	bcf	status,0,c
  9434  000F6A  3022               	rrcf	___flmul@bexp^0,w,c
  9435  000F6C                     L4:
  9436  000F6C  6E26               	movwf	(___flmul@prod+3)^0,c
  9437  000F6E                     l3872:
  9438  000F6E  501C               	movf	___flmul@sign^0,w,c
  9439  000F70  1226               	iorwf	(___flmul@prod+3)^0,f,c
  9440  000F72  C023  F010         	movff	___flmul@prod,?___flmul
  9441  000F76  C024  F011         	movff	___flmul@prod+1,?___flmul+1
  9442  000F7A  C025  F012         	movff	___flmul@prod+2,?___flmul+2
  9443  000F7E  C026  F013         	movff	___flmul@prod+3,?___flmul+3
  9444  000F82  0012               	return		;funcret
  9445  000F84                     __end_of___flmul:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function __tdiv_to_l_ *****************
  9449 ;; Defined at:
  9450 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  f1              4    1[COMRAM] float 
  9453 ;;  f2              4    5[COMRAM] float 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  quot            4   12[COMRAM] unsigned long 
  9456 ;;  exp1            1   17[COMRAM] unsigned char 
  9457 ;;  cntr            1   16[COMRAM] unsigned char 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  4    1[COMRAM] unsigned long 
  9460 ;; Registers used:
  9461 ;;		wreg, status,2, status,0
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9467 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;Total ram usage:       17 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    1
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_printf
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text52
  9482  00203A                     __ptext52:
  9483                           	callstack 0
  9484  00203A                     __tdiv_to_l_:
  9485                           	callstack 27
  9486                           
  9487                           ;incstack = 0
  9488  00203A  C004  F00A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9489  00203E  6A0B               	clrf	(??__tdiv_to_l_+1)^0,c
  9490  002040  6A0C               	clrf	(??__tdiv_to_l_+2)^0,c
  9491  002042  3403               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  9492  002044  360A               	rlcf	??__tdiv_to_l_^0,f,c
  9493  002046  E301               	bnc	u3281
  9494  002048  800B               	bsf	(??__tdiv_to_l_+1)^0,0,c
  9495  00204A                     u3281:
  9496  00204A  500A               	movf	??__tdiv_to_l_^0,w,c
  9497  00204C  6E12               	movwf	__tdiv_to_l_@exp1^0,c
  9498  00204E  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9499  002050  A4D8               	btfss	status,2,c
  9500  002052  D009               	goto	l4082
  9501  002054                     u3290:
  9502  002054  0E00               	movlw	0
  9503  002056  6E02               	movwf	?__tdiv_to_l_^0,c
  9504  002058  0E00               	movlw	0
  9505  00205A  6E03               	movwf	(?__tdiv_to_l_+1)^0,c
  9506  00205C  0E00               	movlw	0
  9507  00205E  6E04               	movwf	(?__tdiv_to_l_+2)^0,c
  9508  002060  0E00               	movlw	0
  9509  002062  6E05               	movwf	(?__tdiv_to_l_+3)^0,c
  9510  002064  0012               	return	
  9511  002066                     l4082:
  9512  002066  C008  F00A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9513  00206A  6A0B               	clrf	(??__tdiv_to_l_+1)^0,c
  9514  00206C  6A0C               	clrf	(??__tdiv_to_l_+2)^0,c
  9515  00206E  3407               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  9516  002070  360A               	rlcf	??__tdiv_to_l_^0,f,c
  9517  002072  E301               	bnc	u3301
  9518  002074  800B               	bsf	(??__tdiv_to_l_+1)^0,0,c
  9519  002076                     u3301:
  9520  002076  500A               	movf	??__tdiv_to_l_^0,w,c
  9521  002078  6E11               	movwf	__tdiv_to_l_@cntr^0,c
  9522  00207A  5011               	movf	__tdiv_to_l_@cntr^0,w,c
  9523  00207C  B4D8               	btfsc	status,2,c
  9524  00207E  D7EA               	goto	u3290
  9525  002080  8E03               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  9526  002082  0EFF               	movlw	255
  9527  002084  1602               	andwf	__tdiv_to_l_@f1^0,f,c
  9528  002086  0EFF               	movlw	255
  9529  002088  1603               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  9530  00208A  0E00               	movlw	0
  9531  00208C  1604               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  9532  00208E  8E07               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  9533  002090  0EFF               	movlw	255
  9534  002092  1606               	andwf	__tdiv_to_l_@f2^0,f,c
  9535  002094  0EFF               	movlw	255
  9536  002096  1607               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  9537  002098  0E00               	movlw	0
  9538  00209A  1608               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  9539  00209C  0E00               	movlw	0
  9540  00209E  6E0D               	movwf	__tdiv_to_l_@quot^0,c
  9541  0020A0  0E00               	movlw	0
  9542  0020A2  6E0E               	movwf	(__tdiv_to_l_@quot+1)^0,c
  9543  0020A4  0E00               	movlw	0
  9544  0020A6  6E0F               	movwf	(__tdiv_to_l_@quot+2)^0,c
  9545  0020A8  0E00               	movlw	0
  9546  0020AA  6E10               	movwf	(__tdiv_to_l_@quot+3)^0,c
  9547  0020AC  0E7F               	movlw	127
  9548  0020AE  5E12               	subwf	__tdiv_to_l_@exp1^0,f,c
  9549  0020B0  5011               	movf	__tdiv_to_l_@cntr^0,w,c
  9550  0020B2  0F98               	addlw	152
  9551  0020B4  5E12               	subwf	__tdiv_to_l_@exp1^0,f,c
  9552  0020B6  0E18               	movlw	24
  9553  0020B8  6E11               	movwf	__tdiv_to_l_@cntr^0,c
  9554  0020BA                     l1088:
  9555  0020BA  90D8               	bcf	status,0,c
  9556  0020BC  360D               	rlcf	__tdiv_to_l_@quot^0,f,c
  9557  0020BE  360E               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  9558  0020C0  360F               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  9559  0020C2  3610               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  9560  0020C4  5006               	movf	__tdiv_to_l_@f2^0,w,c
  9561  0020C6  5C02               	subwf	__tdiv_to_l_@f1^0,w,c
  9562  0020C8  5007               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  9563  0020CA  5803               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  9564  0020CC  5008               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  9565  0020CE  5804               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  9566  0020D0  A0D8               	btfss	status,0,c
  9567  0020D2  D007               	goto	l1089
  9568  0020D4  5006               	movf	__tdiv_to_l_@f2^0,w,c
  9569  0020D6  5E02               	subwf	__tdiv_to_l_@f1^0,f,c
  9570  0020D8  5007               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  9571  0020DA  5A03               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  9572  0020DC  5008               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  9573  0020DE  5A04               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  9574  0020E0  800D               	bsf	__tdiv_to_l_@quot^0,0,c
  9575  0020E2                     l1089:
  9576  0020E2  90D8               	bcf	status,0,c
  9577  0020E4  3602               	rlcf	__tdiv_to_l_@f1^0,f,c
  9578  0020E6  3603               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  9579  0020E8  3604               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  9580  0020EA  2E11               	decfsz	__tdiv_to_l_@cntr^0,f,c
  9581  0020EC  D7E6               	goto	l1088
  9582  0020EE  AE12               	btfss	__tdiv_to_l_@exp1^0,7,c
  9583  0020F0  D00D               	goto	l4122
  9584  0020F2  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9585  0020F4  0A80               	xorlw	128
  9586  0020F6  0F97               	addlw	151
  9587  0020F8  A0D8               	btfss	status,0,c
  9588  0020FA  D7AC               	goto	u3290
  9589  0020FC                     l4118:
  9590  0020FC  90D8               	bcf	status,0,c
  9591  0020FE  3210               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  9592  002100  320F               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  9593  002102  320E               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  9594  002104  320D               	rrcf	__tdiv_to_l_@quot^0,f,c
  9595  002106  3E12               	incfsz	__tdiv_to_l_@exp1^0,f,c
  9596  002108  D7F9               	goto	l4118
  9597  00210A  D00D               	goto	u3360
  9598  00210C                     l4122:
  9599  00210C  0E17               	movlw	23
  9600  00210E  6412               	cpfsgt	__tdiv_to_l_@exp1^0,c
  9601  002110  D007               	goto	l4130
  9602  002112  D7A0               	goto	u3290
  9603  002114                     l4128:
  9604  002114  90D8               	bcf	status,0,c
  9605  002116  360D               	rlcf	__tdiv_to_l_@quot^0,f,c
  9606  002118  360E               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  9607  00211A  360F               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  9608  00211C  3610               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  9609  00211E  0612               	decf	__tdiv_to_l_@exp1^0,f,c
  9610  002120                     l4130:
  9611  002120  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9612  002122  A4D8               	btfss	status,2,c
  9613  002124  D7F7               	goto	l4128
  9614  002126                     u3360:
  9615  002126  C00D  F002         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9616  00212A  C00E  F003         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9617  00212E  C00F  F004         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9618  002132  C010  F005         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9619  002136  0012               	return		;funcret
  9620  002138                     __end_of__tdiv_to_l_:
  9621                           	callstack 0
  9622                           
  9623 ;; *************** function __div_to_l_ *****************
  9624 ;; Defined at:
  9625 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  f1              4    1[COMRAM] unsigned long 
  9628 ;;  f2              4    5[COMRAM] unsigned long 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  quot            4    9[COMRAM] unsigned long 
  9631 ;;  exp1            1   14[COMRAM] unsigned char 
  9632 ;;  cntr            1   13[COMRAM] unsigned char 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  4    1[COMRAM] unsigned long 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2, status,0
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9642 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;Total ram usage:       14 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:    1
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_printf
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text53
  9657  002138                     __ptext53:
  9658                           	callstack 0
  9659  002138                     __div_to_l_:
  9660                           	callstack 27
  9661                           
  9662                           ;incstack = 0
  9663  002138  3404               	rlcf	(__div_to_l_@f1+2)^0,w,c
  9664  00213A  3405               	rlcf	(__div_to_l_@f1+3)^0,w,c
  9665  00213C  6E0F               	movwf	__div_to_l_@exp1^0,c
  9666  00213E  500F               	movf	__div_to_l_@exp1^0,w,c
  9667  002140  A4D8               	btfss	status,2,c
  9668  002142  D009               	goto	l4138
  9669  002144                     u3370:
  9670  002144  0E00               	movlw	0
  9671  002146  6E02               	movwf	?__div_to_l_^0,c
  9672  002148  0E00               	movlw	0
  9673  00214A  6E03               	movwf	(?__div_to_l_+1)^0,c
  9674  00214C  0E00               	movlw	0
  9675  00214E  6E04               	movwf	(?__div_to_l_+2)^0,c
  9676  002150  0E00               	movlw	0
  9677  002152  6E05               	movwf	(?__div_to_l_+3)^0,c
  9678  002154  0012               	return	
  9679  002156                     l4138:
  9680  002156  3408               	rlcf	(__div_to_l_@f2+2)^0,w,c
  9681  002158  3409               	rlcf	(__div_to_l_@f2+3)^0,w,c
  9682  00215A  6E0E               	movwf	__div_to_l_@cntr^0,c
  9683  00215C  500E               	movf	__div_to_l_@cntr^0,w,c
  9684  00215E  B4D8               	btfsc	status,2,c
  9685  002160  D7F1               	goto	u3370
  9686  002162  8E04               	bsf	(__div_to_l_@f1+2)^0,7,c
  9687  002164  0EFF               	movlw	255
  9688  002166  1602               	andwf	__div_to_l_@f1^0,f,c
  9689  002168  0EFF               	movlw	255
  9690  00216A  1603               	andwf	(__div_to_l_@f1+1)^0,f,c
  9691  00216C  0EFF               	movlw	255
  9692  00216E  1604               	andwf	(__div_to_l_@f1+2)^0,f,c
  9693  002170  0E00               	movlw	0
  9694  002172  1605               	andwf	(__div_to_l_@f1+3)^0,f,c
  9695  002174  8E08               	bsf	(__div_to_l_@f2+2)^0,7,c
  9696  002176  0EFF               	movlw	255
  9697  002178  1606               	andwf	__div_to_l_@f2^0,f,c
  9698  00217A  0EFF               	movlw	255
  9699  00217C  1607               	andwf	(__div_to_l_@f2+1)^0,f,c
  9700  00217E  0EFF               	movlw	255
  9701  002180  1608               	andwf	(__div_to_l_@f2+2)^0,f,c
  9702  002182  0E00               	movlw	0
  9703  002184  1609               	andwf	(__div_to_l_@f2+3)^0,f,c
  9704  002186  0E00               	movlw	0
  9705  002188  6E0A               	movwf	__div_to_l_@quot^0,c
  9706  00218A  0E00               	movlw	0
  9707  00218C  6E0B               	movwf	(__div_to_l_@quot+1)^0,c
  9708  00218E  0E00               	movlw	0
  9709  002190  6E0C               	movwf	(__div_to_l_@quot+2)^0,c
  9710  002192  0E00               	movlw	0
  9711  002194  6E0D               	movwf	(__div_to_l_@quot+3)^0,c
  9712  002196  0E7F               	movlw	127
  9713  002198  5E0F               	subwf	__div_to_l_@exp1^0,f,c
  9714  00219A  500E               	movf	__div_to_l_@cntr^0,w,c
  9715  00219C  0FA0               	addlw	160
  9716  00219E  5E0F               	subwf	__div_to_l_@exp1^0,f,c
  9717  0021A0  0E20               	movlw	32
  9718  0021A2  6E0E               	movwf	__div_to_l_@cntr^0,c
  9719  0021A4                     l4158:
  9720  0021A4  90D8               	bcf	status,0,c
  9721  0021A6  360A               	rlcf	__div_to_l_@quot^0,f,c
  9722  0021A8  360B               	rlcf	(__div_to_l_@quot+1)^0,f,c
  9723  0021AA  360C               	rlcf	(__div_to_l_@quot+2)^0,f,c
  9724  0021AC  360D               	rlcf	(__div_to_l_@quot+3)^0,f,c
  9725  0021AE  5006               	movf	__div_to_l_@f2^0,w,c
  9726  0021B0  5C02               	subwf	__div_to_l_@f1^0,w,c
  9727  0021B2  5007               	movf	(__div_to_l_@f2+1)^0,w,c
  9728  0021B4  5803               	subwfb	(__div_to_l_@f1+1)^0,w,c
  9729  0021B6  5008               	movf	(__div_to_l_@f2+2)^0,w,c
  9730  0021B8  5804               	subwfb	(__div_to_l_@f1+2)^0,w,c
  9731  0021BA  5009               	movf	(__div_to_l_@f2+3)^0,w,c
  9732  0021BC  5805               	subwfb	(__div_to_l_@f1+3)^0,w,c
  9733  0021BE  A0D8               	btfss	status,0,c
  9734  0021C0  D009               	goto	l4166
  9735  0021C2  5006               	movf	__div_to_l_@f2^0,w,c
  9736  0021C4  5E02               	subwf	__div_to_l_@f1^0,f,c
  9737  0021C6  5007               	movf	(__div_to_l_@f2+1)^0,w,c
  9738  0021C8  5A03               	subwfb	(__div_to_l_@f1+1)^0,f,c
  9739  0021CA  5008               	movf	(__div_to_l_@f2+2)^0,w,c
  9740  0021CC  5A04               	subwfb	(__div_to_l_@f1+2)^0,f,c
  9741  0021CE  5009               	movf	(__div_to_l_@f2+3)^0,w,c
  9742  0021D0  5A05               	subwfb	(__div_to_l_@f1+3)^0,f,c
  9743  0021D2  800A               	bsf	__div_to_l_@quot^0,0,c
  9744  0021D4                     l4166:
  9745  0021D4  90D8               	bcf	status,0,c
  9746  0021D6  3602               	rlcf	__div_to_l_@f1^0,f,c
  9747  0021D8  3603               	rlcf	(__div_to_l_@f1+1)^0,f,c
  9748  0021DA  3604               	rlcf	(__div_to_l_@f1+2)^0,f,c
  9749  0021DC  3605               	rlcf	(__div_to_l_@f1+3)^0,f,c
  9750  0021DE  2E0E               	decfsz	__div_to_l_@cntr^0,f,c
  9751  0021E0  D7E1               	goto	l4158
  9752  0021E2  AE0F               	btfss	__div_to_l_@exp1^0,7,c
  9753  0021E4  D00D               	goto	l4182
  9754  0021E6  500F               	movf	__div_to_l_@exp1^0,w,c
  9755  0021E8  0A80               	xorlw	128
  9756  0021EA  0F9F               	addlw	159
  9757  0021EC  A0D8               	btfss	status,0,c
  9758  0021EE  D7AA               	goto	u3370
  9759  0021F0                     l4178:
  9760  0021F0  90D8               	bcf	status,0,c
  9761  0021F2  320D               	rrcf	(__div_to_l_@quot+3)^0,f,c
  9762  0021F4  320C               	rrcf	(__div_to_l_@quot+2)^0,f,c
  9763  0021F6  320B               	rrcf	(__div_to_l_@quot+1)^0,f,c
  9764  0021F8  320A               	rrcf	__div_to_l_@quot^0,f,c
  9765  0021FA  3E0F               	incfsz	__div_to_l_@exp1^0,f,c
  9766  0021FC  D7F9               	goto	l4178
  9767  0021FE  D00D               	goto	u3430
  9768  002200                     l4182:
  9769  002200  0E1F               	movlw	31
  9770  002202  640F               	cpfsgt	__div_to_l_@exp1^0,c
  9771  002204  D007               	goto	l4190
  9772  002206  D79E               	goto	u3370
  9773  002208                     l4188:
  9774  002208  90D8               	bcf	status,0,c
  9775  00220A  360A               	rlcf	__div_to_l_@quot^0,f,c
  9776  00220C  360B               	rlcf	(__div_to_l_@quot+1)^0,f,c
  9777  00220E  360C               	rlcf	(__div_to_l_@quot+2)^0,f,c
  9778  002210  360D               	rlcf	(__div_to_l_@quot+3)^0,f,c
  9779  002212  060F               	decf	__div_to_l_@exp1^0,f,c
  9780  002214                     l4190:
  9781  002214  500F               	movf	__div_to_l_@exp1^0,w,c
  9782  002216  A4D8               	btfss	status,2,c
  9783  002218  D7F7               	goto	l4188
  9784  00221A                     u3430:
  9785  00221A  C00A  F002         	movff	__div_to_l_@quot,?__div_to_l_
  9786  00221E  C00B  F003         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9787  002222  C00C  F004         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9788  002226  C00D  F005         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9789  00222A  0012               	return		;funcret
  9790  00222C                     __end_of__div_to_l_:
  9791                           	callstack 0
  9792                           
  9793 ;; *************** function ___xxtofl *****************
  9794 ;; Defined at:
  9795 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  sign            1    wreg     unsigned char 
  9798 ;;  val             4    1[COMRAM] long 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  sign            1    9[COMRAM] unsigned char 
  9801 ;;  arg             4   11[COMRAM] unsigned long 
  9802 ;;  exp             1   10[COMRAM] unsigned char 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  4    1[COMRAM] unsigned char 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;Total ram usage:       14 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    1
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_LoRaGetFrequency
  9823 ;;		_printf
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text54
  9828  001EFA                     __ptext54:
  9829                           	callstack 0
  9830  001EFA                     ___xxtofl:
  9831                           	callstack 27
  9832                           
  9833                           ;incstack = 0
  9834                           ;___xxtofl@sign stored from wreg
  9835  001EFA  6E0A               	movwf	___xxtofl@sign^0,c
  9836  001EFC  500A               	movf	___xxtofl@sign^0,w,c
  9837  001EFE  A4D8               	btfss	status,2,c
  9838  001F00  AE05               	btfss	(___xxtofl@val+3)^0,7,c
  9839  001F02  D01A               	goto	l1400
  9840  001F04  C002  F006         	movff	___xxtofl@val,??___xxtofl
  9841  001F08  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  9842  001F0C  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  9843  001F10  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  9844  001F14  1E06               	comf	??___xxtofl^0,f,c
  9845  001F16  1E07               	comf	(??___xxtofl+1)^0,f,c
  9846  001F18  1E08               	comf	(??___xxtofl+2)^0,f,c
  9847  001F1A  1E09               	comf	(??___xxtofl+3)^0,f,c
  9848  001F1C  2A06               	incf	??___xxtofl^0,f,c
  9849  001F1E  0E00               	movlw	0
  9850  001F20  2207               	addwfc	(??___xxtofl+1)^0,f,c
  9851  001F22  2208               	addwfc	(??___xxtofl+2)^0,f,c
  9852  001F24  2209               	addwfc	(??___xxtofl+3)^0,f,c
  9853  001F26  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  9854  001F2A  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  9855  001F2E  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  9856  001F32  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  9857  001F36  D008               	goto	l4338
  9858  001F38                     l1400:
  9859  001F38  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  9860  001F3C  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9861  001F40  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9862  001F44  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9863  001F48                     l4338:
  9864  001F48  5002               	movf	___xxtofl@val^0,w,c
  9865  001F4A  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  9866  001F4C  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  9867  001F4E  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  9868  001F50  A4D8               	btfss	status,2,c
  9869  001F52  D009               	goto	l4344
  9870  001F54  0E00               	movlw	0
  9871  001F56  6E02               	movwf	?___xxtofl^0,c
  9872  001F58  0E00               	movlw	0
  9873  001F5A  6E03               	movwf	(?___xxtofl+1)^0,c
  9874  001F5C  0E00               	movlw	0
  9875  001F5E  6E04               	movwf	(?___xxtofl+2)^0,c
  9876  001F60  0E00               	movlw	0
  9877  001F62  6E05               	movwf	(?___xxtofl+3)^0,c
  9878  001F64  0012               	return	
  9879  001F66                     l4344:
  9880  001F66  0E96               	movlw	150
  9881  001F68  6E0B               	movwf	___xxtofl@exp^0,c
  9882  001F6A  D006               	goto	l4348
  9883  001F6C                     l4346:
  9884  001F6C  2A0B               	incf	___xxtofl@exp^0,f,c
  9885  001F6E  90D8               	bcf	status,0,c
  9886  001F70  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  9887  001F72  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  9888  001F74  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  9889  001F76  320C               	rrcf	___xxtofl@arg^0,f,c
  9890  001F78                     l4348:
  9891  001F78  0E00               	movlw	0
  9892  001F7A  140C               	andwf	___xxtofl@arg^0,w,c
  9893  001F7C  6E06               	movwf	??___xxtofl^0,c
  9894  001F7E  0E00               	movlw	0
  9895  001F80  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  9896  001F82  6E07               	movwf	(??___xxtofl+1)^0,c
  9897  001F84  0E00               	movlw	0
  9898  001F86  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  9899  001F88  6E08               	movwf	(??___xxtofl+2)^0,c
  9900  001F8A  0EFE               	movlw	254
  9901  001F8C  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  9902  001F8E  6E09               	movwf	(??___xxtofl+3)^0,c
  9903  001F90  5006               	movf	??___xxtofl^0,w,c
  9904  001F92  1007               	iorwf	(??___xxtofl+1)^0,w,c
  9905  001F94  1008               	iorwf	(??___xxtofl+2)^0,w,c
  9906  001F96  1009               	iorwf	(??___xxtofl+3)^0,w,c
  9907  001F98  B4D8               	btfsc	status,2,c
  9908  001F9A  D00D               	goto	l1407
  9909  001F9C  D7E7               	goto	l4346
  9910  001F9E                     l4350:
  9911  001F9E  2A0B               	incf	___xxtofl@exp^0,f,c
  9912  001FA0  0E01               	movlw	1
  9913  001FA2  260C               	addwf	___xxtofl@arg^0,f,c
  9914  001FA4  0E00               	movlw	0
  9915  001FA6  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  9916  001FA8  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  9917  001FAA  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  9918  001FAC  90D8               	bcf	status,0,c
  9919  001FAE  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  9920  001FB0  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  9921  001FB2  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  9922  001FB4  320C               	rrcf	___xxtofl@arg^0,f,c
  9923  001FB6                     l1407:
  9924  001FB6  0E00               	movlw	0
  9925  001FB8  140C               	andwf	___xxtofl@arg^0,w,c
  9926  001FBA  6E06               	movwf	??___xxtofl^0,c
  9927  001FBC  0E00               	movlw	0
  9928  001FBE  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  9929  001FC0  6E07               	movwf	(??___xxtofl+1)^0,c
  9930  001FC2  0E00               	movlw	0
  9931  001FC4  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  9932  001FC6  6E08               	movwf	(??___xxtofl+2)^0,c
  9933  001FC8  0EFF               	movlw	255
  9934  001FCA  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  9935  001FCC  6E09               	movwf	(??___xxtofl+3)^0,c
  9936  001FCE  5006               	movf	??___xxtofl^0,w,c
  9937  001FD0  1007               	iorwf	(??___xxtofl+1)^0,w,c
  9938  001FD2  1008               	iorwf	(??___xxtofl+2)^0,w,c
  9939  001FD4  1009               	iorwf	(??___xxtofl+3)^0,w,c
  9940  001FD6  B4D8               	btfsc	status,2,c
  9941  001FD8  D007               	goto	l4358
  9942  001FDA  D7E1               	goto	l4350
  9943  001FDC                     l4356:
  9944  001FDC  060B               	decf	___xxtofl@exp^0,f,c
  9945  001FDE  90D8               	bcf	status,0,c
  9946  001FE0  360C               	rlcf	___xxtofl@arg^0,f,c
  9947  001FE2  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  9948  001FE4  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  9949  001FE6  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  9950  001FE8                     l4358:
  9951  001FE8  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  9952  001FEA  D003               	goto	u3720
  9953  001FEC  0E02               	movlw	2
  9954  001FEE  600B               	cpfslt	___xxtofl@exp^0,c
  9955  001FF0  D7F5               	goto	l4356
  9956  001FF2                     u3720:
  9957  001FF2  A00B               	btfss	___xxtofl@exp^0,0,c
  9958  001FF4  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  9959  001FF6  90D8               	bcf	status,0,c
  9960  001FF8  320B               	rrcf	___xxtofl@exp^0,f,c
  9961  001FFA  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  9962  001FFE  6A07               	clrf	(??___xxtofl+1)^0,c
  9963  002000  6A08               	clrf	(??___xxtofl+2)^0,c
  9964  002002  6A09               	clrf	(??___xxtofl+3)^0,c
  9965  002004  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  9966  002008  6A08               	clrf	(??___xxtofl+2)^0,c
  9967  00200A  6A07               	clrf	(??___xxtofl+1)^0,c
  9968  00200C  6A06               	clrf	??___xxtofl^0,c
  9969  00200E  5006               	movf	??___xxtofl^0,w,c
  9970  002010  120C               	iorwf	___xxtofl@arg^0,f,c
  9971  002012  5007               	movf	(??___xxtofl+1)^0,w,c
  9972  002014  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  9973  002016  5008               	movf	(??___xxtofl+2)^0,w,c
  9974  002018  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  9975  00201A  5009               	movf	(??___xxtofl+3)^0,w,c
  9976  00201C  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  9977  00201E  500A               	movf	___xxtofl@sign^0,w,c
  9978  002020  A4D8               	btfss	status,2,c
  9979  002022  AE05               	btfss	(___xxtofl@val+3)^0,7,c
  9980  002024  D001               	goto	l4374
  9981  002026  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  9982  002028                     l4374:
  9983  002028  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  9984  00202C  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  9985  002030  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  9986  002034  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  9987  002038  0012               	return		;funcret
  9988  00203A                     __end_of___xxtofl:
  9989                           	callstack 0
  9990                           
  9991 ;; *************** function ___wmul *****************
  9992 ;; Defined at:
  9993 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  multiplier      2    1[COMRAM] unsigned int 
  9996 ;;  multiplicand    2    3[COMRAM] unsigned int 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;  product         2    5[COMRAM] unsigned int 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  2    1[COMRAM] unsigned int 
 10001 ;; Registers used:
 10002 ;;		wreg, status,2, status,0, prodl, prodh
 10003 ;; Tracked objects:
 10004 ;;		On entry : 3F/0
 10005 ;;		On exit  : 3F/0
 10006 ;;		Unchanged: 3F/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;Total ram usage:        6 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    1
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_printf
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text55
 10023  002D0A                     __ptext55:
 10024                           	callstack 0
 10025  002D0A                     ___wmul:
 10026                           	callstack 27
 10027                           
 10028                           ; BSR set to: 0
 10029                           
 10030                           ;incstack = 0
 10031  002D0A  5002               	movf	___wmul@multiplier^0,w,c
 10032  002D0C  0204               	mulwf	___wmul@multiplicand^0,c
 10033  002D0E  CFF3 F006          	movff	prodl,___wmul@product
 10034  002D12  CFF4 F007          	movff	prodh,___wmul@product+1
 10035  002D16  5002               	movf	___wmul@multiplier^0,w,c
 10036  002D18  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 10037  002D1A  50F3               	movf	243,w,c
 10038  002D1C  2607               	addwf	(___wmul@product+1)^0,f,c
 10039  002D1E  5003               	movf	(___wmul@multiplier+1)^0,w,c
 10040  002D20  0204               	mulwf	___wmul@multiplicand^0,c
 10041  002D22  50F3               	movf	243,w,c
 10042  002D24  2607               	addwf	(___wmul@product+1)^0,f,c
 10043                           
 10044                           ; BSR set to: 0
 10045  002D26  C006  F002         	movff	___wmul@product,?___wmul
 10046  002D2A  C007  F003         	movff	___wmul@product+1,?___wmul+1
 10047                           
 10048                           ; BSR set to: 0
 10049  002D2E  0012               	return		;funcret
 10050  002D30                     __end_of___wmul:
 10051                           	callstack 0
 10052                           
 10053 ;; *************** function ___llmod *****************
 10054 ;; Defined at:
 10055 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;  dividend        4   14[COMRAM] unsigned long 
 10058 ;;  divisor         4   18[COMRAM] unsigned long 
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;  counter         1   22[COMRAM] unsigned char 
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  4   14[COMRAM] unsigned long 
 10063 ;; Registers used:
 10064 ;;		wreg, status,2, status,0
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10070 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;Total ram usage:        9 bytes
 10075 ;; Hardware stack levels used:    1
 10076 ;; Hardware stack levels required when called:    1
 10077 ;; This function calls:
 10078 ;;		Nothing
 10079 ;; This function is called by:
 10080 ;;		_printf
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           	psect	text56
 10085  00275C                     __ptext56:
 10086                           	callstack 0
 10087  00275C                     ___llmod:
 10088                           	callstack 27
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;incstack = 0
 10092  00275C  5013               	movf	___llmod@divisor^0,w,c
 10093  00275E  1014               	iorwf	(___llmod@divisor+1)^0,w,c
 10094  002760  1015               	iorwf	(___llmod@divisor+2)^0,w,c
 10095  002762  1016               	iorwf	(___llmod@divisor+3)^0,w,c
 10096  002764  B4D8               	btfsc	status,2,c
 10097  002766  D024               	goto	l1165
 10098  002768  0E01               	movlw	1
 10099  00276A  6E17               	movwf	___llmod@counter^0,c
 10100  00276C  D006               	goto	l4322
 10101  00276E                     l4320:
 10102  00276E  90D8               	bcf	status,0,c
 10103  002770  3613               	rlcf	___llmod@divisor^0,f,c
 10104  002772  3614               	rlcf	(___llmod@divisor+1)^0,f,c
 10105  002774  3615               	rlcf	(___llmod@divisor+2)^0,f,c
 10106  002776  3616               	rlcf	(___llmod@divisor+3)^0,f,c
 10107  002778  2A17               	incf	___llmod@counter^0,f,c
 10108  00277A                     l4322:
 10109  00277A  AE16               	btfss	(___llmod@divisor+3)^0,7,c
 10110  00277C  D7F8               	goto	l4320
 10111  00277E                     u3640:
 10112  00277E  5013               	movf	___llmod@divisor^0,w,c
 10113  002780  5C0F               	subwf	___llmod@dividend^0,w,c
 10114  002782  5014               	movf	(___llmod@divisor+1)^0,w,c
 10115  002784  5810               	subwfb	(___llmod@dividend+1)^0,w,c
 10116  002786  5015               	movf	(___llmod@divisor+2)^0,w,c
 10117  002788  5811               	subwfb	(___llmod@dividend+2)^0,w,c
 10118  00278A  5016               	movf	(___llmod@divisor+3)^0,w,c
 10119  00278C  5812               	subwfb	(___llmod@dividend+3)^0,w,c
 10120  00278E  A0D8               	btfss	status,0,c
 10121  002790  D008               	goto	l4328
 10122  002792  5013               	movf	___llmod@divisor^0,w,c
 10123  002794  5E0F               	subwf	___llmod@dividend^0,f,c
 10124  002796  5014               	movf	(___llmod@divisor+1)^0,w,c
 10125  002798  5A10               	subwfb	(___llmod@dividend+1)^0,f,c
 10126  00279A  5015               	movf	(___llmod@divisor+2)^0,w,c
 10127  00279C  5A11               	subwfb	(___llmod@dividend+2)^0,f,c
 10128  00279E  5016               	movf	(___llmod@divisor+3)^0,w,c
 10129  0027A0  5A12               	subwfb	(___llmod@dividend+3)^0,f,c
 10130  0027A2                     l4328:
 10131  0027A2  90D8               	bcf	status,0,c
 10132  0027A4  3216               	rrcf	(___llmod@divisor+3)^0,f,c
 10133  0027A6  3215               	rrcf	(___llmod@divisor+2)^0,f,c
 10134  0027A8  3214               	rrcf	(___llmod@divisor+1)^0,f,c
 10135  0027AA  3213               	rrcf	___llmod@divisor^0,f,c
 10136  0027AC  2E17               	decfsz	___llmod@counter^0,f,c
 10137  0027AE  D7E7               	goto	u3640
 10138  0027B0                     l1165:
 10139  0027B0  C00F  F00F         	movff	___llmod@dividend,?___llmod
 10140  0027B4  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
 10141  0027B8  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
 10142  0027BC  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
 10143  0027C0  0012               	return		;funcret
 10144  0027C2                     __end_of___llmod:
 10145                           	callstack 0
 10146                           
 10147 ;; *************** function ___lldiv *****************
 10148 ;; Defined at:
 10149 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;  dividend        4    1[COMRAM] unsigned long 
 10152 ;;  divisor         4    5[COMRAM] unsigned long 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;  quotient        4    9[COMRAM] unsigned long 
 10155 ;;  counter         1   13[COMRAM] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  4    1[COMRAM] unsigned long 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/F
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10165 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10168 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10169 ;;Total ram usage:       13 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    1
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_I2C1_Initialize
 10176 ;;		_printf
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text57
 10181  002590                     __ptext57:
 10182                           	callstack 0
 10183  002590                     ___lldiv:
 10184                           	callstack 27
 10185                           
 10186                           ;incstack = 0
 10187  002590  0E00               	movlw	0
 10188  002592  6E0A               	movwf	___lldiv@quotient^0,c
 10189  002594  0E00               	movlw	0
 10190  002596  6E0B               	movwf	(___lldiv@quotient+1)^0,c
 10191  002598  0E00               	movlw	0
 10192  00259A  6E0C               	movwf	(___lldiv@quotient+2)^0,c
 10193  00259C  0E00               	movlw	0
 10194  00259E  6E0D               	movwf	(___lldiv@quotient+3)^0,c
 10195  0025A0  5006               	movf	___lldiv@divisor^0,w,c
 10196  0025A2  1007               	iorwf	(___lldiv@divisor+1)^0,w,c
 10197  0025A4  1008               	iorwf	(___lldiv@divisor+2)^0,w,c
 10198  0025A6  1009               	iorwf	(___lldiv@divisor+3)^0,w,c
 10199  0025A8  B4D8               	btfsc	status,2,c
 10200  0025AA  D02A               	goto	l750
 10201  0025AC  0E01               	movlw	1
 10202  0025AE  6E0E               	movwf	___lldiv@counter^0,c
 10203  0025B0  D006               	goto	l4206
 10204  0025B2                     l4204:
 10205  0025B2  90D8               	bcf	status,0,c
 10206  0025B4  3606               	rlcf	___lldiv@divisor^0,f,c
 10207  0025B6  3607               	rlcf	(___lldiv@divisor+1)^0,f,c
 10208  0025B8  3608               	rlcf	(___lldiv@divisor+2)^0,f,c
 10209  0025BA  3609               	rlcf	(___lldiv@divisor+3)^0,f,c
 10210  0025BC  2A0E               	incf	___lldiv@counter^0,f,c
 10211  0025BE                     l4206:
 10212  0025BE  AE09               	btfss	(___lldiv@divisor+3)^0,7,c
 10213  0025C0  D7F8               	goto	l4204
 10214  0025C2                     u3450:
 10215  0025C2  90D8               	bcf	status,0,c
 10216  0025C4  360A               	rlcf	___lldiv@quotient^0,f,c
 10217  0025C6  360B               	rlcf	(___lldiv@quotient+1)^0,f,c
 10218  0025C8  360C               	rlcf	(___lldiv@quotient+2)^0,f,c
 10219  0025CA  360D               	rlcf	(___lldiv@quotient+3)^0,f,c
 10220  0025CC  5006               	movf	___lldiv@divisor^0,w,c
 10221  0025CE  5C02               	subwf	___lldiv@dividend^0,w,c
 10222  0025D0  5007               	movf	(___lldiv@divisor+1)^0,w,c
 10223  0025D2  5803               	subwfb	(___lldiv@dividend+1)^0,w,c
 10224  0025D4  5008               	movf	(___lldiv@divisor+2)^0,w,c
 10225  0025D6  5804               	subwfb	(___lldiv@dividend+2)^0,w,c
 10226  0025D8  5009               	movf	(___lldiv@divisor+3)^0,w,c
 10227  0025DA  5805               	subwfb	(___lldiv@dividend+3)^0,w,c
 10228  0025DC  A0D8               	btfss	status,0,c
 10229  0025DE  D009               	goto	l4216
 10230  0025E0  5006               	movf	___lldiv@divisor^0,w,c
 10231  0025E2  5E02               	subwf	___lldiv@dividend^0,f,c
 10232  0025E4  5007               	movf	(___lldiv@divisor+1)^0,w,c
 10233  0025E6  5A03               	subwfb	(___lldiv@dividend+1)^0,f,c
 10234  0025E8  5008               	movf	(___lldiv@divisor+2)^0,w,c
 10235  0025EA  5A04               	subwfb	(___lldiv@dividend+2)^0,f,c
 10236  0025EC  5009               	movf	(___lldiv@divisor+3)^0,w,c
 10237  0025EE  5A05               	subwfb	(___lldiv@dividend+3)^0,f,c
 10238  0025F0  800A               	bsf	___lldiv@quotient^0,0,c
 10239  0025F2                     l4216:
 10240  0025F2  90D8               	bcf	status,0,c
 10241  0025F4  3209               	rrcf	(___lldiv@divisor+3)^0,f,c
 10242  0025F6  3208               	rrcf	(___lldiv@divisor+2)^0,f,c
 10243  0025F8  3207               	rrcf	(___lldiv@divisor+1)^0,f,c
 10244  0025FA  3206               	rrcf	___lldiv@divisor^0,f,c
 10245  0025FC  2E0E               	decfsz	___lldiv@counter^0,f,c
 10246  0025FE  D7E1               	goto	u3450
 10247  002600                     l750:
 10248  002600  C00A  F002         	movff	___lldiv@quotient,?___lldiv
 10249  002604  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
 10250  002608  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
 10251  00260C  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
 10252  002610  0012               	return		;funcret
 10253  002612                     __end_of___lldiv:
 10254                           	callstack 0
 10255                           
 10256 ;; *************** function ___fltol *****************
 10257 ;; Defined at:
 10258 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  f1              4   40[COMRAM] unsigned long 
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;  exp1            1   49[COMRAM] unsigned char 
 10263 ;;  sign1           1   48[COMRAM] unsigned char 
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  4   40[COMRAM] long 
 10266 ;; Registers used:
 10267 ;;		wreg, status,2, status,0
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/F
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;Total ram usage:       10 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    1
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_LoRaSetFrequency
 10284 ;;		_printf
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           	psect	text58
 10289  0023C8                     __ptext58:
 10290                           	callstack 0
 10291  0023C8                     ___fltol:
 10292                           	callstack 27
 10293                           
 10294                           ;incstack = 0
 10295  0023C8  342B               	rlcf	(___fltol@f1+2)^0,w,c
 10296  0023CA  342C               	rlcf	(___fltol@f1+3)^0,w,c
 10297  0023CC  6E32               	movwf	___fltol@exp1^0,c
 10298  0023CE  5032               	movf	___fltol@exp1^0,w,c
 10299  0023D0  A4D8               	btfss	status,2,c
 10300  0023D2  D009               	goto	l4278
 10301  0023D4                     u3560:
 10302  0023D4  0E00               	movlw	0
 10303  0023D6  6E29               	movwf	?___fltol^0,c
 10304  0023D8  0E00               	movlw	0
 10305  0023DA  6E2A               	movwf	(?___fltol+1)^0,c
 10306  0023DC  0E00               	movlw	0
 10307  0023DE  6E2B               	movwf	(?___fltol+2)^0,c
 10308  0023E0  0E00               	movlw	0
 10309  0023E2  6E2C               	movwf	(?___fltol+3)^0,c
 10310  0023E4  0012               	return	
 10311  0023E6                     l4278:
 10312  0023E6  C029  F02D         	movff	___fltol@f1,??___fltol
 10313  0023EA  C02A  F02E         	movff	___fltol@f1+1,??___fltol+1
 10314  0023EE  C02B  F02F         	movff	___fltol@f1+2,??___fltol+2
 10315  0023F2  C02C  F030         	movff	___fltol@f1+3,??___fltol+3
 10316  0023F6  0E20               	movlw	32
 10317  0023F8  D005               	goto	u3570
 10318  0023FA                     u3575:
 10319  0023FA  90D8               	bcf	status,0,c
 10320  0023FC  3230               	rrcf	(??___fltol+3)^0,f,c
 10321  0023FE  322F               	rrcf	(??___fltol+2)^0,f,c
 10322  002400  322E               	rrcf	(??___fltol+1)^0,f,c
 10323  002402  322D               	rrcf	??___fltol^0,f,c
 10324  002404                     u3570:
 10325  002404  2EE8               	decfsz	wreg,f,c
 10326  002406  D7F9               	goto	u3575
 10327  002408  502D               	movf	??___fltol^0,w,c
 10328  00240A  6E31               	movwf	___fltol@sign1^0,c
 10329  00240C  8E2B               	bsf	(___fltol@f1+2)^0,7,c
 10330  00240E  0EFF               	movlw	255
 10331  002410  1629               	andwf	___fltol@f1^0,f,c
 10332  002412  0EFF               	movlw	255
 10333  002414  162A               	andwf	(___fltol@f1+1)^0,f,c
 10334  002416  0EFF               	movlw	255
 10335  002418  162B               	andwf	(___fltol@f1+2)^0,f,c
 10336  00241A  0E00               	movlw	0
 10337  00241C  162C               	andwf	(___fltol@f1+3)^0,f,c
 10338  00241E  0E96               	movlw	150
 10339  002420  5E32               	subwf	___fltol@exp1^0,f,c
 10340  002422  AE32               	btfss	___fltol@exp1^0,7,c
 10341  002424  D00D               	goto	l4298
 10342  002426  5032               	movf	___fltol@exp1^0,w,c
 10343  002428  0A80               	xorlw	128
 10344  00242A  0F97               	addlw	151
 10345  00242C  A0D8               	btfss	status,0,c
 10346  00242E  D7D2               	goto	u3560
 10347  002430                     l4294:
 10348  002430  90D8               	bcf	status,0,c
 10349  002432  322C               	rrcf	(___fltol@f1+3)^0,f,c
 10350  002434  322B               	rrcf	(___fltol@f1+2)^0,f,c
 10351  002436  322A               	rrcf	(___fltol@f1+1)^0,f,c
 10352  002438  3229               	rrcf	___fltol@f1^0,f,c
 10353  00243A  3E32               	incfsz	___fltol@exp1^0,f,c
 10354  00243C  D7F9               	goto	l4294
 10355  00243E  D00D               	goto	u3610
 10356  002440                     l4298:
 10357  002440  0E1F               	movlw	31
 10358  002442  6432               	cpfsgt	___fltol@exp1^0,c
 10359  002444  D007               	goto	l4306
 10360  002446  D7C6               	goto	u3560
 10361  002448                     l4304:
 10362  002448  90D8               	bcf	status,0,c
 10363  00244A  3629               	rlcf	___fltol@f1^0,f,c
 10364  00244C  362A               	rlcf	(___fltol@f1+1)^0,f,c
 10365  00244E  362B               	rlcf	(___fltol@f1+2)^0,f,c
 10366  002450  362C               	rlcf	(___fltol@f1+3)^0,f,c
 10367  002452  0632               	decf	___fltol@exp1^0,f,c
 10368  002454                     l4306:
 10369  002454  5032               	movf	___fltol@exp1^0,w,c
 10370  002456  A4D8               	btfss	status,2,c
 10371  002458  D7F7               	goto	l4304
 10372  00245A                     u3610:
 10373  00245A  5031               	movf	___fltol@sign1^0,w,c
 10374  00245C  B4D8               	btfsc	status,2,c
 10375  00245E  D008               	goto	l4312
 10376  002460  1E2C               	comf	(___fltol@f1+3)^0,f,c
 10377  002462  1E2B               	comf	(___fltol@f1+2)^0,f,c
 10378  002464  1E2A               	comf	(___fltol@f1+1)^0,f,c
 10379  002466  6C29               	negf	___fltol@f1^0,c
 10380  002468  0E00               	movlw	0
 10381  00246A  222A               	addwfc	(___fltol@f1+1)^0,f,c
 10382  00246C  222B               	addwfc	(___fltol@f1+2)^0,f,c
 10383  00246E  222C               	addwfc	(___fltol@f1+3)^0,f,c
 10384  002470                     l4312:
 10385  002470  C029  F029         	movff	___fltol@f1,?___fltol
 10386  002474  C02A  F02A         	movff	___fltol@f1+1,?___fltol+1
 10387  002478  C02B  F02B         	movff	___fltol@f1+2,?___fltol+2
 10388  00247C  C02C  F02C         	movff	___fltol@f1+3,?___fltol+3
 10389  002480  0012               	return		;funcret
 10390  002482                     __end_of___fltol:
 10391                           	callstack 0
 10392                           
 10393 ;; *************** function ___flsub *****************
 10394 ;; Defined at:
 10395 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  b               4   71[COMRAM] long 
 10398 ;;  a               4   75[COMRAM] long 
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  4   71[COMRAM] long 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0, cstack
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10410 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;Total ram usage:        8 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    2
 10417 ;; This function calls:
 10418 ;;		___fladd
 10419 ;; This function is called by:
 10420 ;;		_printf
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text59
 10425  0029CE                     __ptext59:
 10426                           	callstack 0
 10427  0029CE                     ___flsub:
 10428                           	callstack 26
 10429                           
 10430                           ;incstack = 0
 10431  0029CE  0E00               	movlw	0
 10432  0029D0  1A4C               	xorwf	___flsub@a^0,f,c
 10433  0029D2  0E00               	movlw	0
 10434  0029D4  1A4D               	xorwf	(___flsub@a+1)^0,f,c
 10435  0029D6  0E00               	movlw	0
 10436  0029D8  1A4E               	xorwf	(___flsub@a+2)^0,f,c
 10437  0029DA  0E80               	movlw	128
 10438  0029DC  1A4F               	xorwf	(___flsub@a+3)^0,f,c
 10439  0029DE  C048  F038         	movff	___flsub@b,___fladd@b
 10440  0029E2  C049  F039         	movff	___flsub@b+1,___fladd@b+1
 10441  0029E6  C04A  F03A         	movff	___flsub@b+2,___fladd@b+2
 10442  0029EA  C04B  F03B         	movff	___flsub@b+3,___fladd@b+3
 10443  0029EE  C04C  F03C         	movff	___flsub@a,___fladd@a
 10444  0029F2  C04D  F03D         	movff	___flsub@a+1,___fladd@a+1
 10445  0029F6  C04E  F03E         	movff	___flsub@a+2,___fladd@a+2
 10446  0029FA  C04F  F03F         	movff	___flsub@a+3,___fladd@a+3
 10447  0029FE  ECC2  F007         	call	___fladd	;wreg free
 10448  002A02  C038  F048         	movff	?___fladd,?___flsub
 10449  002A06  C039  F049         	movff	?___fladd+1,?___flsub+1
 10450  002A0A  C03A  F04A         	movff	?___fladd+2,?___flsub+2
 10451  002A0E  C03B  F04B         	movff	?___fladd+3,?___flsub+3
 10452  002A12  0012               	return		;funcret
 10453  002A14                     __end_of___flsub:
 10454                           	callstack 0
 10455                           
 10456 ;; *************** function ___fladd *****************
 10457 ;; Defined at:
 10458 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  b               4   55[COMRAM] long 
 10461 ;;  a               4   59[COMRAM] long 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  grs             1   70[COMRAM] unsigned char 
 10464 ;;  bexp            1   69[COMRAM] unsigned char 
 10465 ;;  aexp            1   68[COMRAM] unsigned char 
 10466 ;;  signs           1   67[COMRAM] unsigned char 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  4   55[COMRAM] unsigned char 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10476 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;Total ram usage:       16 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    1
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_printf
 10487 ;;		___flsub
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text60
 10492  000F84                     __ptext60:
 10493                           	callstack 0
 10494  000F84                     ___fladd:
 10495                           	callstack 26
 10496                           
 10497                           ;incstack = 0
 10498  000F84  503B               	movf	(___fladd@b+3)^0,w,c
 10499  000F86  0B80               	andlw	128
 10500  000F88  6E44               	movwf	___fladd@signs^0,c
 10501  000F8A  503B               	movf	(___fladd@b+3)^0,w,c
 10502  000F8C  243B               	addwf	(___fladd@b+3)^0,w,c
 10503  000F8E  6E46               	movwf	___fladd@bexp^0,c
 10504  000F90  BE3A               	btfsc	(___fladd@b+2)^0,7,c
 10505  000F92  8046               	bsf	___fladd@bexp^0,0,c
 10506  000F94  5046               	movf	___fladd@bexp^0,w,c
 10507  000F96  B4D8               	btfsc	status,2,c
 10508  000F98  D00D               	goto	l3562
 10509  000F9A  2846               	incf	___fladd@bexp^0,w,c
 10510  000F9C  A4D8               	btfss	status,2,c
 10511  000F9E  D008               	goto	l3558
 10512  000FA0  0E00               	movlw	0
 10513  000FA2  6E38               	movwf	___fladd@b^0,c
 10514  000FA4  0E00               	movlw	0
 10515  000FA6  6E39               	movwf	(___fladd@b+1)^0,c
 10516  000FA8  0E00               	movlw	0
 10517  000FAA  6E3A               	movwf	(___fladd@b+2)^0,c
 10518  000FAC  0E00               	movlw	0
 10519  000FAE  6E3B               	movwf	(___fladd@b+3)^0,c
 10520  000FB0                     l3558:
 10521  000FB0  8E3A               	bsf	(___fladd@b+2)^0,7,c
 10522  000FB2  D006               	goto	L5
 10523  000FB4                     l3562:
 10524  000FB4  0E00               	movlw	0
 10525  000FB6  6E38               	movwf	___fladd@b^0,c
 10526  000FB8  0E00               	movlw	0
 10527  000FBA  6E39               	movwf	(___fladd@b+1)^0,c
 10528  000FBC  0E00               	movlw	0
 10529  000FBE  6E3A               	movwf	(___fladd@b+2)^0,c
 10530  000FC0                     L5:
 10531  000FC0  0E00               	movlw	0
 10532  000FC2  6E3B               	movwf	(___fladd@b+3)^0,c
 10533  000FC4  503F               	movf	(___fladd@a+3)^0,w,c
 10534  000FC6  0B80               	andlw	128
 10535  000FC8  6E45               	movwf	___fladd@aexp^0,c
 10536  000FCA  5044               	movf	___fladd@signs^0,w,c
 10537  000FCC  1845               	xorwf	___fladd@aexp^0,w,c
 10538  000FCE  A4D8               	btfss	status,2,c
 10539  000FD0  8C44               	bsf	___fladd@signs^0,6,c
 10540  000FD2  503F               	movf	(___fladd@a+3)^0,w,c
 10541  000FD4  243F               	addwf	(___fladd@a+3)^0,w,c
 10542  000FD6  6E45               	movwf	___fladd@aexp^0,c
 10543  000FD8  BE3E               	btfsc	(___fladd@a+2)^0,7,c
 10544  000FDA  8045               	bsf	___fladd@aexp^0,0,c
 10545  000FDC  5045               	movf	___fladd@aexp^0,w,c
 10546  000FDE  B4D8               	btfsc	status,2,c
 10547  000FE0  D00D               	goto	l3586
 10548  000FE2  2845               	incf	___fladd@aexp^0,w,c
 10549  000FE4  A4D8               	btfss	status,2,c
 10550  000FE6  D008               	goto	l3582
 10551  000FE8  0E00               	movlw	0
 10552  000FEA  6E3C               	movwf	___fladd@a^0,c
 10553  000FEC  0E00               	movlw	0
 10554  000FEE  6E3D               	movwf	(___fladd@a+1)^0,c
 10555  000FF0  0E00               	movlw	0
 10556  000FF2  6E3E               	movwf	(___fladd@a+2)^0,c
 10557  000FF4  0E00               	movlw	0
 10558  000FF6  6E3F               	movwf	(___fladd@a+3)^0,c
 10559  000FF8                     l3582:
 10560  000FF8  8E3E               	bsf	(___fladd@a+2)^0,7,c
 10561  000FFA  D006               	goto	L6
 10562  000FFC                     l3586:
 10563  000FFC  0E00               	movlw	0
 10564  000FFE  6E3C               	movwf	___fladd@a^0,c
 10565  001000  0E00               	movlw	0
 10566  001002  6E3D               	movwf	(___fladd@a+1)^0,c
 10567  001004  0E00               	movlw	0
 10568  001006  6E3E               	movwf	(___fladd@a+2)^0,c
 10569  001008                     L6:
 10570  001008  0E00               	movlw	0
 10571  00100A  6E3F               	movwf	(___fladd@a+3)^0,c
 10572  00100C  5046               	movf	___fladd@bexp^0,w,c
 10573  00100E  5C45               	subwf	___fladd@aexp^0,w,c
 10574  001010  B0D8               	btfsc	status,0,c
 10575  001012  D022               	goto	l3624
 10576  001014  AC44               	btfss	___fladd@signs^0,6,c
 10577  001016  D002               	goto	l3594
 10578  001018  0E80               	movlw	128
 10579  00101A  1A44               	xorwf	___fladd@signs^0,f,c
 10580  00101C                     l3594:
 10581  00101C  C046  F047         	movff	___fladd@bexp,___fladd@grs
 10582  001020  C045  F046         	movff	___fladd@aexp,___fladd@bexp
 10583  001024  C047  F045         	movff	___fladd@grs,___fladd@aexp
 10584  001028  C038  F047         	movff	___fladd@b,___fladd@grs
 10585  00102C  C03C  F038         	movff	___fladd@a,___fladd@b
 10586  001030  C047  F03C         	movff	___fladd@grs,___fladd@a
 10587  001034  C039  F047         	movff	___fladd@b+1,___fladd@grs
 10588  001038  C03D  F039         	movff	___fladd@a+1,___fladd@b+1
 10589  00103C  C047  F03D         	movff	___fladd@grs,___fladd@a+1
 10590  001040  C03A  F047         	movff	___fladd@b+2,___fladd@grs
 10591  001044  C03E  F03A         	movff	___fladd@a+2,___fladd@b+2
 10592  001048  C047  F03E         	movff	___fladd@grs,___fladd@a+2
 10593  00104C  C03B  F047         	movff	___fladd@b+3,___fladd@grs
 10594  001050  C03F  F03B         	movff	___fladd@a+3,___fladd@b+3
 10595  001054  C047  F03F         	movff	___fladd@grs,___fladd@a+3
 10596  001058                     l3624:
 10597  001058  0E00               	movlw	0
 10598  00105A  6E47               	movwf	___fladd@grs^0,c
 10599  00105C  5046               	movf	___fladd@bexp^0,w,c
 10600  00105E  C045  F040         	movff	___fladd@aexp,??___fladd
 10601  001062  6A41               	clrf	(??___fladd+1)^0,c
 10602  001064  5E40               	subwf	??___fladd^0,f,c
 10603  001066  0E00               	movlw	0
 10604  001068  5A41               	subwfb	(??___fladd+1)^0,f,c
 10605  00106A  BE41               	btfsc	(??___fladd+1)^0,7,c
 10606  00106C  D02C               	goto	l1274
 10607  00106E  5041               	movf	(??___fladd+1)^0,w,c
 10608  001070  E104               	bnz	u2520
 10609  001072  0E1A               	movlw	26
 10610  001074  5C40               	subwf	??___fladd^0,w,c
 10611  001076  A0D8               	btfss	status,0,c
 10612  001078  D026               	goto	l1274
 10613  00107A                     u2520:
 10614  00107A  5038               	movf	___fladd@b^0,w,c
 10615  00107C  1039               	iorwf	(___fladd@b+1)^0,w,c
 10616  00107E  103A               	iorwf	(___fladd@b+2)^0,w,c
 10617  001080  103B               	iorwf	(___fladd@b+3)^0,w,c
 10618  001082  B4D8               	btfsc	status,2,c
 10619  001084  D002               	goto	u2530
 10620  001086  0E01               	movlw	1
 10621  001088  D001               	goto	u2540
 10622  00108A                     u2530:
 10623  00108A  0E00               	movlw	0
 10624  00108C                     u2540:
 10625  00108C  6E47               	movwf	___fladd@grs^0,c
 10626  00108E  0E00               	movlw	0
 10627  001090  6E38               	movwf	___fladd@b^0,c
 10628  001092  0E00               	movlw	0
 10629  001094  6E39               	movwf	(___fladd@b+1)^0,c
 10630  001096  0E00               	movlw	0
 10631  001098  6E3A               	movwf	(___fladd@b+2)^0,c
 10632  00109A  0E00               	movlw	0
 10633  00109C  6E3B               	movwf	(___fladd@b+3)^0,c
 10634  00109E  C045  F046         	movff	___fladd@aexp,___fladd@bexp
 10635  0010A2  D015               	goto	u2570
 10636  0010A4                     l1275:
 10637  0010A4  A047               	btfss	___fladd@grs^0,0,c
 10638  0010A6  D005               	goto	l3636
 10639  0010A8  90D8               	bcf	status,0,c
 10640  0010AA  3047               	rrcf	___fladd@grs^0,w,c
 10641  0010AC  0901               	iorlw	1
 10642  0010AE  6E47               	movwf	___fladd@grs^0,c
 10643  0010B0  D002               	goto	l3638
 10644  0010B2                     l3636:
 10645  0010B2  90D8               	bcf	status,0,c
 10646  0010B4  3247               	rrcf	___fladd@grs^0,f,c
 10647  0010B6                     l3638:
 10648  0010B6  B038               	btfsc	___fladd@b^0,0,c
 10649  0010B8  8E47               	bsf	___fladd@grs^0,7,c
 10650  0010BA  343B               	rlcf	(___fladd@b+3)^0,w,c
 10651  0010BC  323B               	rrcf	(___fladd@b+3)^0,f,c
 10652  0010BE  323A               	rrcf	(___fladd@b+2)^0,f,c
 10653  0010C0  3239               	rrcf	(___fladd@b+1)^0,f,c
 10654  0010C2  3238               	rrcf	___fladd@b^0,f,c
 10655  0010C4  2A46               	incf	___fladd@bexp^0,f,c
 10656  0010C6                     l1274:
 10657  0010C6  5045               	movf	___fladd@aexp^0,w,c
 10658  0010C8  5C46               	subwf	___fladd@bexp^0,w,c
 10659  0010CA  A0D8               	btfss	status,0,c
 10660  0010CC  D7EB               	goto	l1275
 10661  0010CE                     u2570:
 10662  0010CE  BC44               	btfsc	___fladd@signs^0,6,c
 10663  0010D0  D028               	goto	l3670
 10664  0010D2  5046               	movf	___fladd@bexp^0,w,c
 10665  0010D4  A4D8               	btfss	status,2,c
 10666  0010D6  D009               	goto	l3652
 10667  0010D8  0E00               	movlw	0
 10668  0010DA  6E38               	movwf	?___fladd^0,c
 10669  0010DC  0E00               	movlw	0
 10670  0010DE  6E39               	movwf	(?___fladd+1)^0,c
 10671  0010E0  0E00               	movlw	0
 10672  0010E2  6E3A               	movwf	(?___fladd+2)^0,c
 10673  0010E4  0E00               	movlw	0
 10674  0010E6  6E3B               	movwf	(?___fladd+3)^0,c
 10675  0010E8  0012               	return	
 10676  0010EA                     l3652:
 10677  0010EA  503C               	movf	___fladd@a^0,w,c
 10678  0010EC  2638               	addwf	___fladd@b^0,f,c
 10679  0010EE  503D               	movf	(___fladd@a+1)^0,w,c
 10680  0010F0  2239               	addwfc	(___fladd@b+1)^0,f,c
 10681  0010F2  503E               	movf	(___fladd@a+2)^0,w,c
 10682  0010F4  223A               	addwfc	(___fladd@b+2)^0,f,c
 10683  0010F6  503F               	movf	(___fladd@a+3)^0,w,c
 10684  0010F8  223B               	addwfc	(___fladd@b+3)^0,f,c
 10685  0010FA  A03B               	btfss	(___fladd@b+3)^0,0,c
 10686  0010FC  D071               	goto	u2700
 10687  0010FE  A047               	btfss	___fladd@grs^0,0,c
 10688  001100  D005               	goto	l3660
 10689  001102  90D8               	bcf	status,0,c
 10690  001104  3047               	rrcf	___fladd@grs^0,w,c
 10691  001106  0901               	iorlw	1
 10692  001108  6E47               	movwf	___fladd@grs^0,c
 10693  00110A  D002               	goto	l3662
 10694  00110C                     l3660:
 10695  00110C  90D8               	bcf	status,0,c
 10696  00110E  3247               	rrcf	___fladd@grs^0,f,c
 10697  001110                     l3662:
 10698  001110  B038               	btfsc	___fladd@b^0,0,c
 10699  001112  8E47               	bsf	___fladd@grs^0,7,c
 10700  001114  343B               	rlcf	(___fladd@b+3)^0,w,c
 10701  001116  323B               	rrcf	(___fladd@b+3)^0,f,c
 10702  001118  323A               	rrcf	(___fladd@b+2)^0,f,c
 10703  00111A  3239               	rrcf	(___fladd@b+1)^0,f,c
 10704  00111C  3238               	rrcf	___fladd@b^0,f,c
 10705  00111E  2A46               	incf	___fladd@bexp^0,f,c
 10706  001120  D05F               	goto	u2700
 10707  001122                     l3670:
 10708  001122  503C               	movf	___fladd@a^0,w,c
 10709  001124  5C38               	subwf	___fladd@b^0,w,c
 10710  001126  503D               	movf	(___fladd@a+1)^0,w,c
 10711  001128  5839               	subwfb	(___fladd@b+1)^0,w,c
 10712  00112A  503E               	movf	(___fladd@a+2)^0,w,c
 10713  00112C  583A               	subwfb	(___fladd@b+2)^0,w,c
 10714  00112E  503B               	movf	(___fladd@b+3)^0,w,c
 10715  001130  0A80               	xorlw	128
 10716  001132  6E40               	movwf	??___fladd^0,c
 10717  001134  503F               	movf	(___fladd@a+3)^0,w,c
 10718  001136  0A80               	xorlw	128
 10719  001138  5840               	subwfb	??___fladd^0,w,c
 10720  00113A  B0D8               	btfsc	status,0,c
 10721  00113C  D025               	goto	l3680
 10722  00113E  5038               	movf	___fladd@b^0,w,c
 10723  001140  5C3C               	subwf	___fladd@a^0,w,c
 10724  001142  6E40               	movwf	??___fladd^0,c
 10725  001144  5039               	movf	(___fladd@b+1)^0,w,c
 10726  001146  583D               	subwfb	(___fladd@a+1)^0,w,c
 10727  001148  6E41               	movwf	(??___fladd+1)^0,c
 10728  00114A  503A               	movf	(___fladd@b+2)^0,w,c
 10729  00114C  583E               	subwfb	(___fladd@a+2)^0,w,c
 10730  00114E  6E42               	movwf	(??___fladd+2)^0,c
 10731  001150  503B               	movf	(___fladd@b+3)^0,w,c
 10732  001152  583F               	subwfb	(___fladd@a+3)^0,w,c
 10733  001154  6E43               	movwf	(??___fladd+3)^0,c
 10734  001156  0EFF               	movlw	255
 10735  001158  2440               	addwf	??___fladd^0,w,c
 10736  00115A  6E38               	movwf	___fladd@b^0,c
 10737  00115C  0EFF               	movlw	255
 10738  00115E  2041               	addwfc	(??___fladd+1)^0,w,c
 10739  001160  6E39               	movwf	(___fladd@b+1)^0,c
 10740  001162  0EFF               	movlw	255
 10741  001164  2042               	addwfc	(??___fladd+2)^0,w,c
 10742  001166  6E3A               	movwf	(___fladd@b+2)^0,c
 10743  001168  0EFF               	movlw	255
 10744  00116A  2043               	addwfc	(??___fladd+3)^0,w,c
 10745  00116C  6E3B               	movwf	(___fladd@b+3)^0,c
 10746  00116E  0E80               	movlw	128
 10747  001170  1A44               	xorwf	___fladd@signs^0,f,c
 10748  001172  6C47               	negf	___fladd@grs^0,c
 10749  001174  5047               	movf	___fladd@grs^0,w,c
 10750  001176  A4D8               	btfss	status,2,c
 10751  001178  D00F               	goto	l1290
 10752  00117A  0E01               	movlw	1
 10753  00117C  2638               	addwf	___fladd@b^0,f,c
 10754  00117E  0E00               	movlw	0
 10755  001180  2239               	addwfc	(___fladd@b+1)^0,f,c
 10756  001182  223A               	addwfc	(___fladd@b+2)^0,f,c
 10757  001184  223B               	addwfc	(___fladd@b+3)^0,f,c
 10758  001186  D008               	goto	l1290
 10759  001188                     l3680:
 10760  001188  503C               	movf	___fladd@a^0,w,c
 10761  00118A  5E38               	subwf	___fladd@b^0,f,c
 10762  00118C  503D               	movf	(___fladd@a+1)^0,w,c
 10763  00118E  5A39               	subwfb	(___fladd@b+1)^0,f,c
 10764  001190  503E               	movf	(___fladd@a+2)^0,w,c
 10765  001192  5A3A               	subwfb	(___fladd@b+2)^0,f,c
 10766  001194  503F               	movf	(___fladd@a+3)^0,w,c
 10767  001196  5A3B               	subwfb	(___fladd@b+3)^0,f,c
 10768  001198                     l1290:
 10769  001198  5038               	movf	___fladd@b^0,w,c
 10770  00119A  1039               	iorwf	(___fladd@b+1)^0,w,c
 10771  00119C  103A               	iorwf	(___fladd@b+2)^0,w,c
 10772  00119E  103B               	iorwf	(___fladd@b+3)^0,w,c
 10773  0011A0  A4D8               	btfss	status,2,c
 10774  0011A2  D01C               	goto	l3704
 10775  0011A4  5047               	movf	___fladd@grs^0,w,c
 10776  0011A6  A4D8               	btfss	status,2,c
 10777  0011A8  D019               	goto	l3704
 10778  0011AA  0E00               	movlw	0
 10779  0011AC  6E38               	movwf	?___fladd^0,c
 10780  0011AE  0E00               	movlw	0
 10781  0011B0  6E39               	movwf	(?___fladd+1)^0,c
 10782  0011B2  0E00               	movlw	0
 10783  0011B4  6E3A               	movwf	(?___fladd+2)^0,c
 10784  0011B6  0E00               	movlw	0
 10785  0011B8  6E3B               	movwf	(?___fladd+3)^0,c
 10786  0011BA  0012               	return	
 10787  0011BC                     l3688:
 10788  0011BC  90D8               	bcf	status,0,c
 10789  0011BE  3638               	rlcf	___fladd@b^0,f,c
 10790  0011C0  3639               	rlcf	(___fladd@b+1)^0,f,c
 10791  0011C2  363A               	rlcf	(___fladd@b+2)^0,f,c
 10792  0011C4  363B               	rlcf	(___fladd@b+3)^0,f,c
 10793  0011C6  BE47               	btfsc	___fladd@grs^0,7,c
 10794  0011C8  8038               	bsf	___fladd@b^0,0,c
 10795  0011CA  A047               	btfss	___fladd@grs^0,0,c
 10796  0011CC  D002               	goto	l3698
 10797  0011CE  80D8               	bsf	status,0,c
 10798  0011D0  D001               	goto	L7
 10799  0011D2                     l3698:
 10800  0011D2  90D8               	bcf	status,0,c
 10801  0011D4                     L7:
 10802  0011D4  3647               	rlcf	___fladd@grs^0,f,c
 10803  0011D6  5046               	movf	___fladd@bexp^0,w,c
 10804  0011D8  A4D8               	btfss	status,2,c
 10805  0011DA  0646               	decf	___fladd@bexp^0,f,c
 10806  0011DC                     l3704:
 10807  0011DC  AE3A               	btfss	(___fladd@b+2)^0,7,c
 10808  0011DE  D7EE               	goto	l3688
 10809  0011E0                     u2700:
 10810  0011E0  0E00               	movlw	0
 10811  0011E2  6E45               	movwf	___fladd@aexp^0,c
 10812  0011E4  AE47               	btfss	___fladd@grs^0,7,c
 10813  0011E6  D00B               	goto	l1299
 10814  0011E8  C047  F040         	movff	___fladd@grs,??___fladd
 10815  0011EC  0E7F               	movlw	127
 10816  0011EE  1640               	andwf	??___fladd^0,f,c
 10817  0011F0  B4D8               	btfsc	status,2,c
 10818  0011F2  D003               	goto	l1300
 10819  0011F4                     u2720:
 10820  0011F4  0E01               	movlw	1
 10821  0011F6  6E45               	movwf	___fladd@aexp^0,c
 10822  0011F8  D002               	goto	l1299
 10823  0011FA                     l1300:
 10824  0011FA  B038               	btfsc	___fladd@b^0,0,c
 10825  0011FC  D7FB               	goto	u2720
 10826  0011FE                     l1299:
 10827  0011FE  5045               	movf	___fladd@aexp^0,w,c
 10828  001200  B4D8               	btfsc	status,2,c
 10829  001202  D020               	goto	l3724
 10830  001204  0E01               	movlw	1
 10831  001206  2638               	addwf	___fladd@b^0,f,c
 10832  001208  0E00               	movlw	0
 10833  00120A  2239               	addwfc	(___fladd@b+1)^0,f,c
 10834  00120C  223A               	addwfc	(___fladd@b+2)^0,f,c
 10835  00120E  223B               	addwfc	(___fladd@b+3)^0,f,c
 10836  001210  A03B               	btfss	(___fladd@b+3)^0,0,c
 10837  001212  D018               	goto	l3724
 10838  001214  C038  F040         	movff	___fladd@b,??___fladd
 10839  001218  C039  F041         	movff	___fladd@b+1,??___fladd+1
 10840  00121C  C03A  F042         	movff	___fladd@b+2,??___fladd+2
 10841  001220  C03B  F043         	movff	___fladd@b+3,??___fladd+3
 10842  001224  3443               	rlcf	(??___fladd+3)^0,w,c
 10843  001226  3243               	rrcf	(??___fladd+3)^0,f,c
 10844  001228  3242               	rrcf	(??___fladd+2)^0,f,c
 10845  00122A  3241               	rrcf	(??___fladd+1)^0,f,c
 10846  00122C  3240               	rrcf	??___fladd^0,f,c
 10847  00122E  C040  F038         	movff	??___fladd,___fladd@b
 10848  001232  C041  F039         	movff	??___fladd+1,___fladd@b+1
 10849  001236  C042  F03A         	movff	??___fladd+2,___fladd@b+2
 10850  00123A  C043  F03B         	movff	??___fladd+3,___fladd@b+3
 10851  00123E  2846               	incf	___fladd@bexp^0,w,c
 10852  001240  A4D8               	btfss	status,2,c
 10853  001242  2A46               	incf	___fladd@bexp^0,f,c
 10854  001244                     l3724:
 10855  001244  2846               	incf	___fladd@bexp^0,w,c
 10856  001246  B4D8               	btfsc	status,2,c
 10857  001248  D003               	goto	u2780
 10858  00124A  5046               	movf	___fladd@bexp^0,w,c
 10859  00124C  A4D8               	btfss	status,2,c
 10860  00124E  D00D               	goto	l3732
 10861  001250                     u2780:
 10862  001250  0E00               	movlw	0
 10863  001252  6E38               	movwf	___fladd@b^0,c
 10864  001254  0E00               	movlw	0
 10865  001256  6E39               	movwf	(___fladd@b+1)^0,c
 10866  001258  0E00               	movlw	0
 10867  00125A  6E3A               	movwf	(___fladd@b+2)^0,c
 10868  00125C  0E00               	movlw	0
 10869  00125E  6E3B               	movwf	(___fladd@b+3)^0,c
 10870  001260  5046               	movf	___fladd@bexp^0,w,c
 10871  001262  A4D8               	btfss	status,2,c
 10872  001264  D002               	goto	l3732
 10873  001266  0E00               	movlw	0
 10874  001268  6E44               	movwf	___fladd@signs^0,c
 10875  00126A                     l3732:
 10876  00126A  A046               	btfss	___fladd@bexp^0,0,c
 10877  00126C  D002               	goto	l3736
 10878  00126E  8E3A               	bsf	(___fladd@b+2)^0,7,c
 10879  001270  D001               	goto	l3738
 10880  001272                     l3736:
 10881  001272  9E3A               	bcf	(___fladd@b+2)^0,7,c
 10882  001274                     l3738:
 10883  001274  90D8               	bcf	status,0,c
 10884  001276  3046               	rrcf	___fladd@bexp^0,w,c
 10885  001278  6E3B               	movwf	(___fladd@b+3)^0,c
 10886  00127A  BE44               	btfsc	___fladd@signs^0,7,c
 10887  00127C  8E3B               	bsf	(___fladd@b+3)^0,7,c
 10888  00127E  C038  F038         	movff	___fladd@b,?___fladd
 10889  001282  C039  F039         	movff	___fladd@b+1,?___fladd+1
 10890  001286  C03A  F03A         	movff	___fladd@b+2,?___fladd+2
 10891  00128A  C03B  F03B         	movff	___fladd@b+3,?___fladd+3
 10892  00128E  0012               	return		;funcret
 10893  001290                     __end_of___fladd:
 10894                           	callstack 0
 10895                           
 10896 ;; *************** function ___flneg *****************
 10897 ;; Defined at:
 10898 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  f1              4    1[COMRAM] unsigned char 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  4    1[COMRAM] unsigned char 
 10905 ;; Registers used:
 10906 ;;		wreg, status,2, status,0
 10907 ;; Tracked objects:
 10908 ;;		On entry : 3F/0
 10909 ;;		On exit  : 3F/0
 10910 ;;		Unchanged: 3F/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;Total ram usage:        4 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    1
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_printf
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text61
 10927  002C3A                     __ptext61:
 10928                           	callstack 0
 10929  002C3A                     ___flneg:
 10930                           	callstack 27
 10931                           
 10932                           ; BSR set to: 0
 10933                           
 10934                           ;incstack = 0
 10935  002C3A  5002               	movf	___flneg@f1^0,w,c
 10936  002C3C  1003               	iorwf	(___flneg@f1+1)^0,w,c
 10937  002C3E  1004               	iorwf	(___flneg@f1+2)^0,w,c
 10938  002C40  1005               	iorwf	(___flneg@f1+3)^0,w,c
 10939  002C42  B4D8               	btfsc	status,2,c
 10940  002C44  D008               	goto	l4268
 10941                           
 10942                           ; BSR set to: 0
 10943  002C46  0E00               	movlw	0
 10944  002C48  1A02               	xorwf	___flneg@f1^0,f,c
 10945  002C4A  0E00               	movlw	0
 10946  002C4C  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 10947  002C4E  0E00               	movlw	0
 10948  002C50  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 10949  002C52  0E80               	movlw	128
 10950  002C54  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 10951  002C56                     l4268:
 10952                           
 10953                           ; BSR set to: 0
 10954  002C56  C002  F002         	movff	___flneg@f1,?___flneg
 10955  002C5A  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 10956  002C5E  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 10957  002C62  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 10958                           
 10959                           ; BSR set to: 0
 10960  002C66  0012               	return		;funcret
 10961  002C68                     __end_of___flneg:
 10962                           	callstack 0
 10963                           
 10964 ;; *************** function ___flge *****************
 10965 ;; Defined at:
 10966 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  ff1             4    1[COMRAM] unsigned char 
 10969 ;;  ff2             4    5[COMRAM] unsigned char 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;		None               void
 10974 ;; Registers used:
 10975 ;;		wreg, status,2, status,0
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10981 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;Total ram usage:       12 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:    1
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_printf
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text62
 10996  00222C                     __ptext62:
 10997                           	callstack 0
 10998  00222C                     ___flge:
 10999                           	callstack 27
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;incstack = 0
 11003  00222C  0E00               	movlw	0
 11004  00222E  1402               	andwf	___flge@ff1^0,w,c
 11005  002230  6E0A               	movwf	??___flge^0,c
 11006  002232  0E00               	movlw	0
 11007  002234  1403               	andwf	(___flge@ff1+1)^0,w,c
 11008  002236  6E0B               	movwf	(??___flge+1)^0,c
 11009  002238  0E80               	movlw	128
 11010  00223A  1404               	andwf	(___flge@ff1+2)^0,w,c
 11011  00223C  6E0C               	movwf	(??___flge+2)^0,c
 11012  00223E  0E7F               	movlw	127
 11013  002240  1405               	andwf	(___flge@ff1+3)^0,w,c
 11014  002242  6E0D               	movwf	(??___flge+3)^0,c
 11015  002244  500A               	movf	??___flge^0,w,c
 11016  002246  100B               	iorwf	(??___flge+1)^0,w,c
 11017  002248  100C               	iorwf	(??___flge+2)^0,w,c
 11018  00224A  100D               	iorwf	(??___flge+3)^0,w,c
 11019  00224C  A4D8               	btfss	status,2,c
 11020  00224E  D008               	goto	l4246
 11021  002250  0E00               	movlw	0
 11022  002252  6E02               	movwf	___flge@ff1^0,c
 11023  002254  0E00               	movlw	0
 11024  002256  6E03               	movwf	(___flge@ff1+1)^0,c
 11025  002258  0E00               	movlw	0
 11026  00225A  6E04               	movwf	(___flge@ff1+2)^0,c
 11027  00225C  0E00               	movlw	0
 11028  00225E  6E05               	movwf	(___flge@ff1+3)^0,c
 11029  002260                     l4246:
 11030  002260  0E00               	movlw	0
 11031  002262  1406               	andwf	___flge@ff2^0,w,c
 11032  002264  6E0A               	movwf	??___flge^0,c
 11033  002266  0E00               	movlw	0
 11034  002268  1407               	andwf	(___flge@ff2+1)^0,w,c
 11035  00226A  6E0B               	movwf	(??___flge+1)^0,c
 11036  00226C  0E80               	movlw	128
 11037  00226E  1408               	andwf	(___flge@ff2+2)^0,w,c
 11038  002270  6E0C               	movwf	(??___flge+2)^0,c
 11039  002272  0E7F               	movlw	127
 11040  002274  1409               	andwf	(___flge@ff2+3)^0,w,c
 11041  002276  6E0D               	movwf	(??___flge+3)^0,c
 11042  002278  500A               	movf	??___flge^0,w,c
 11043  00227A  100B               	iorwf	(??___flge+1)^0,w,c
 11044  00227C  100C               	iorwf	(??___flge+2)^0,w,c
 11045  00227E  100D               	iorwf	(??___flge+3)^0,w,c
 11046  002280  A4D8               	btfss	status,2,c
 11047  002282  D008               	goto	l4250
 11048  002284  0E00               	movlw	0
 11049  002286  6E06               	movwf	___flge@ff2^0,c
 11050  002288  0E00               	movlw	0
 11051  00228A  6E07               	movwf	(___flge@ff2+1)^0,c
 11052  00228C  0E00               	movlw	0
 11053  00228E  6E08               	movwf	(___flge@ff2+2)^0,c
 11054  002290  0E00               	movlw	0
 11055  002292  6E09               	movwf	(___flge@ff2+3)^0,c
 11056  002294                     l4250:
 11057  002294  AE05               	btfss	(___flge@ff1+3)^0,7,c
 11058  002296  D009               	goto	l4254
 11059  002298  6C02               	negf	___flge@ff1^0,c
 11060  00229A  1E03               	comf	(___flge@ff1+1)^0,f,c
 11061  00229C  B0D8               	btfsc	status,0,c
 11062  00229E  2A03               	incf	(___flge@ff1+1)^0,f,c
 11063  0022A0  1E04               	comf	(___flge@ff1+2)^0,f,c
 11064  0022A2  B0D8               	btfsc	status,0,c
 11065  0022A4  2A04               	incf	(___flge@ff1+2)^0,f,c
 11066  0022A6  0E80               	movlw	128
 11067  0022A8  5605               	subfwb	(___flge@ff1+3)^0,f,c
 11068  0022AA                     l4254:
 11069  0022AA  AE09               	btfss	(___flge@ff2+3)^0,7,c
 11070  0022AC  D009               	goto	l1001
 11071  0022AE  6C06               	negf	___flge@ff2^0,c
 11072  0022B0  1E07               	comf	(___flge@ff2+1)^0,f,c
 11073  0022B2  B0D8               	btfsc	status,0,c
 11074  0022B4  2A07               	incf	(___flge@ff2+1)^0,f,c
 11075  0022B6  1E08               	comf	(___flge@ff2+2)^0,f,c
 11076  0022B8  B0D8               	btfsc	status,0,c
 11077  0022BA  2A08               	incf	(___flge@ff2+2)^0,f,c
 11078  0022BC  0E80               	movlw	128
 11079  0022BE  5609               	subfwb	(___flge@ff2+3)^0,f,c
 11080  0022C0                     l1001:
 11081  0022C0  0E00               	movlw	0
 11082  0022C2  1A02               	xorwf	___flge@ff1^0,f,c
 11083  0022C4  0E00               	movlw	0
 11084  0022C6  1A03               	xorwf	(___flge@ff1+1)^0,f,c
 11085  0022C8  0E00               	movlw	0
 11086  0022CA  1A04               	xorwf	(___flge@ff1+2)^0,f,c
 11087  0022CC  0E80               	movlw	128
 11088  0022CE  1A05               	xorwf	(___flge@ff1+3)^0,f,c
 11089  0022D0  0E00               	movlw	0
 11090  0022D2  1A06               	xorwf	___flge@ff2^0,f,c
 11091  0022D4  0E00               	movlw	0
 11092  0022D6  1A07               	xorwf	(___flge@ff2+1)^0,f,c
 11093  0022D8  0E00               	movlw	0
 11094  0022DA  1A08               	xorwf	(___flge@ff2+2)^0,f,c
 11095  0022DC  0E80               	movlw	128
 11096  0022DE  1A09               	xorwf	(___flge@ff2+3)^0,f,c
 11097  0022E0  5006               	movf	___flge@ff2^0,w,c
 11098  0022E2  5C02               	subwf	___flge@ff1^0,w,c
 11099  0022E4  5007               	movf	(___flge@ff2+1)^0,w,c
 11100  0022E6  5803               	subwfb	(___flge@ff1+1)^0,w,c
 11101  0022E8  5008               	movf	(___flge@ff2+2)^0,w,c
 11102  0022EA  5804               	subwfb	(___flge@ff1+2)^0,w,c
 11103  0022EC  5009               	movf	(___flge@ff2+3)^0,w,c
 11104  0022EE  5805               	subwfb	(___flge@ff1+3)^0,w,c
 11105  0022F0  B0D8               	btfsc	status,0,c
 11106  0022F2  D002               	goto	l4260
 11107  0022F4  90D8               	bcf	status,0,c
 11108  0022F6  0012               	return	
 11109  0022F8                     l4260:
 11110  0022F8  80D8               	bsf	status,0,c
 11111  0022FA  0012               	return		;funcret
 11112  0022FC                     __end_of___flge:
 11113                           	callstack 0
 11114                           
 11115 ;; *************** function ___fleq *****************
 11116 ;; Defined at:
 11117 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  ff1             4    1[COMRAM] unsigned char 
 11120 ;;  ff2             4    5[COMRAM] unsigned char 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;		None               void
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0
 11127 ;; Tracked objects:
 11128 ;;		On entry : 3F/0
 11129 ;;		On exit  : 3F/0
 11130 ;;		Unchanged: 3F/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;Total ram usage:       12 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:    1
 11139 ;; This function calls:
 11140 ;;		Nothing
 11141 ;; This function is called by:
 11142 ;;		_printf
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text63
 11147  002482                     __ptext63:
 11148                           	callstack 0
 11149  002482                     ___fleq:
 11150                           	callstack 27
 11151                           
 11152                           ; BSR set to: 0
 11153                           
 11154                           ;incstack = 0
 11155  002482  0E00               	movlw	0
 11156  002484  1402               	andwf	___fleq@ff1^0,w,c
 11157  002486  6E0A               	movwf	??___fleq^0,c
 11158  002488  0E00               	movlw	0
 11159  00248A  1403               	andwf	(___fleq@ff1+1)^0,w,c
 11160  00248C  6E0B               	movwf	(??___fleq+1)^0,c
 11161  00248E  0E80               	movlw	128
 11162  002490  1404               	andwf	(___fleq@ff1+2)^0,w,c
 11163  002492  6E0C               	movwf	(??___fleq+2)^0,c
 11164  002494  0E7F               	movlw	127
 11165  002496  1405               	andwf	(___fleq@ff1+3)^0,w,c
 11166  002498  6E0D               	movwf	(??___fleq+3)^0,c
 11167  00249A  500A               	movf	??___fleq^0,w,c
 11168  00249C  100B               	iorwf	(??___fleq+1)^0,w,c
 11169  00249E  100C               	iorwf	(??___fleq+2)^0,w,c
 11170  0024A0  100D               	iorwf	(??___fleq+3)^0,w,c
 11171  0024A2  A4D8               	btfss	status,2,c
 11172  0024A4  D008               	goto	l4230
 11173                           
 11174                           ; BSR set to: 0
 11175  0024A6  0E00               	movlw	0
 11176  0024A8  6E02               	movwf	___fleq@ff1^0,c
 11177  0024AA  0E00               	movlw	0
 11178  0024AC  6E03               	movwf	(___fleq@ff1+1)^0,c
 11179  0024AE  0E00               	movlw	0
 11180  0024B0  6E04               	movwf	(___fleq@ff1+2)^0,c
 11181  0024B2  0E00               	movlw	0
 11182  0024B4  6E05               	movwf	(___fleq@ff1+3)^0,c
 11183  0024B6                     l4230:
 11184                           
 11185                           ; BSR set to: 0
 11186  0024B6  0E00               	movlw	0
 11187  0024B8  1406               	andwf	___fleq@ff2^0,w,c
 11188  0024BA  6E0A               	movwf	??___fleq^0,c
 11189  0024BC  0E00               	movlw	0
 11190  0024BE  1407               	andwf	(___fleq@ff2+1)^0,w,c
 11191  0024C0  6E0B               	movwf	(??___fleq+1)^0,c
 11192  0024C2  0E80               	movlw	128
 11193  0024C4  1408               	andwf	(___fleq@ff2+2)^0,w,c
 11194  0024C6  6E0C               	movwf	(??___fleq+2)^0,c
 11195  0024C8  0E7F               	movlw	127
 11196  0024CA  1409               	andwf	(___fleq@ff2+3)^0,w,c
 11197  0024CC  6E0D               	movwf	(??___fleq+3)^0,c
 11198  0024CE  500A               	movf	??___fleq^0,w,c
 11199  0024D0  100B               	iorwf	(??___fleq+1)^0,w,c
 11200  0024D2  100C               	iorwf	(??___fleq+2)^0,w,c
 11201  0024D4  100D               	iorwf	(??___fleq+3)^0,w,c
 11202  0024D6  A4D8               	btfss	status,2,c
 11203  0024D8  D008               	goto	l4234
 11204                           
 11205                           ; BSR set to: 0
 11206  0024DA  0E00               	movlw	0
 11207  0024DC  6E06               	movwf	___fleq@ff2^0,c
 11208  0024DE  0E00               	movlw	0
 11209  0024E0  6E07               	movwf	(___fleq@ff2+1)^0,c
 11210  0024E2  0E00               	movlw	0
 11211  0024E4  6E08               	movwf	(___fleq@ff2+2)^0,c
 11212  0024E6  0E00               	movlw	0
 11213  0024E8  6E09               	movwf	(___fleq@ff2+3)^0,c
 11214  0024EA                     l4234:
 11215                           
 11216                           ; BSR set to: 0
 11217  0024EA  5006               	movf	___fleq@ff2^0,w,c
 11218  0024EC  1802               	xorwf	___fleq@ff1^0,w,c
 11219  0024EE  E10A               	bnz	u3490
 11220  0024F0  5007               	movf	(___fleq@ff2+1)^0,w,c
 11221  0024F2  1803               	xorwf	(___fleq@ff1+1)^0,w,c
 11222  0024F4  E107               	bnz	u3490
 11223  0024F6  5008               	movf	(___fleq@ff2+2)^0,w,c
 11224  0024F8  1804               	xorwf	(___fleq@ff1+2)^0,w,c
 11225  0024FA  E104               	bnz	u3490
 11226  0024FC  5009               	movf	(___fleq@ff2+3)^0,w,c
 11227  0024FE  1805               	xorwf	(___fleq@ff1+3)^0,w,c
 11228  002500  B4D8               	btfsc	status,2,c
 11229  002502  D002               	goto	l4238
 11230  002504                     u3490:
 11231                           
 11232                           ; BSR set to: 0
 11233  002504  90D8               	bcf	status,0,c
 11234  002506  0012               	return	
 11235  002508                     l4238:
 11236                           
 11237                           ; BSR set to: 0
 11238  002508  80D8               	bsf	status,0,c
 11239                           
 11240                           ; BSR set to: 0
 11241  00250A  0012               	return		;funcret
 11242  00250C                     __end_of___fleq:
 11243                           	callstack 0
 11244                           
 11245 ;; *************** function _Isr *****************
 11246 ;; Defined at:
 11247 ;;		line 430 in file "main.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;		None
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  bValue          1    0[COMRAM] unsigned char 
 11252 ;; Return value:  Size  Location     Type
 11253 ;;                  1    wreg      void 
 11254 ;; Registers used:
 11255 ;;		wreg, status,2, status,0
 11256 ;; Tracked objects:
 11257 ;;		On entry : 0/0
 11258 ;;		On exit  : 0/0
 11259 ;;		Unchanged: 0/0
 11260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;Total ram usage:        1 bytes
 11266 ;; Hardware stack levels used:    1
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		Interrupt level 2
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	intcode
 11275  000008                     __pintcode:
 11276                           	callstack 0
 11277  000008                     _Isr:
 11278                           	callstack 24
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;incstack = 0
 11282  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11283                           
 11284                           ;main.c: 431: uint8_t bValue = PORTBbits.RB5;
 11285  00000A  0E00               	movlw	0
 11286  00000C  BA81               	btfsc	129,5,c	;volatile
 11287  00000E  0E01               	movlw	1
 11288  000010  6E01               	movwf	Isr@bValue^0,c
 11289                           
 11290                           ;main.c: 432: if(bValue>0){
 11291  000012  5001               	movf	Isr@bValue^0,w,c
 11292  000014  B4D8               	btfsc	status,2,c
 11293  000016  D007               	goto	i2l5500
 11294                           
 11295                           ;main.c: 434: fanTachoCount++;
 11296  000018  0E01               	movlw	1
 11297  00001A  0100               	movlb	0	; () banked
 11298  00001C  2760               	addwf	_fanTachoCount& (0+255),f,b
 11299  00001E  0E00               	movlw	0
 11300  000020  2361               	addwfc	(_fanTachoCount+1)& (0+255),f,b
 11301  000022  2362               	addwfc	(_fanTachoCount+2)& (0+255),f,b
 11302  000024  2363               	addwfc	(_fanTachoCount+3)& (0+255),f,b
 11303  000026                     i2l5500:
 11304                           
 11305                           ;main.c: 435: };main.c: 436: INTCONbits.RBIF=0;
 11306  000026  90F2               	bcf	242,0,c	;volatile
 11307  000028  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11308  00002A  0011               	retfie		f
 11309  00002C                     __end_of_Isr:
 11310                           	callstack 0
 11311                           
 11312                           	psect	rparam
 11313  0000                     
 11314                           	psect	temp
 11315  00005E                     btemp:
 11316                           	callstack 0
 11317  00005E                     	ds	1
 11318  0000                     int$flags	set	btemp
 11319  0000                     wtemp8	set	btemp+1
 11320  0000                     ttemp5	set	btemp+1
 11321  0000                     ttemp6	set	btemp+4
 11322  0000                     ttemp7	set	btemp+8
 11323                           
 11324                           	psect	idloc
 11325                           
 11326                           ;Config register IDLOC0 @ 0x200000
 11327                           ;	unspecified, using default values
 11328  200000                     	org	2097152
 11329  200000  FF                 	db	255
 11330                           
 11331                           ;Config register IDLOC1 @ 0x200001
 11332                           ;	unspecified, using default values
 11333  200001                     	org	2097153
 11334  200001  FF                 	db	255
 11335                           
 11336                           ;Config register IDLOC2 @ 0x200002
 11337                           ;	unspecified, using default values
 11338  200002                     	org	2097154
 11339  200002  FF                 	db	255
 11340                           
 11341                           ;Config register IDLOC3 @ 0x200003
 11342                           ;	unspecified, using default values
 11343  200003                     	org	2097155
 11344  200003  FF                 	db	255
 11345                           
 11346                           ;Config register IDLOC4 @ 0x200004
 11347                           ;	unspecified, using default values
 11348  200004                     	org	2097156
 11349  200004  FF                 	db	255
 11350                           
 11351                           ;Config register IDLOC5 @ 0x200005
 11352                           ;	unspecified, using default values
 11353  200005                     	org	2097157
 11354  200005  FF                 	db	255
 11355                           
 11356                           ;Config register IDLOC6 @ 0x200006
 11357                           ;	unspecified, using default values
 11358  200006                     	org	2097158
 11359  200006  FF                 	db	255
 11360                           
 11361                           ;Config register IDLOC7 @ 0x200007
 11362                           ;	unspecified, using default values
 11363  200007                     	org	2097159
 11364  200007  FF                 	db	255
 11365                           
 11366                           	psect	config
 11367                           
 11368                           ; Padding undefined space
 11369  300000                     	org	3145728
 11370  300000  FF                 	db	255
 11371                           
 11372                           ;Config register CONFIG1H @ 0x300001
 11373                           ;	Oscillator Selection bits
 11374                           ;	FOSC = INTIO67, Internal oscillator block
 11375                           ;	4X PLL Enable
 11376                           ;	PLLCFG = ON, Oscillator multiplied by 4
 11377                           ;	Primary clock enable bit
 11378                           ;	PRICLKEN = ON, Primary clock is always enabled
 11379                           ;	Fail-Safe Clock Monitor Enable bit
 11380                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11381                           ;	Internal/External Oscillator Switchover bit
 11382                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11383  300001                     	org	3145729
 11384  300001  38                 	db	56
 11385                           
 11386                           ;Config register CONFIG2L @ 0x300002
 11387                           ;	Power-up Timer Enable bit
 11388                           ;	PWRTEN = ON, Power up timer enabled
 11389                           ;	Brown-out Reset Enable bits
 11390                           ;	BOREN = NOSLP, Brown-out Reset enabled in hardware only and disabled in Sleep mode (SB
      +                          OREN is disabled)
 11391                           ;	Brown Out Reset Voltage bits
 11392                           ;	BORV = 190, VBOR set to 1.90 V nominal
 11393  300002                     	org	3145730
 11394  300002  1C                 	db	28
 11395                           
 11396                           ;Config register CONFIG2H @ 0x300003
 11397                           ;	Watchdog Timer Enable bits
 11398                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
 11399                           ;	Watchdog Timer Postscale Select bits
 11400                           ;	WDTPS = 16384, 1:16384
 11401  300003                     	org	3145731
 11402  300003  3B                 	db	59
 11403                           
 11404                           ; Padding undefined space
 11405  300004                     	org	3145732
 11406  300004  FF                 	db	255
 11407                           
 11408                           ;Config register CONFIG3H @ 0x300005
 11409                           ;	CCP2 MUX bit
 11410                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 11411                           ;	PORTB A/D Enable bit
 11412                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 11413                           ;	P3A/CCP3 Mux bit
 11414                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 11415                           ;	HFINTOSC Fast Start-up
 11416                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 11417                           ;	Timer3 Clock input mux bit
 11418                           ;	T3CMX = PORTC0, T3CKI is on RC0
 11419                           ;	ECCP2 B output mux bit
 11420                           ;	P2BMX = PORTD2, P2B is on RD2
 11421                           ;	MCLR Pin Enable bit
 11422                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 11423  300005                     	org	3145733
 11424  300005  BD                 	db	189
 11425                           
 11426                           ;Config register CONFIG4L @ 0x300006
 11427                           ;	Stack Full/Underflow Reset Enable bit
 11428                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11429                           ;	Single-Supply ICSP Enable bit
 11430                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 11431                           ;	Extended Instruction Set Enable bit
 11432                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11433                           ;	Background Debug
 11434                           ;	DEBUG = 0x1, unprogrammed default
 11435  300006                     	org	3145734
 11436  300006  85                 	db	133
 11437                           
 11438                           ; Padding undefined space
 11439  300007                     	org	3145735
 11440  300007  FF                 	db	255
 11441                           
 11442                           ;Config register CONFIG5L @ 0x300008
 11443                           ;	Code Protection Block 0
 11444                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11445                           ;	Code Protection Block 1
 11446                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11447                           ;	Code Protection Block 2
 11448                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11449                           ;	Code Protection Block 3
 11450                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11451  300008                     	org	3145736
 11452  300008  0F                 	db	15
 11453                           
 11454                           ;Config register CONFIG5H @ 0x300009
 11455                           ;	Boot Block Code Protection bit
 11456                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11457                           ;	Data EEPROM Code Protection bit
 11458                           ;	CPD = OFF, Data EEPROM not code-protected
 11459  300009                     	org	3145737
 11460  300009  C0                 	db	192
 11461                           
 11462                           ;Config register CONFIG6L @ 0x30000A
 11463                           ;	Write Protection Block 0
 11464                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11465                           ;	Write Protection Block 1
 11466                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11467                           ;	Write Protection Block 2
 11468                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11469                           ;	Write Protection Block 3
 11470                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11471  30000A                     	org	3145738
 11472  30000A  0F                 	db	15
 11473                           
 11474                           ;Config register CONFIG6H @ 0x30000B
 11475                           ;	Configuration Register Write Protection bit
 11476                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11477                           ;	Boot Block Write Protection bit
 11478                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11479                           ;	Data EEPROM Write Protection bit
 11480                           ;	WRTD = OFF, Data EEPROM not write-protected
 11481  30000B                     	org	3145739
 11482  30000B  E0                 	db	224
 11483                           
 11484                           ;Config register CONFIG7L @ 0x30000C
 11485                           ;	Table Read Protection Block 0
 11486                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11487                           ;	Table Read Protection Block 1
 11488                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11489                           ;	Table Read Protection Block 2
 11490                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11491                           ;	Table Read Protection Block 3
 11492                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11493  30000C                     	org	3145740
 11494  30000C  0F                 	db	15
 11495                           
 11496                           ;Config register CONFIG7H @ 0x30000D
 11497                           ;	Boot Block Table Read Protection bit
 11498                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11499  30000D                     	org	3145741
 11500  30000D  40                 	db	64
 11501                           tosu	equ	0xFFF
 11502                           tosh	equ	0xFFE
 11503                           tosl	equ	0xFFD
 11504                           stkptr	equ	0xFFC
 11505                           pclatu	equ	0xFFB
 11506                           pclath	equ	0xFFA
 11507                           pcl	equ	0xFF9
 11508                           tblptru	equ	0xFF8
 11509                           tblptrh	equ	0xFF7
 11510                           tblptrl	equ	0xFF6
 11511                           tablat	equ	0xFF5
 11512                           prodh	equ	0xFF4
 11513                           prodl	equ	0xFF3
 11514                           indf0	equ	0xFEF
 11515                           postinc0	equ	0xFEE
 11516                           postdec0	equ	0xFED
 11517                           preinc0	equ	0xFEC
 11518                           plusw0	equ	0xFEB
 11519                           fsr0h	equ	0xFEA
 11520                           fsr0l	equ	0xFE9
 11521                           wreg	equ	0xFE8
 11522                           indf1	equ	0xFE7
 11523                           postinc1	equ	0xFE6
 11524                           postdec1	equ	0xFE5
 11525                           preinc1	equ	0xFE4
 11526                           plusw1	equ	0xFE3
 11527                           fsr1h	equ	0xFE2
 11528                           fsr1l	equ	0xFE1
 11529                           bsr	equ	0xFE0
 11530                           indf2	equ	0xFDF
 11531                           postinc2	equ	0xFDE
 11532                           postdec2	equ	0xFDD
 11533                           preinc2	equ	0xFDC
 11534                           plusw2	equ	0xFDB
 11535                           fsr2h	equ	0xFDA
 11536                           fsr2l	equ	0xFD9
 11537                           status	equ	0xFD8

Data Sizes:
    Strings     266
    Constant    688
    Data        8
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      93
    BANK0           160     37     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_24(CODE[12]), STR_23(CODE[12]), STR_22(CODE[12]), STR_21(CODE[12]), 
		 -> STR_20(CODE[12]), STR_19(CODE[9]), STR_18(CODE[9]), STR_17(CODE[13]), 
		 -> STR_16(CODE[12]), STR_15(CODE[10]), STR_14(CODE[8]), STR_13(CODE[18]), 
		 -> STR_12(CODE[8]), STR_11(CODE[10]), STR_10(CODE[34]), STR_9(CODE[10]), 
		 -> STR_8(CODE[18]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[11]), 
		 -> STR_4(CODE[12]), STR_3(CODE[14]), STR_2(CODE[10]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    CRC16@nData	PTR const unsigned char  size(1) Largest target is 50
		 -> txData(BANK0[50]), 

    LoRaTXData@data	PTR unsigned char  size(1) Largest target is 50
		 -> txData(BANK0[50]), 


Critical Paths under _main in COMRAM

    _main->_MAX31865readData
    _transmitData->_LoRaTXData
    _LoRaTXData->_LoRaTXMode
    _LoRaTXMode->_printf
    _LoRaStart->_LoRaSetFrequency
    _LoRaSetFrequency->___fltol
    _LoRaOptimalLoad->_LoRaSleepMode
    _LoRaOptimalLoad->_LoRaStandbyMode
    _LoRaOptimalLoad->_setLoRaMode
    _setLoRaMode->_writeOpModeRegister
    _LoRaStandbyMode->_writeOpModeRegister
    _LoRaSleepMode->_writeOpModeRegister
    _writeOpModeRegister->_SPI2WriteByte
    _readOpModeRegister->_SPI2ReadByte
    _LoRaGetIRQFlags->_SPI2ReadByte
    _LoRaGetFrequency->___fldiv
    ___fldiv->___xxtofl
    _LoRaClearIRQFlags->_SPI2WriteByte
    _readRH->_readADS1110
    _readADS1110->_I2C1_Read_Byte
    _readADS1110->_I2C1_Write_Byte_Read_Ack
    _I2C1_Read_Byte->_I2C1_Wait
    _configureIO->_I2C1_Initialize
    _configADS1110->_writeADS1110
    _writeADS1110->_I2C1_Write_Byte_Read_Ack
    _I2C1_Write_Byte_Read_Ack->_I2C1_Wait
    _I2C1_Stop->_I2C1_Wait
    _I2C1_Start->_I2C1_Wait
    _I2C1_Initialize->___lldiv
    _MAX31865writeConfigByte->_MAX31865writeByte
    _MAX31865readData->_printf
    _printf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lbdiv->___lbmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_MAX31865readData
    _transmitData->_printf
    _LoRaTXData->_printf
    _LoRaTXMode->_printf
    _MAX31865readData->_printf

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  209556
                                             33 BANK0      4     4      0
                   _MAX31865readData
            _MAX31865writeConfigByte
                        _configureIO
                       _configureSPI
                             _printf
                        _readBattery
                             _readRH
                    _readTemperature
                           _readVFan
                        _readVSupply
                  _setupInterruptPin
                       _transmitData
 ---------------------------------------------------------------------------------
 (1) _transmitData                                         7     7      0  142480
                                             25 BANK0      7     7      0
                              _CRC16
                  _LoRaClearIRQFlags
                   _LoRaGetFrequency
                    _LoRaGetIRQFlags
                      _LoRaSleepMode
                          _LoRaStart
                         _LoRaTXData
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LoRaTXData                                           3     1      2   74263
                                             88 COMRAM     3     1      2
                    _LoRaStandbyMode
                         _LoRaTXMode
                      _SPI2WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LoRaTXMode                                           1     1      0   35224
                                             87 COMRAM     1     1      0
                             _printf
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (2) _LoRaStart                                            6     1      5   26641
                                             61 COMRAM     6     1      5
                    _LoRaOptimalLoad
                          _LoRaReset
                   _LoRaSetFrequency
                        _setLoRaMode
 ---------------------------------------------------------------------------------
 (3) _LoRaSetFrequency                                    11     7      4    8193
                                             50 COMRAM    11     7      4
                      _SPI2WriteByte
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) _LoRaReset                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LoRaOptimalLoad                                      2     2      0   14588
                                              6 COMRAM     2     2      0
                      _LoRaSleepMode
                    _LoRaStandbyMode
                      _SPI2WriteByte
                        _setLoRaMode
 ---------------------------------------------------------------------------------
 (3) _setLoRaMode                                          1     1      0    3664
                                              5 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (3) _LoRaStandbyMode                                      1     1      0    3687
                                              5 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (4) _LoRaSleepMode                                        1     1      0    3664
                                              5 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (4) _writeOpModeRegister                                  1     1      0    3573
                                              4 COMRAM     1     1      0
                      _SPI2WriteByte
 ---------------------------------------------------------------------------------
 (4) _readOpModeRegister                                   0     0      0      45
                       _SPI2ReadByte
 ---------------------------------------------------------------------------------
 (2) _LoRaGetIRQFlags                                      1     1      0      68
                                              3 COMRAM     1     1      0
                       _SPI2ReadByte
 ---------------------------------------------------------------------------------
 (2) _LoRaGetFrequency                                    27    23      4    2033
                                             40 COMRAM    27    23      4
                       _SPI2ReadByte
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _SPI2ReadByte                                         2     2      0      45
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LoRaClearIRQFlags                                    0     0      0    3551
                      _SPI2WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI2WriteByte                                        3     2      1    3551
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _CRC16                                                8     5      3     290
                                              1 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _setupInterruptPin                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readVSupply                                          6     4      2      23
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _readVFan                                             6     4      2      23
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      6     4      2      23
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _readRH                                               4     2      2     279
                                             13 COMRAM     4     2      2
                        _readADS1110
 ---------------------------------------------------------------------------------
 (2) _readADS1110                                          8     6      2     256
                                              5 COMRAM     8     6      2
                     _I2C1_Read_Byte
                         _I2C1_Start
                          _I2C1_Stop
           _I2C1_Write_Byte_Read_Ack
 ---------------------------------------------------------------------------------
 (3) _I2C1_Read_Byte                                       2     2      0      69
                                              3 COMRAM     2     2      0
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (1) _readBattery                                          6     4      2      23
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _configureSPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureIO                                          0     0      0    1371
              _I2C1_Check_Data_Stuck
                    _I2C1_Initialize
                       _USART2_Start
                      _configADS1110
                          _setupAtoD
 ---------------------------------------------------------------------------------
 (2) _setupAtoD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configADS1110                                        0     0      0     238
                       _writeADS1110
 ---------------------------------------------------------------------------------
 (3) _writeADS1110                                         2     1      1     238
                                              5 COMRAM     2     1      1
                         _I2C1_Start
                          _I2C1_Stop
           _I2C1_Write_Byte_Read_Ack
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write_Byte_Read_Ack                             2     2      0      70
                                              3 COMRAM     2     2      0
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C1_Stop                                            0     0      0      24
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C1_Start                                           0     0      0      24
                          _I2C1_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C1_Wait                                            2     2      0      24
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USART2_Start                                         1     1      0      66
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      8     4      4    1020
                                             14 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _I2C1_Check_Data_Stuck                                2     2      0      47
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MAX31865writeConfigByte                              1     1      0     190
                                              5 COMRAM     1     1      0
                  _MAX31865writeByte
 ---------------------------------------------------------------------------------
 (2) _MAX31865writeByte                                    4     3      1     168
                                              1 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _MAX31865readData                                    12    10      2   33539
                                             87 COMRAM     4     2      2
                                             25 BANK0      8     8      0
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              41    35      6   31537
                                             79 COMRAM     8     2      6
                                              0 BANK0     25    25      0
                   _LoRaGetFrequency (ARG)
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     5      4    7040
                                             40 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1208
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1516
                                              7 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              15    11      4    4895
                                             40 COMRAM    15    11      4
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     387
                                              1 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     390
                                              5 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3873
                                             15 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     455
                                              1 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     455
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     767
                                             14 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     922
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             40 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             71 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2414
                                             55 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     638
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                  1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX31865readData
     ___awdiv
       ___awmod (ARG)
     _printf
       _LoRaGetFrequency (ARG)
         _SPI2ReadByte
         ___fldiv
           ___xxtofl (ARG)
         ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
       ___fladd (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _putch (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
   _MAX31865writeConfigByte
     _MAX31865writeByte
   _configureIO
     _I2C1_Check_Data_Stuck
     _I2C1_Initialize
       ___lldiv
     _USART2_Start
     _configADS1110
       _writeADS1110
         _I2C1_Start
           _I2C1_Wait
         _I2C1_Stop
           _I2C1_Wait
         _I2C1_Write_Byte_Read_Ack
           _I2C1_Wait
     _setupAtoD
   _configureSPI
   _printf
     _LoRaGetFrequency (ARG)
       _SPI2ReadByte
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     ___awdiv (ARG)
       ___awmod (ARG)
     ___fladd (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___fleq (ARG)
     ___flge (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     ___flneg (ARG)
     ___flsub (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _putch (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
   _readBattery
   _readRH
     _readADS1110
       _I2C1_Read_Byte
         _I2C1_Wait
       _I2C1_Start
         _I2C1_Wait
       _I2C1_Stop
         _I2C1_Wait
       _I2C1_Write_Byte_Read_Ack
         _I2C1_Wait
   _readTemperature
   _readVFan
   _readVSupply
   _setupInterruptPin
   _transmitData
     _CRC16
     _LoRaClearIRQFlags
       _SPI2WriteByte
     _LoRaGetFrequency
       _SPI2ReadByte
       ___fldiv
         ___xxtofl (ARG)
       ___xxtofl
     _LoRaGetIRQFlags
       _SPI2ReadByte
     _LoRaSleepMode
       _readOpModeRegister
         _SPI2ReadByte
       _writeOpModeRegister
         _SPI2WriteByte
     _LoRaStart
       _LoRaOptimalLoad
         _LoRaSleepMode
           _readOpModeRegister
             _SPI2ReadByte
           _writeOpModeRegister
             _SPI2WriteByte
         _LoRaStandbyMode
           _readOpModeRegister
             _SPI2ReadByte
           _writeOpModeRegister
             _SPI2WriteByte
         _SPI2WriteByte
         _setLoRaMode
           _readOpModeRegister
             _SPI2ReadByte
           _writeOpModeRegister
             _SPI2WriteByte
       _LoRaReset
       _LoRaSetFrequency
         _SPI2WriteByte
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
       _setLoRaMode
         _readOpModeRegister
           _SPI2ReadByte
         _writeOpModeRegister
           _SPI2WriteByte
     _LoRaTXData
       _LoRaStandbyMode
         _readOpModeRegister
           _SPI2ReadByte
         _writeOpModeRegister
           _SPI2WriteByte
       _LoRaTXMode
         _printf
           _LoRaGetFrequency (ARG)
             _SPI2ReadByte
             ___fldiv
               ___xxtofl (ARG)
             ___xxtofl
           ___awdiv (ARG)
             ___awmod (ARG)
           ___fladd (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
               ___lbdiv
                 ___lbmod (ARG)
               ___lbmod
           ___fleq (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___lbdiv (ARG)
                     ___lbmod (ARG)
                   ___lbmod (ARG)
                 ___lbdiv
                   ___lbmod (ARG)
                 ___lbmod
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
           _putch (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
         _readOpModeRegister
           _SPI2ReadByte
         _writeOpModeRegister
           _SPI2WriteByte
       _SPI2WriteByte
       _printf
         _LoRaGetFrequency (ARG)
           _SPI2ReadByte
           ___fldiv
             ___xxtofl (ARG)
           ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
         ___fladd (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___fleq (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lbdiv (ARG)
                   ___lbmod (ARG)
                 ___lbmod (ARG)
               ___lbdiv
                 ___lbmod (ARG)
               ___lbmod
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
         __div_to_l_ (ARG)
         __tdiv_to_l_ (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
         _putch (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
     _printf
       _LoRaGetFrequency (ARG)
         _SPI2ReadByte
         ___fldiv
           ___xxtofl (ARG)
         ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
       ___fladd (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _putch (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)

 _Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5D       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4      12        0.0%
DATA                 0      0      D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Sep 18 16:04:32 2021

                     ?_configureIO 0001                      ?_configureSPI 0001  
                     ___fldiv@aexp 0028                       ___fldiv@bexp 0027  
                     ___fldiv@sign 0020                       ___awdiv@sign 000D  
                               _rh 0068                ___wmul@multiplicand 0004  
               I2C1_Read_Byte@temp 0005                                l211 2BBE  
                              l205 2B8C                                l156 1A5C  
                              l343 2A6A                                l352 2D3A  
                              l193 2C1A                                l266 2E26  
                              l346 2A7C                                l355 2D44  
                              l444 2AD8                                l199 2BEC  
                              l661 0662                                l750 2600  
                              l689 04EC                  readVSupply@result 0006  
                              _Isr 0008                       ___awmod@sign 0007  
                     ?_readADS1110 0006                                wreg 000FE8  
                       _TXSTA2bits 000F72                       ___flmul@aexp 001D  
                     ___flmul@bexp 0022                       ___flmul@sign 001C  
                     ___flmul@temp 0027                       ___flmul@prod 0023  
      MAX31865writeByte@regAddress 0003                               ?_Isr 0001  
                 ?_LoRaGetIRQFlags 0001                       ___fltol@exp1 0032  
                             l1001 22C0                               l1300 11FA  
                             l1400 1F38                               l1340 1470  
                             l1165 27B0                               l1341 146C  
                             l1407 1FB6                               l1088 20BA  
                             l4000 2E1E                               l1089 20E2  
                             l1329 1402                               l1290 1198  
                             l1274 10C6                               l1275 10A4  
                             l4012 2D7A                               l4014 2D7C  
                             l1359 0CD8                               l1376 0F50  
                             l1368 0ECA                               l1369 0EC6  
                             l4130 2120                               l4122 210C  
                             l4034 1734                               l1299 11FE  
                             l4204 25B2                               l4028 1660  
                             l4230 24B6                               l4206 25BE  
                             l4118 20FC                               l4054 0A4A  
                             l4312 2470                               l4304 2448  
                             l4216 25F2                               l4320 276E  
                             l4128 2114                               l4072 0C2E  
                             l4048 09AA                               l5200 17FE  
                             l5040 294A                               l4234 24EA  
                             l4250 2294                               l4306 2454  
                             l4322 277A                               l4138 2156  
                             l4082 2066                               l4066 0B8E  
                             l4058 0A74                               l5050 296E  
                             l4260 22F8                               l5212 1834  
                             l4238 2508                               l4254 22AA  
                             l4246 2260                               l4350 1F9E  
                             l4190 2214                               l4182 2200  
                             l4166 21D4                               l4158 21A4  
                             l4502 04F0                               l5214 1838  
                             l5038 2946                               l3704 11DC  
                             l3624 1058                               l4328 27A2  
                             l4344 1F66                               l4520 064A  
                             l4512 0566                               l4432 01F4  
                             l4424 0176                               l4408 00EE  
                             l5224 186E                               l5048 296A  
                             l3562 0FB4                               l4346 1F6C  
                             l4338 1F48                               l4178 21F0  
                             l5250 18E6                               l5226 1872  
                             l4268 2C56                               l3732 126A  
                             l3724 1244                               l3660 110C  
                             l3652 10EA                               l3636 10B2  
                             l4356 1FDC                               l4348 1F78  
                             l4188 2208                               l3900 254E  
                             l4540 06BC                               l4524 0658  
                             l4508 0504                               l4452 02F6  
                             l4436 0222                               l4380 003A  
                             l5260 191C                               l5236 18A8  
                             l3662 1110                               l3670 1122  
                             l3638 10B6                               l3582 0FF8  
                             l3558 0FB0                               l4294 2430  
                             l4278 23E6                               l4374 2028  
                             l4358 1FE8                               l3830 0E72  
                             l3910 256E                               l4518 063E  
                             l4462 035E                               l5262 1920  
                             l5238 18AC                               l5190 17D2  
                             l3736 1272                               l3680 1188  
                             l3760 0C84                               l4560 06FC  
                             l4536 069C                               l4472 03DA  
                             l4448 02C8                               l4392 005E  
                             l4384 004C                               l5272 1956  
                             l5248 18E2                               l5192 17D6  
                             l5176 1796                               l4800 1300  
                             l5600 1D02                               l3738 1274  
                             l3594 101C                               l3586 0FFC  
                             l4298 2440                               l3762 0C88  
                             l3914 2578                               l3930 269A  
                             l4554 06F8                               l4546 06C0  
                             l4570 0734                               l4490 04AE  
                             l4466 03D6                               l4394 0098  
                             l4386 0056                               l5274 195A  
                             l5186 17C4                               l5178 179A  
                             l4626 2C7A                               l3860 0F2C  
                             l3836 0E90                               l3780 0CC8  
                             l3764 0C98                               l3940 26BC  
                             l4580 07DA                               l4572 0744  
                             l4492 04BA                               l4484 0424  
                             l4388 005A                               l4628 2C7C  
                             l5516 1C00                               l3918 2586  
                             l3950 26DE                               l3934 26A6  
                             l4590 0858                               l5198 17FA  
                             l4822 1362                               l4814 134A  
                             l5614 1D40                       _transmitData 1BE4  
                             l3688 11BC                               l3872 0F6E  
                             l3856 0F0E                               l4576 0756  
                             l4496 04C8                               l4904 288A  
                             l4912 28C2                               l4840 13DA  
                             l4832 13B2                               l4808 1334  
                             l5616 1D4C                    ??_configADS1110 0008  
                             l3698 11D2                               l3778 0CC4  
                             l3954 26EC                               l3946 26D4  
                             l3938 26B4                               l4586 0842  
                             l4578 0760                               l5626 19BE  
                             l3788 0CF6                               l3964 2B1A  
                             l3980 2B3E                               l3892 2530  
                             l4588 0852                               l4852 1418  
                             l4780 12C0                               l3886 2520  
                             l4846 1400                               l5670 1B04  
                             l3976 2B36                               l3968 2B20  
                             l4776 12BC                               l5568 1C74  
                             l3994 2CB4                               l3986 2C9C  
                             l3898 2546                               l4882 14D8  
                             l4858 1436                               l4954 29A2  
                             l4892 150E                               l4796 12FC  
                             l4894 1510                               l4886 1502  
                             l4878 14B4                               l4958 29B6  
                             l5694 1BB2                               l4992 287A  
                             l4984 2858                               l4988 2868  
                             STR_1 FFD9                               STR_2 FF50  
                             STR_3 FF4C                               STR_4 FFA3  
                             STR_5 FFBA                               STR_6 FFCF  
                             STR_7 FFAF                               STR_8 FF29  
                             STR_9 FFE3                               u3030 2552  
                             u3130 2B24                               u3301 2076  
                             u2520 107A                               u4040 086A  
                             u4105 2D04                               u2530 108A  
                             u3090 26C0                               u2700 11E0  
                             u2540 108C                               u3430 221A  
                             u3190 2D8C                               u4070 2C86  
                             u4310 14C2                               u5007 2A5A  
                             u2720 11F4                               u3360 2126  
                             u4080 2C8E                               u4320 14E6  
                             u3281 204A                               u5017 2A72  
                             u2570 10CE                               u3610 245A  
                             u3450 25C2                               u3370 2144  
                             u3290 2054                               u4090 2D02  
                             u5027 2A82                       printf@tmpval 00B6  
                             u5037 2AE0                               u4510 17AA  
                             u4430 295A                               u4270 1466  
                             u5047 2AF2                               u3560 23D4  
                             u3640 277E                               u3720 1FF2  
                             u4600 1882                               u4520 17B8  
                             u3490 2504                               u3570 2404  
                             u2930 0EC0                               u4450 297E  
                             u2780 1250                               u4620 18BC  
                             u4540 17E6                               u3830 026E  
                             u3575 23FA                               u3920 04D6  
                             u4640 18F6                               u4560 180E  
                             u4800 1D2C                               u2970 0F1C  
                             u2890 0CE4                               u3930 04E6  
                             u4395 290A                               u2980 0F3A  
                             u3860 02C8                               u4660 1930  
                             u4580 1848                               u4830 1BE2  
                             u4680 196A                               u3890 0410  
                             u4907 1ADA                               u4917 1AF6  
                             u4927 1BBE                               u4847 19D2  
                             u4937 1D18                               u4857 19EE  
                             u4947 1D58                               u4867 1A6A  
                             u4957 2726                               u4877 1A86  
                             u4967 2738                               u4887 1AA2  
                             u4977 2CC6                               u4897 1ABE  
                             u4987 2CD8                               u4997 1D88  
                 ??_I2C1_Read_Byte 0004            LoRaStandbyMode@regValue 0006  
                             _batt 0072                               _main 19BA  
                             _vfan 006C                               _temp 0070  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 005E                               prodh 000FF4  
                             prodl 000FF3                               start 002C  
                  ___fldiv@new_exp 0021               LoRaTXData@dataLength 005A  
                   ??_configureSPI 0002                       ___param_bank 000000  
                     ?_readBattery 0002                              ??_Isr 0001  
                transmitData@flags 00C4              __size_of_writeADS1110 0020  
                     _BAUDCON2bits 000F70                       ?_readVSupply 0002  
            _I2C1_Check_Data_Stuck 2ACE                      ___fltol@sign1 0031  
                  __end_of___fladd 1290                              ?_main 0001  
                __end_of_I2C1_Wait 2D94                    __end_of___fldiv 1518  
                  __end_of___awdiv 2590                  __end_of_I2C1_Stop 2E90  
                  __end_of___lbdiv 2B42                    __end_of___flneg 2C68  
                            STR_10 FEF5                              STR_11 FFED  
                            STR_12 FFF7                              STR_20 FF73  
                            STR_21 FF73                              STR_13 FF17  
                 _LoRaSetFrequency 2612                              STR_22 FF7F  
                            STR_15 FFC5                              STR_23 FF67  
                            STR_16 FF97                              STR_24 FF8B  
                            _CRC16 2884                              STR_17 FF5A  
                            STR_25 FF3B                              STR_18 FF76  
                       _LoRaTXData 2984                              STR_19 FF6A  
                  __end_of___awmod 26F6                    __end_of___lbmod 2CBC  
                  __end_of___flmul 0F84                    __end_of___flsub 2A14  
                  __end_of___fltol 2482                    __end_of___lldiv 2612  
                  ___awdiv@divisor 000A                SPI2ReadByte@address 0002  
                  __end_of___llmod 27C2                         _LoRaTXMode 2D94  
                            _RCEN1 007E2B                    ___awdiv@counter 000C  
                            _TRMT2 007B91                  ??_I2C1_Initialize 0013  
                  __end_of_dpowers FEF5                              _scale 0888  
                            _putch 2E1C                              main@i 00CD  
                            tablat 000FF5            _MAX31865writeConfigByte 2E3A  
                            ttemp5 005F                              ttemp6 0062  
                            ttemp7 0066                              status 000FD8  
                            wtemp8 005F                    ___lbdiv@divisor 0006  
                     _writeADS1110 2D54                    ___lbdiv@counter 0008  
                  _LoRaOptimalLoad 1D74                       ??_I2C1_Start 0004  
                  __initialization 2A14                 transmitData@i_1025 00C7  
                     __end_of_main 1BE4                 LoRaTXMode@regValue 0058  
        __size_of_MAX31865readData 0238                       ?_setLoRaMode 0001  
            LoRaSleepMode@regValue 0006                writeADS1110@address 0007  
                           ??_main 00CB                             ?_CRC16 0002  
                  _LoRaStandbyMode 2DAE                      __activetblptr 000002  
             __size_of__tdiv_to_l_ 00FE                    _readTemperature 2BDE  
               _readOpModeRegister 2E80                 __size_of_LoRaReset 0028  
               __size_of_LoRaStart 0066                             _ACKEN1 007E2C  
                           _ACKDT1 007E2D                 __end_of_I2C1_Start 2E98  
                 ___llmod@dividend 000F                             ?_scale 0029  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0008                             ?_putch 0001  
              LoRaGetFrequency@mid 0042                LoRaGetFrequency@lsb 0043  
              LoRaGetFrequency@msb 0041                             i2l5500 0026  
             SPI2ReadByte@dataByte 0003                ?_readOpModeRegister 0001  
                _LoRaClearIRQFlags 2E54                             _SPBRG2 000F75  
                ?_LoRaGetFrequency 0029                             _SSP2IF 007D27  
                 _temp_config_byte 005D                             _SSPBUF 000FC9  
                           _TXREG2 000F73                   __end_of___xxtofl 203A  
            readTemperature@result 0006       __size_of_writeOpModeRegister 000E  
               ?_LoRaClearIRQFlags 0001                 ??_LoRaGetFrequency 002D  
                 __end_of__powers_ FE79                             ___flge 222C  
                           ___fleq 2482                  _setupInterruptPin 2E60  
                        ??___fladd 0040                             ___wmul 2D0A  
                        ??___fldiv 0018                          ??___awdiv 000C  
                        ??___lbdiv 0007                          ??___flneg 0006  
              ??_LoRaClearIRQFlags 0005                          ??___awmod 0006  
                        ??___lbmod 0003                          ??___flmul 0018  
                        ??___flsub 0050                          ??___fltol 002D  
                        ??___lldiv 000A                          ??___llmod 0017  
                 __end_of_readVFan 2BDE               __size_of_configureIO 0064  
            MAX31865writeByte@data 0002                             _readRH 2DC8  
           ?_I2C1_Check_Data_Stuck 0001                 ?_setupInterruptPin 0001  
            __end_of_SPI2WriteByte 2A90                             _fround 1518  
                           clear_0 2A3A               ??_readOpModeRegister 0004  
                 ___awdiv@quotient 000E                    ___awmod@divisor 0004  
                           _txData 0078                    ___awmod@counter 0006  
                           _printf 0030                        ?_LoRaTXData 0059  
                SPI2WriteByte@data 0002                        ?_LoRaTXMode 0001  
__size_of_I2C1_Write_Byte_Read_Ack 002A          ?_I2C1_Write_Byte_Read_Ack 0001  
                readBattery@result 0006                ??_setupInterruptPin 0002  
                     __mediumconst FC44                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
             __end_of_configureSPI 2E1C               __size_of_readADS1110 0038  
        ??_MAX31865writeConfigByte 0006          __end_of_LoRaClearIRQFlags 2E60  
                 ___lbdiv@dividend 0007            __end_of_LoRaOptimalLoad 1EFA  
                       ___flge@ff1 0002                         ___flge@ff2 0006  
                     ___xxtofl@arg 000C                       ___xxtofl@exp 000B  
                     ___xxtofl@val 0002                         ___fleq@ff1 0002  
                       ___fleq@ff2 0006                    ___lbmod@divisor 0002  
                       __accesstop 0060            __end_of__initialization 2A44  
                  ___lbmod@counter 0004                         ___flneg@f1 0002  
                    __end_of_CRC16 28DC                      ___rparam_used 000001  
                       ___fltol@f1 0029          __end_of_setupInterruptPin 2E6C  
                __end_of_LoRaReset 2CE4                     __pcstackCOMRAM 0001  
                __end_of_LoRaStart 275C                       __pidataBANK0 2E78  
          __end_of_LoRaStandbyMode 2DC8                      __end_of_scale 0C58  
             __size_of_readBattery 002E                      __end_of_putch 2E2C  
          __end_of_readTemperature 2C0C                   ___lbdiv@quotient 0009  
                          ??_CRC16 0005                transmitData@calcCRC 00C5  
        I2C1_Write_Byte_Read_Ack@d 0004                         __div_to_l_ 2138  
             __size_of_readVSupply 0032              __end_of_LoRaSleepMode 2E08  
                  __div_to_l_@exp1 000F                    __div_to_l_@cntr 000E  
                     readRH@rhTemp 0010                            ??_scale 002D  
                  __div_to_l_@quot 000A                            ??_putch 0002  
                       __pbssBANK0 0060           __end_of_LoRaSetFrequency 2686  
              __size_of_LoRaTXData 004A                      __div_to_l_@f1 0002  
                    __div_to_l_@f2 0006                __size_of_LoRaTXMode 001A  
                   LoRaTXData@data 0059                            ?___flge 0002  
                          ?___fleq 0002                            ?___wmul 0002  
                    ?_SPI2ReadByte 0001                   _MAX31865readData 1782  
                  _I2C1_Initialize 28DC                            ?_readRH 000E  
                          ?_fround 0029                            ?_printf 0050  
             __size_of_setLoRaMode 0014                         CRC16@nData 0002  
               __size_of_setupAtoD 003E                         CRC16@nTemp 0007  
                        ?___xxtofl 0002                          _I2C1_Wait 2D74  
                        _I2C1_Stop 2E88                            _SPBRGH2 000F76  
                          _SSP1ADD 000FC8                            _SSP1BUF 000FC9  
                          _SSP2BUF 000F6F         __size_of_LoRaClearIRQFlags 000C  
                 ?_LoRaOptimalLoad 0001                     readVFan@result 0006  
            __end_of_configADS1110 2E78                          ?_readVFan 0002  
         __size_of_LoRaGetIRQFlags 000C                  __end_of__npowers_ FEAD  
                          __Hparam 0000         __size_of_setupInterruptPin 000C  
                       _scale$3330 002D                            __Lparam 0000  
                   ??_SPI2ReadByte 0002                    __size_of___flge 00D0  
                  __size_of___fleq 008A                            ___fladd 0F84  
                          ___fldiv 1290                            ___awdiv 250C  
                          ___lbdiv 2B08                            ___flneg 2C3A  
                          ___awmod 2686                   ?_LoRaStandbyMode 0001  
                          ___lbmod 2C92                            ___flmul 0C58  
                          ___flsub 29CE                            ___fltol 23C8  
                          ___lldiv 2590                    __size_of___wmul 0026  
                          ___llmod 275C                            _address 00CF  
                  __size_of_readRH 0018                            __pcinit 2A14  
                  __size_of_fround 026A                   ?_readTemperature 0002  
                          __ramtop 1000                            __ptext0 19BA  
                          __ptext1 1BE4                            __ptext2 2984  
                          __ptext3 2D94                            __ptext4 26F6  
                          __ptext5 2612                            __ptext6 2CBC  
                          __ptext7 1D74                            __ptext8 2DE0  
                          __ptext9 2DAE                    __size_of_printf 0858  
              _writeOpModeRegister 2E2C                  __end_of_hexpowers FECD  
                      ?__div_to_l_ 0002              __size_of_configureSPI 0014  
                     __size_of_Isr 0024                            _dpowers FECD  
                          _extTemp 006A                         ??___xxtofl 0006  
                 ___awmod@dividend 0002             MAX31865writeByte@tries 0004  
                       ?_I2C1_Wait 0001                         ?_I2C1_Stop 0001  
                    transmitData@i 00C9                      transmitData@j 00C8  
             end_of_initialization 2A44                       CRC16@wLength 0003  
                          _vsupply 006E                         ??_readVFan 0004  
                    __Lmediumconst FC44               ?_writeOpModeRegister 0001  
          __end_of_I2C1_Initialize 2932                    ___lldiv@divisor 0006  
                __end_of_setupAtoD 2ACE                    ___lldiv@counter 000E  
                    _fanTachoCount 0060   __end_of_I2C1_Write_Byte_Read_Ack 2C92  
          ??_I2C1_Check_Data_Stuck 0002                         _tempStatus 005C  
                          printf@c 00C2                            printf@f 0050  
          __size_of_I2C1_Read_Byte 0026                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                       _configureSPI 2E08  
                    ?_USART2_Start 0001                     __tdiv_to_l_@f1 0002  
                   __tdiv_to_l_@f2 0006          __size_of_LoRaGetFrequency 00CC  
                    ??__tdiv_to_l_ 000A                          _PORTBbits 000F81  
                        _PORTCbits 000F82                       ??_LoRaTXData 005B  
                     ??_LoRaTXMode 0058                        ___fladd@grs 0047  
                 ___lbmod@dividend 0003                      ___xxtofl@sign 000A  
                        _TRISAbits 000F92                          _TRISBbits 000F93  
                        _TRISCbits 000F94                          _TRISDbits 000F95  
                        _TRISEbits 000F96                        ___fldiv@grs 0023  
                      ___fldiv@rem 001C                          Isr@bValue 0001  
                      ___lbmod@rem 0005                        ___flmul@grs 001E  
            ??_writeOpModeRegister 0005                 __end_of_LoRaTXData 29CE  
              __size_of__div_to_l_ 00F4                 __end_of_LoRaTXMode 2DAE  
                    ??_configureIO 0017                   I2C1_Initialize@c 000F  
                   ??_USART2_Start 0002                     __end_of___flge 22FC  
                   __end_of___fleq 250C                  ??_LoRaGetIRQFlags 0004  
          LoRaOptimalLoad@syncWord 0008                     __end_of___wmul 2D30  
                        _LoRaReset 2CBC                          _LoRaStart 26F6  
      __size_of_readOpModeRegister 0008                     __end_of_readRH 2DE0  
                   __end_of_fround 1782                     __end_of_printf 0888  
                    ??_readADS1110 0008                start_initialization 2A14  
                      ??_I2C1_Wait 0002                        ??_I2C1_Stop 0004  
                      __end_of_Isr 002C                __end_of__tdiv_to_l_ 2138  
             __end_of_SPI2ReadByte 2D54                      ?_transmitData 0001  
         __end_of_MAX31865readData 19BA                 writeADS1110@config 0006  
           __size_of_SPI2WriteByte 003E                    ___llmod@divisor 0013  
                  ___llmod@counter 0017                  ?_LoRaSetFrequency 0033  
     LoRaGetFrequency@intermediate 0039                   ?_I2C1_Initialize 000F  
               ??_LoRaSetFrequency 0037                      ??_readBattery 0004  
                         ??___flge 000A                           ??___fleq 000A  
                         ??___wmul 0006                        __pdataBANK0 00CF  
         _I2C1_Write_Byte_Read_Ack 2C68                           ??_readRH 0010  
                         ??_fround 002D                         ?_LoRaReset 0001  
                    ??_readVSupply 0004                         ?_LoRaStart 003E  
                         ??_printf 0056                __end_of_configureIO 2826  
           I2C1_Check_Data_Stuck@i 0003                          ___fladd@a 003C  
                        ___fladd@b 0038                         fround@prec 0037  
                        ___fldiv@a 0014                          ___fldiv@b 0010  
         ?_MAX31865writeConfigByte 0001                          ___flmul@a 0014  
                        ___flmul@b 0010                        __pbssCOMRAM 005C  
                        ___flsub@a 004C                          ___flsub@b 0048  
                    __pcstackBANK0 00AA                  __size_of___xxtofl 0140  
                   ??_transmitData 00C3      I2C1_Write_Byte_Read_Ack@tries 0005  
              __end_of_readADS1110 2B7A      MAX31865writeConfigByte@config 0006  
                    ?_writeADS1110 0006                  LoRaStart@syncWord 0042  
                __size_of_readVFan 0032            LoRaGetIRQFlags@regValue 0004  
                   _I2C1_Read_Byte 2CE4                      _tempHighFault 0076  
                        __pintcode 0008                      __pmediumconst FC44  
                         ?___fladd 0038             __size_of_LoRaSleepMode 0014  
                         ?___fldiv 0010                           ?___awdiv 0008  
                         ?___lbdiv 0006                           ?___flneg 0002  
                         ?___awmod 0002                           ?___lbmod 0002  
                         ?___flmul 0010                           ?___flsub 0048  
                         ?___fltol 0029                           ?___lldiv 0002  
                         ?___llmod 000F                          __npowers_ FE79  
                    ??_setLoRaMode 0006                LoRaSetFrequency@mid 0038  
              LoRaSetFrequency@lsb 0039                LoRaSetFrequency@msb 0037  
                 _LoRaGetFrequency 22FC                      _SPI2WriteByte 2A52  
                      __tdiv_to_l_ 203A                __end_of_readBattery 2C3A  
                   __size_of_CRC16 0058                       ??__div_to_l_ 000A  
     LoRaSetFrequency@intermediate 003A                __end_of_readVSupply 2BAC  
                        _hexpowers FEAD                       _messageCount 0064  
                   __size_of_scale 03D0               __end_of_USART2_Start 2884  
                   __size_of_putch 0010                     CRC16@wCRCTable FC45  
                   ??_writeADS1110 0007                     ___wmul@product 0006  
                         _IOCBbits 000F62                           _LATAbits 000F89  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D             __end_of_I2C1_Read_Byte 2D0A  
              MAX31865readData@LSB 00C8                MAX31865readData@MSB 00C5  
                         _PMD0bits 000F3F                           _PMD1bits 000F3E  
                         _PMD2bits 000F3D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 222C                         _I2C1_Start 2E90  
                         _PIR3bits 000FA4           __size_of_LoRaOptimalLoad 0186  
                      _configureIO 27C2                           _SSP1CON1 000FC6  
                         _SSP1CON2 000FC5     __size_of_I2C1_Check_Data_Stuck 003A  
                        _setupAtoD 2A90                           _SSP1STAT 000FC7  
    __end_of_I2C1_Check_Data_Stuck 2B08                        ??_LoRaReset 0002  
                   ?_SPI2WriteByte 0002    __end_of_MAX31865writeConfigByte 2E48  
                      ??_LoRaStart 0043                      _tempStatusBit 0077  
                   readADS1110@lsb 000D                     readADS1110@msb 000C  
                  I2C1_Read_Byte@a 0004                  _MAX31865writeByte 2932  
                       _ADCON0bits 000FC2                         _ADCON1bits 000FC1  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0002  
           __size_of_configADS1110 000C                         printf@flag 00B0  
            __size_of_SPI2ReadByte 0024                         printf@eexp 00B4  
                       printf@fval 00BE                         printf@prec 00B2  
               ?_MAX31865writeByte 0002           __size_of_LoRaStandbyMode 001A  
              __end_of_setLoRaMode 2DF4                        _readADS1110 2B42  
              setLoRaMode@regValue 0006           __size_of_readTemperature 002E  
             SPI2WriteByte@address 0004                      _LoRaSleepMode 2DF4  
                        copy_data0 2A28                           _i2cFault 0074  
              ??_MAX31865writeByte 0003             __end_ofCRC16@wCRCTable FE45  
                  _LoRaGetIRQFlags 2E48                    ?_I2C1_Read_Byte 0001  
                         __Hrparam 0000                           __Lrparam 0000  
                      _readBattery 2C0C                         ?_setupAtoD 0001  
             __end_of_transmitData 1D74                       _SPI2ReadByte 2D30  
                 __size_of___fladd 030C          __end_of_MAX31865writeByte 2984  
                 __size_of___fldiv 0288                   __size_of___awdiv 0084  
                 __size_of___lbdiv 003A                   __size_of___flneg 002E  
                 __size_of___awmod 0070                   __size_of___lbmod 002A  
                 __size_of___flmul 032C                   __size_of___flsub 0046  
                 __size_of___fltol 00BA                   __size_of___lldiv 0082  
                 __size_of___llmod 0066                        _fround$3328 0033  
                      _fround$3329 002F                        _readVSupply 2B7A  
           MAX31865readData@HFTLSB 00C6             MAX31865readData@HFTMSB 00C3  
                       _ANSELAbits 000F38                         _ANSELBbits 000F39  
                       _ANSELCbits 000F3A                         _ANSELDbits 000F3B  
                       _ANSELEbits 000F3C             MAX31865readData@LFTLSB 00C7  
           MAX31865readData@LFTMSB 00C4                           ___xxtofl 1EFA  
                   ?_LoRaSleepMode 0001                           __ptext10 2DF4  
                         __ptext11 2E2C                           __ptext20 2E60  
                         __ptext12 2E80                           __ptext21 2B7A  
                         __ptext13 2E48                           __ptext30 2A90  
                         __ptext22 2BAC                           __ptext14 22FC  
                         __ptext31 2E6C                           __ptext23 2BDE  
                         __ptext15 1290                           __ptext40 2E3A  
                         __ptext32 2D54                           __ptext24 2DC8  
                         __ptext16 2D30                           __ptext41 2932  
                         __ptext33 2C68                           __ptext25 2B42  
                         __ptext17 2E54                           __ptext50 2B08  
                         __ptext42 1782                           __ptext34 2E88  
                         __ptext26 2CE4                           __ptext18 2A52  
                         __ptext51 0C58                           __ptext43 0030  
                         __ptext35 2E90                           __ptext27 2C0C  
                         __ptext19 2884                           __ptext60 0F84  
                         __ptext52 203A                           __ptext44 0888  
                         __ptext36 2D74                           __ptext28 2E08  
                         __ptext61 2C3A                           __ptext53 2138  
                         __ptext45 2686                           __ptext37 2826  
                         __ptext29 27C2                           __ptext62 222C  
                         __ptext54 1EFA                           __ptext46 250C  
                         __ptext38 28DC                           __ptext63 2482  
                         __ptext55 2D0A                           __ptext47 2E1C  
                         __ptext39 2ACE                           __ptext56 275C  
                         __ptext48 1518                           __ptext57 2590  
                         __ptext49 2C92                           __ptext58 23C8  
                         __ptext59 29CE        __end_of_writeOpModeRegister 2E3A  
                     _SSP1CON2bits 000FC5                           __powers_ FE45  
                     _SSP2CON1bits 000F6C                  ?_MAX31865readData 0058  
                      _OSCCON2bits 000FD2                           _readVFan 2BAC  
                    LoRaStart@freq 003E                 ??_MAX31865readData 005A  
                     _tempLowFault 0075                      __size_of_main 022A  
                    _configADS1110 2E6C            LoRaGetFrequency@freqMHz 003D  
       ??_I2C1_Write_Byte_Read_Ack 0004                      CRC16@wCRCWord 0008  
          LoRaSetFrequency@freqMHz 0033                        ?_I2C1_Start 0001  
                         int$flags 005E                    ??_SPI2WriteByte 0003  
       __end_of_readOpModeRegister 2E88                          printf@idx 00AE  
                      _setLoRaMode 2DE0                          printf@val 00BA  
             USART2_Start@baudrate 0002                       _SSP2STATbits 000F6D  
                ??_LoRaOptimalLoad 0007          __size_of_LoRaSetFrequency 0074  
             __end_of_writeADS1110 2D74                          putch@data 0002  
                      _OSCTUNEbits 000F9B                         _INTCONbits 000FF2  
            __size_of_USART2_Start 005E                           scale@scl 0031  
      writeOpModeRegister@regValue 0005            __end_of_LoRaGetIRQFlags 2E54  
                ??_LoRaStandbyMode 0006                           intlevel2 0000  
                 __tdiv_to_l_@exp1 0012                   __tdiv_to_l_@cntr 0011  
         __end_of_LoRaGetFrequency 23C8                   __tdiv_to_l_@quot 000D  
                      LoRaTXData@i 005B                     ?_configADS1110 0001  
                     _VREFCON0bits 000F42                   ___lldiv@dividend 0002  
                ??_readTemperature 0004   __size_of_MAX31865writeConfigByte 000E  
                       _RCSTA2bits 000F71                         _OSCCONbits 000FD3  
            MAX31865readData@tries 00C9                     I2C1_Wait@tries 0003  
                         printf@ap 00AF                        ??_setupAtoD 0002  
       __size_of_MAX31865writeByte 0052                       _USART2_Start 2826  
         __size_of_I2C1_Initialize 0056                       ?__tdiv_to_l_ 0002  
                      _printf$3331 00AA                   ___lldiv@quotient 000A  
                  ??_LoRaSleepMode 0006                __size_of_I2C1_Start 0008  
                    ___fladd@signs 0044                 __size_of_I2C1_Wait 0020  
                     ___fladd@aexp 0045                       ___fladd@bexp 0046  
               __size_of_I2C1_Stop 0008              __size_of_transmitData 0190  
               readADS1110@address 000B  
